{"ast":null,"code":"var fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar pluginTmpl = templateFile(\"/plugin.tmpl\");\nvar configTmpl = templateFile(\"/config.tmpl\");\nvar configItem = templateFile(\"/config.item.tmpl\");\nvar inlineTemp = templateFile(\"/inline.template.tmpl\");\nvar pluginItemTmpl = fs.readFileSync(path.resolve(__dirname, \"../\", \"templates/plugin.item.tmpl\"), \"utf-8\");\n\nfunction templateFile(filepath) {\n  return fs.readFileSync(path.join(__dirname, \"/../templates\", filepath || \"\"), \"utf-8\");\n}\n/**\n * @type {{page: Function, markup: Function, client:js: Function, templates: Function}}\n */\n\n\nmodule.exports = {\n  /**\n   * Create the url config for each section of the ui\n   * @param hooks\n   * @param ui\n   */\n  \"page\": function (hooks, ui) {\n    var config = hooks.map(transformConfig).reduce(createConfigItem, {});\n    return {\n      /**\n       * pagesConfig - This is the angular configuration such as routes\n       */\n      pagesConfig: configTmpl.replace(\"%when%\", hooks.reduce(createAngularRoutes, \"\")).replace(\"%pages%\", JSON.stringify(config, null, 4)),\n\n      /**\n       * pagesConfig in object form\n       */\n      pagesObj: config,\n      pageMarkup: function () {\n        return preAngular(ui.pluginManager.plugins, config, ui);\n      }\n    };\n  },\n\n  /**\n   * Controller markup for each plugin\n   * @param hooks\n   * @returns {*}\n   */\n  \"markup\": function (hooks) {\n    return hooks.reduce(pluginTemplate, \"\");\n  },\n\n  /**\n   * @param hooks\n   * @param {UI} ui\n   * @returns {*|string}\n   */\n  \"client:js\": function (hooks, ui) {\n    /**\n     * Add client JS from Browsersync Plugins\n     */\n    ui.bsPlugins.forEach(function (plugin) {\n      if (plugin.has(\"client:js\")) {\n        plugin.get(\"client:js\").forEach(function (value) {\n          hooks.push(value);\n        });\n      }\n    });\n    var out = hooks.reduce(function (all, item) {\n      if (typeof item === \"string\") {\n        all += \";\" + item;\n      } else if (Array.isArray(item)) {\n        item.forEach(function (item) {\n          all += \";\" + item;\n        });\n      }\n\n      return all;\n    }, \"\");\n    return out;\n  },\n\n  /**\n   * @param hooks\n   * @param initial\n   * @param {UI} ui\n   * @returns {String}\n   */\n  \"templates\": function (hooks, initial, ui) {\n    /**\n     * Add templates from each Browsersync registered plugin\n     * @type {string}\n     */\n    var pluginDirectives = ui.bsPlugins.reduce(function (all, plugin) {\n      if (!plugin.has(\"templates\")) {\n        return all;\n      }\n      /**\n       * Slugify-ish the plugin name\n       *  eg: Test Browsersync Plugin\n       *    = test-browsersync-plugin\n       * @type {string}\n       */\n\n\n      var slug = plugin.get(\"name\").trim().split(\" \").map(function (word) {\n        return word.trim().toLowerCase();\n      }).join(\"-\");\n      /**\n       * For every plugin that has templates, wrap\n       * the markup in the <script type=\"text/ng-template\" id=\"{{slug}}\"></script>\n       * markup to result in the single output string.\n       */\n\n      plugin.get(\"templates\").forEach(function (value, key) {\n        all += angularWrap([slug, path.basename(key)].join(\"/\"), value);\n      });\n      return all;\n    }, \"\");\n    /**\n     * Combine the markup from the plugins done above with any\n     * others registered via hooks + initial\n     * to create the final markup\n     */\n\n    return [pluginDirectives, createInlineTemplates(hooks.concat([initial]))].join(\"\");\n  },\n\n  /**\n   * Allow plugins to register toggle-able elements\n   * @param hooks\n   * @returns {{}}\n   */\n  \"elements\": function (hooks) {\n    var obj = {};\n    hooks.forEach(function (elements) {\n      elements.forEach(function (item) {\n        if (!obj[item.name]) {\n          obj[item.name] = item;\n        }\n      });\n    });\n    return obj;\n  }\n};\n/**\n * @param hooks\n * @returns {String}\n */\n\nfunction createInlineTemplates(hooks) {\n  return hooks.reduce(function (combined, item) {\n    return combined + item.reduce(function (all, filepath) {\n      return all + angularWrap(path.basename(filepath), fs.readFileSync(filepath));\n    }, \"\");\n  }, \"\");\n}\n/**\n * @param item\n * @returns {*}\n */\n\n\nfunction transformConfig(item) {\n  return item;\n}\n/**\n * @param {String} all\n * @param {Object} item\n * @returns {*}\n */\n\n\nfunction createAngularRoutes(all, item) {\n  return all + configItem.replace(/%(.+)%/g, function () {\n    var key = arguments[1];\n\n    if (item[key]) {\n      return item[key];\n    }\n  });\n}\n/**\n * @param joined\n * @param item\n * @returns {*}\n */\n\n\nfunction createConfigItem(joined, item) {\n  if (item.path === \"/\") {\n    joined[\"overview\"] = item;\n  } else {\n    joined[item.path.slice(1)] = item;\n  }\n\n  return joined;\n}\n/**\n * @returns {*}\n */\n\n\nfunction pluginTemplate(combined, item) {\n  return [combined, pluginTmpl.replace(\"%markup%\", item)].join(\"\\n\");\n}\n/**\n * @param plugins\n * @param config\n * @returns {*}\n */\n\n\nfunction preAngular(plugins, config, ui) {\n  return Object.keys(plugins).filter(function (key) {\n    return config[key]; // only work on plugins that have pages\n  }).map(function (key) {\n    if (key === \"plugins\") {\n      var pluginMarkup = ui.bsPlugins.reduce(function (all, item, i) {\n        all += pluginItemTmpl.replace(\"%content%\", item.get(\"markup\") || \"\").replace(/%index%/g, i).replace(/%name%/g, item.get(\"name\"));\n        return all;\n      }, \"\");\n      plugins[key].hooks.markup = plugins[key].hooks.markup.replace(\"%pluginlist%\", pluginMarkup);\n    }\n\n    return angularWrap(config[key].template, bindOnce(plugins[key].hooks.markup, config[key]));\n  }).reduce(function (combined, item) {\n    return combined + item;\n  }, \"\");\n}\n/**\n * @param templateName\n * @param markup\n * @returns {*}\n */\n\n\nfunction angularWrap(templateName, markup) {\n  return inlineTemp.replace(\"%content%\", markup).replace(\"%id%\", templateName);\n}\n/**\n * @param markup\n * @param config\n * @returns {*|string}\n */\n\n\nfunction bindOnce(markup, config) {\n  return markup.toString().replace(/\\{\\{ctrl.section\\.(.+?)\\}\\}/g, function ($1, $2) {\n    return config[$2] || \"\";\n  });\n}\n\nmodule.exports.bindOnce = bindOnce;","map":{"version":3,"names":["fs","require","path","pluginTmpl","templateFile","configTmpl","configItem","inlineTemp","pluginItemTmpl","readFileSync","resolve","__dirname","filepath","join","module","exports","hooks","ui","config","map","transformConfig","reduce","createConfigItem","pagesConfig","replace","createAngularRoutes","JSON","stringify","pagesObj","pageMarkup","preAngular","pluginManager","plugins","pluginTemplate","bsPlugins","forEach","plugin","has","get","value","push","out","all","item","Array","isArray","initial","pluginDirectives","slug","trim","split","word","toLowerCase","key","angularWrap","basename","createInlineTemplates","concat","obj","elements","name","combined","arguments","joined","slice","Object","keys","filter","pluginMarkup","i","markup","template","bindOnce","templateName","toString","$1","$2"],"sources":["/Users/johnberetty/node_modules/browser-sync-ui/lib/hooks.js"],"sourcesContent":["var fs         = require(\"fs\");\nvar path       = require(\"path\");\n\nvar pluginTmpl     = templateFile(\"/plugin.tmpl\");\nvar configTmpl     = templateFile(\"/config.tmpl\");\nvar configItem     = templateFile(\"/config.item.tmpl\");\nvar inlineTemp     = templateFile(\"/inline.template.tmpl\");\nvar pluginItemTmpl = fs.readFileSync(path.resolve(__dirname, \"../\", \"templates/plugin.item.tmpl\"), \"utf-8\");\n\nfunction templateFile (filepath) {\n    return fs.readFileSync(path.join(__dirname, \"/../templates\", filepath || \"\"), \"utf-8\");\n}\n\n/**\n * @type {{page: Function, markup: Function, client:js: Function, templates: Function}}\n */\nmodule.exports = {\n    /**\n     * Create the url config for each section of the ui\n     * @param hooks\n     * @param ui\n     */\n    \"page\": function (hooks, ui) {\n\n        var config = hooks\n            .map(transformConfig)\n            .reduce(createConfigItem, {});\n\n        return {\n            /**\n             * pagesConfig - This is the angular configuration such as routes\n             */\n            pagesConfig: configTmpl\n                .replace(\"%when%\", hooks.reduce(\n                    createAngularRoutes,\n                    \"\"\n                ))\n                .replace(\"%pages%\", JSON.stringify(\n                    config,\n                    null,\n                    4\n                )),\n            /**\n             * pagesConfig in object form\n             */\n            pagesObj: config,\n            pageMarkup: function () {\n                return preAngular(ui.pluginManager.plugins, config, ui);\n            }\n        };\n    },\n    /**\n     * Controller markup for each plugin\n     * @param hooks\n     * @returns {*}\n     */\n    \"markup\": function (hooks) {\n        return hooks.reduce(pluginTemplate, \"\");\n    },\n    /**\n     * @param hooks\n     * @param {UI} ui\n     * @returns {*|string}\n     */\n    \"client:js\": function (hooks, ui) {\n\n        /**\n         * Add client JS from Browsersync Plugins\n         */\n        ui.bsPlugins.forEach(function (plugin) {\n            if (plugin.has(\"client:js\")) {\n                plugin.get(\"client:js\").forEach(function (value) {\n                    hooks.push(value);\n                });\n            }\n        });\n\n        var out = hooks.reduce(function (all, item) {\n            if (typeof item === \"string\") {\n                all += \";\" + item;\n            } else if (Array.isArray(item)) {\n                item.forEach(function (item) {\n                    all += \";\" + item;\n                });\n            }\n            return all;\n        }, \"\");\n\n        return out;\n    },\n    /**\n     * @param hooks\n     * @param initial\n     * @param {UI} ui\n     * @returns {String}\n     */\n    \"templates\": function (hooks, initial, ui) {\n\n        /**\n         * Add templates from each Browsersync registered plugin\n         * @type {string}\n         */\n        var pluginDirectives = ui.bsPlugins.reduce(function (all, plugin) {\n\n            if (!plugin.has(\"templates\")) {\n                return all;\n            }\n\n            /**\n             * Slugify-ish the plugin name\n             *  eg: Test Browsersync Plugin\n             *    = test-browsersync-plugin\n             * @type {string}\n             */\n            var slug = plugin.get(\"name\")\n                .trim()\n                .split(\" \")\n                .map(function (word) {\n                    return word.trim().toLowerCase();\n                })\n                .join(\"-\");\n\n            /**\n             * For every plugin that has templates, wrap\n             * the markup in the <script type=\"text/ng-template\" id=\"{{slug}}\"></script>\n             * markup to result in the single output string.\n             */\n            plugin.get(\"templates\").forEach(function (value, key) {\n                all +=  angularWrap([slug, path.basename(key)].join(\"/\"), value);\n            });\n\n            return all;\n\n        }, \"\");\n\n        /**\n         * Combine the markup from the plugins done above with any\n         * others registered via hooks + initial\n         * to create the final markup\n         */\n        return [pluginDirectives, createInlineTemplates(hooks.concat([initial]))].join(\"\");\n    },\n    /**\n     * Allow plugins to register toggle-able elements\n     * @param hooks\n     * @returns {{}}\n     */\n    \"elements\": function (hooks) {\n        var obj = {};\n        hooks.forEach(function (elements) {\n            elements.forEach(function (item) {\n                if (!obj[item.name]) {\n                    obj[item.name] = item;\n                }\n            });\n        });\n        return obj;\n    }\n};\n\n/**\n * @param hooks\n * @returns {String}\n */\nfunction createInlineTemplates (hooks) {\n    return hooks.reduce(function (combined, item) {\n        return combined + item.reduce(function (all, filepath) {\n            return all + angularWrap(\n                path.basename(filepath),\n                fs.readFileSync(filepath));\n        }, \"\");\n    }, \"\");\n}\n\n/**\n * @param item\n * @returns {*}\n */\nfunction transformConfig (item) {\n    return item;\n}\n\n/**\n * @param {String} all\n * @param {Object} item\n * @returns {*}\n */\nfunction createAngularRoutes(all, item) {\n    return all + configItem.replace(/%(.+)%/g, function () {\n        var key = arguments[1];\n        if (item[key]) {\n            return item[key];\n        }\n    });\n}\n\n/**\n * @param joined\n * @param item\n * @returns {*}\n */\nfunction createConfigItem (joined, item) {\n    if (item.path === \"/\") {\n        joined[\"overview\"] = item;\n    } else {\n        joined[item.path.slice(1)] = item;\n    }\n    return joined;\n}\n\n/**\n * @returns {*}\n */\nfunction pluginTemplate (combined, item) {\n    return [combined, pluginTmpl.replace(\"%markup%\", item)].join(\"\\n\");\n}\n\n/**\n * @param plugins\n * @param config\n * @returns {*}\n */\nfunction preAngular (plugins, config, ui) {\n\n    return Object.keys(plugins)\n        .filter(function (key) {\n            return config[key]; // only work on plugins that have pages\n        })\n        .map(function (key) {\n            if (key === \"plugins\") {\n                var pluginMarkup = ui.bsPlugins.reduce(function (all, item, i) {\n                    all += pluginItemTmpl\n                        .replace(\"%content%\", item.get(\"markup\") || \"\")\n                        .replace(/%index%/g, i)\n                        .replace(/%name%/g, item.get(\"name\"));\n\n                    return all;\n                }, \"\");\n                plugins[key].hooks.markup = plugins[key].hooks.markup.replace(\"%pluginlist%\", pluginMarkup);\n            }\n            return angularWrap(config[key].template, bindOnce(plugins[key].hooks.markup, config[key]));\n        })\n        .reduce(function (combined, item) {\n            return combined + item;\n        }, \"\");\n}\n\n/**\n * @param templateName\n * @param markup\n * @returns {*}\n */\nfunction angularWrap (templateName, markup) {\n    return inlineTemp\n        .replace(\"%content%\", markup)\n        .replace(\"%id%\", templateName);\n}\n\n/**\n * @param markup\n * @param config\n * @returns {*|string}\n */\nfunction bindOnce (markup, config) {\n    return markup.toString().replace(/\\{\\{ctrl.section\\.(.+?)\\}\\}/g, function ($1, $2) {\n        return config[$2] || \"\";\n    });\n}\n\nmodule.exports.bindOnce = bindOnce;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}