{"ast":null,"code":"// Do not edit the parser directly. This is a generated file created using a build script and the PEG grammar.\nmodule.exports = function () {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.offset = offset;\n    this.line = line;\n    this.column = column;\n    this.name = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        peg$FAILED = {},\n        peg$startRuleFunctions = {\n      start: peg$parsestart\n    },\n        peg$startRuleFunction = peg$parsestart,\n        peg$c0 = [],\n        peg$c1 = {\n      type: \"other\",\n      description: \"buffer\"\n    },\n        peg$c2 = peg$FAILED,\n        peg$c3 = function (e, w) {\n      return {\n        \"buffer\": e + w.join('')\n      };\n    },\n        peg$c4 = void 0,\n        peg$c5 = function (c) {\n      return c;\n    },\n        peg$c6 = function (b) {\n      return {\n        \"buffer\": b.join('')\n      };\n    },\n        peg$c7 = \":\",\n        peg$c8 = {\n      type: \"literal\",\n      value: \":\",\n      description: \"\\\":\\\"\"\n    },\n        peg$c9 = function (c) {\n      return c;\n    },\n        peg$c10 = function (c, e) {\n      return {\n        color: c,\n        text: e.join('')\n      };\n    },\n        peg$c11 = {\n      type: \"any\",\n      description: \"any character\"\n    },\n        peg$c12 = function (a) {\n      return a;\n    },\n        peg$c13 = \"{\",\n        peg$c14 = {\n      type: \"literal\",\n      value: \"{\",\n      description: \"\\\"{\\\"\"\n    },\n        peg$c15 = function (out) {\n      return out;\n    },\n        peg$c16 = \"}\",\n        peg$c17 = {\n      type: \"literal\",\n      value: \"}\",\n      description: \"\\\"}\\\"\"\n    },\n        peg$c18 = \"\\\\\",\n        peg$c19 = {\n      type: \"literal\",\n      value: \"\\\\\",\n      description: \"\\\"\\\\\\\\\\\"\"\n    },\n        peg$c20 = /^[a-zA-Z.]/,\n        peg$c21 = {\n      type: \"class\",\n      value: \"[a-zA-Z.]\",\n      description: \"[a-zA-Z.]\"\n    },\n        peg$c22 = function (c) {\n      return c.join('');\n    },\n        peg$c23 = null,\n        peg$c24 = function (r, e) {\n      return {\n        reset: true,\n        text: e ? e.join('') : ''\n      };\n    },\n        peg$c25 = function (after) {\n      return after;\n    },\n        peg$c26 = \"\\n\",\n        peg$c27 = {\n      type: \"literal\",\n      value: \"\\n\",\n      description: \"\\\"\\\\n\\\"\"\n    },\n        peg$c28 = \"\\r\\n\",\n        peg$c29 = {\n      type: \"literal\",\n      value: \"\\r\\n\",\n      description: \"\\\"\\\\r\\\\n\\\"\"\n    },\n        peg$c30 = \"\\r\",\n        peg$c31 = {\n      type: \"literal\",\n      value: \"\\r\",\n      description: \"\\\"\\\\r\\\"\"\n    },\n        peg$c32 = \"\\u2028\",\n        peg$c33 = {\n      type: \"literal\",\n      value: \"\\u2028\",\n      description: \"\\\"\\\\u2028\\\"\"\n    },\n        peg$c34 = \"\\u2029\",\n        peg$c35 = {\n      type: \"literal\",\n      value: \"\\u2029\",\n      description: \"\\\"\\\\u2029\\\"\"\n    },\n        peg$c36 = /^[\\t\\x0B\\f \\xA0\\uFEFF]/,\n        peg$c37 = {\n      type: \"class\",\n      value: \"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\",\n      description: \"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\"\n    },\n        peg$currPos = 0,\n        peg$reportedPos = 0,\n        peg$cachedPos = 0,\n        peg$cachedPosDetails = {\n      line: 1,\n      column: 1,\n      seenCR: false\n    },\n        peg$maxFailPos = 0,\n        peg$maxFailExpected = [],\n        peg$silentFails = 0,\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(null, [{\n        type: \"other\",\n        description: description\n      }], peg$reportedPos);\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n\n          if (ch === \"\\n\") {\n            if (!details.seenCR) {\n              details.line++;\n            }\n\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = {\n            line: 1,\n            column: 1,\n            seenCR: false\n          };\n        }\n\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n        expected.sort(function (a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n          }\n\n          return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n            return '\\\\x0' + hex(ch);\n          }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n            return '\\\\x' + hex(ch);\n          }).replace(/[\\u0180-\\u0FFF]/g, function (ch) {\n            return '\\\\u0' + hex(ch);\n          }).replace(/[\\u1080-\\uFFFF]/g, function (ch) {\n            return '\\\\u' + hex(ch);\n          });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc,\n            foundDesc,\n            i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1 ? expectedDescs.slice(0, -1).join(\", \") + \" or \" + expectedDescs[expected.length - 1] : expectedDescs[0];\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(message !== null ? message : buildMessage(expected, found), expected, found, pos, posDetails.line, posDetails.column);\n    }\n\n    function peg$parsestart() {\n      var s0;\n      s0 = peg$parsebody();\n      return s0;\n    }\n\n    function peg$parsebody() {\n      var s0, s1;\n      s0 = [];\n      s1 = peg$parseitem();\n\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseitem();\n      }\n\n      return s0;\n    }\n\n    function peg$parseitem() {\n      var s0;\n      s0 = peg$parsetag();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsebuffer();\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsereset();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsebuffer() {\n      var s0, s1, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseeol();\n\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsews();\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsews();\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c3(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsetag();\n        peg$silentFails--;\n\n        if (s4 === peg$FAILED) {\n          s3 = peg$c4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsereset();\n          peg$silentFails--;\n\n          if (s5 === peg$FAILED) {\n            s4 = peg$c4;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c2;\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseany();\n\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s2;\n              s3 = peg$c5(s5);\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsetag();\n            peg$silentFails--;\n\n            if (s4 === peg$FAILED) {\n              s3 = peg$c4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$currPos;\n              peg$silentFails++;\n              s5 = peg$parsereset();\n              peg$silentFails--;\n\n              if (s5 === peg$FAILED) {\n                s4 = peg$c4;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c2;\n              }\n\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseany();\n\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s2;\n                  s3 = peg$c5(s5);\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c2;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          }\n        } else {\n          s1 = peg$c2;\n        }\n\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c6(s1);\n        }\n\n        s0 = s1;\n      }\n\n      peg$silentFails--;\n\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c1);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsetag() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n      s0 = peg$currPos;\n      s1 = peg$parseld();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecolor();\n\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c8);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseld();\n            peg$silentFails--;\n\n            if (s7 === peg$FAILED) {\n              s6 = peg$c4;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$c2;\n            }\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              s8 = peg$parserd();\n              peg$silentFails--;\n\n              if (s8 === peg$FAILED) {\n                s7 = peg$c4;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$c2;\n              }\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseany();\n\n                if (s8 !== peg$FAILED) {\n                  peg$reportedPos = s5;\n                  s6 = peg$c9(s8);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c2;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c2;\n            }\n\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$currPos;\n                s6 = peg$currPos;\n                peg$silentFails++;\n                s7 = peg$parseld();\n                peg$silentFails--;\n\n                if (s7 === peg$FAILED) {\n                  s6 = peg$c4;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$c2;\n                }\n\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  peg$silentFails++;\n                  s8 = peg$parserd();\n                  peg$silentFails--;\n\n                  if (s8 === peg$FAILED) {\n                    s7 = peg$c4;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$c2;\n                  }\n\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseany();\n\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s5;\n                      s6 = peg$c9(s8);\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              }\n            } else {\n              s4 = peg$c2;\n            }\n\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c10(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseany() {\n      var s0, s1;\n      s0 = peg$parseesc_left();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseesc_right();\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n\n          if (input.length > peg$currPos) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c11);\n            }\n          }\n\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c12(s1);\n          }\n\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseesc_left() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parseesc_seq();\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s2 = peg$c13;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c14);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c15(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseesc_right() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parseesc_seq();\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s2 = peg$c16;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c17);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c15(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseesc_seq() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s0 = peg$c18;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c19);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = [];\n\n      if (peg$c20.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c21);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n\n          if (peg$c20.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c21);\n            }\n          }\n        }\n      } else {\n        s1 = peg$c2;\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c22(s1);\n      }\n\n      s0 = s1;\n      return s0;\n    }\n\n    function peg$parsereset() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseesc_right();\n      peg$silentFails--;\n\n      if (s3 === peg$FAILED) {\n        s2 = peg$c4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parserd();\n\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseafter();\n\n        if (s2 === peg$FAILED) {\n          s2 = peg$c23;\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c24(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseafter() {\n      var s0, s1, s2, s3, s4;\n      s0 = [];\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseld();\n      peg$silentFails--;\n\n      if (s3 === peg$FAILED) {\n        s2 = peg$c4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parserd();\n        peg$silentFails--;\n\n        if (s4 === peg$FAILED) {\n          s3 = peg$c4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseany();\n\n          if (s4 !== peg$FAILED) {\n            peg$reportedPos = s1;\n            s2 = peg$c25(s4);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          s1 = peg$currPos;\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseld();\n          peg$silentFails--;\n\n          if (s3 === peg$FAILED) {\n            s2 = peg$c4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parserd();\n            peg$silentFails--;\n\n            if (s4 === peg$FAILED) {\n              s3 = peg$c4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseany();\n\n              if (s4 !== peg$FAILED) {\n                peg$reportedPos = s1;\n                s2 = peg$c25(s4);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        }\n      } else {\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseld() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s0 = peg$c13;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c14);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parserd() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 125) {\n        s0 = peg$c16;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c17);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseeol() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s0 = peg$c26;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c27);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c28) {\n          s0 = peg$c28;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c29);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 13) {\n            s0 = peg$c30;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c31);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8232) {\n              s0 = peg$c32;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n              }\n            }\n\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 8233) {\n                s0 = peg$c34;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c35);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0;\n\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c37);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseeol();\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({\n          type: \"end\",\n          description: \"end of input\"\n        });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse: parse\n  };\n}();","map":{"version":3,"names":["module","exports","peg$subclass","child","parent","ctor","constructor","prototype","SyntaxError","message","expected","found","offset","line","column","name","Error","parse","input","options","arguments","length","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","type","description","peg$c2","peg$c3","e","w","join","peg$c4","peg$c5","c","peg$c6","b","peg$c7","peg$c8","value","peg$c9","peg$c10","color","text","peg$c11","peg$c12","a","peg$c13","peg$c14","peg$c15","out","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","r","reset","peg$c25","after","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$currPos","peg$reportedPos","peg$cachedPos","peg$cachedPosDetails","seenCR","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","peg$computePosDetails","peg$buildException","error","pos","advance","details","startPos","endPos","p","ch","charAt","peg$fail","push","cleanupExpected","i","sort","splice","buildMessage","stringEscape","s","hex","charCodeAt","toString","toUpperCase","replace","expectedDescs","Array","expectedDesc","foundDesc","slice","posDetails","s0","peg$parsebody","s1","peg$parseitem","peg$parsetag","peg$parsebuffer","peg$parsereset","s2","s3","s4","s5","peg$parseeol","peg$parsews","peg$parseany","s6","s7","s8","peg$parseld","peg$parsecolor","peg$parserd","peg$parseesc_left","peg$parseesc_right","peg$parseesc_seq","test","peg$parseafter","substr"],"sources":["/Users/johnberetty/node_modules/tfunk/lib/parser.js"],"sourcesContent":["// Do not edit the parser directly. This is a generated file created using a build script and the PEG grammar.\nmodule.exports = (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = [],\n        peg$c1 = { type: \"other\", description: \"buffer\" },\n        peg$c2 = peg$FAILED,\n        peg$c3 = function(e, w) { return {\"buffer\": e + w.join('')} },\n        peg$c4 = void 0,\n        peg$c5 = function(c) { return c },\n        peg$c6 = function(b) { return {\"buffer\": b.join('')} },\n        peg$c7 = \":\",\n        peg$c8 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c9 = function(c) {return c},\n        peg$c10 = function(c, e) { return {color: c, text: e.join('')}},\n        peg$c11 = { type: \"any\", description: \"any character\" },\n        peg$c12 = function(a) {return a},\n        peg$c13 = \"{\",\n        peg$c14 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c15 = function(out) {return out},\n        peg$c16 = \"}\",\n        peg$c17 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c18 = \"\\\\\",\n        peg$c19 = { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\n        peg$c20 = /^[a-zA-Z.]/,\n        peg$c21 = { type: \"class\", value: \"[a-zA-Z.]\", description: \"[a-zA-Z.]\" },\n        peg$c22 = function(c) { return c.join('') },\n        peg$c23 = null,\n        peg$c24 = function(r, e) {return {reset: true, text: e ? e.join('') : '' }},\n        peg$c25 = function(after) {return after},\n        peg$c26 = \"\\n\",\n        peg$c27 = { type: \"literal\", value: \"\\n\", description: \"\\\"\\\\n\\\"\" },\n        peg$c28 = \"\\r\\n\",\n        peg$c29 = { type: \"literal\", value: \"\\r\\n\", description: \"\\\"\\\\r\\\\n\\\"\" },\n        peg$c30 = \"\\r\",\n        peg$c31 = { type: \"literal\", value: \"\\r\", description: \"\\\"\\\\r\\\"\" },\n        peg$c32 = \"\\u2028\",\n        peg$c33 = { type: \"literal\", value: \"\\u2028\", description: \"\\\"\\\\u2028\\\"\" },\n        peg$c34 = \"\\u2029\",\n        peg$c35 = { type: \"literal\", value: \"\\u2029\", description: \"\\\"\\\\u2029\\\"\" },\n        peg$c36 = /^[\\t\\x0B\\f \\xA0\\uFEFF]/,\n        peg$c37 = { type: \"class\", value: \"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\", description: \"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\" },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsebody();\n\n      return s0;\n    }\n\n    function peg$parsebody() {\n      var s0, s1;\n\n      s0 = [];\n      s1 = peg$parseitem();\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseitem();\n      }\n\n      return s0;\n    }\n\n    function peg$parseitem() {\n      var s0;\n\n      s0 = peg$parsetag();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsebuffer();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsereset();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsebuffer() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseeol();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsews();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsews();\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c3(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsetag();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = peg$c4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsereset();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = peg$c4;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c2;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseany();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s2;\n              s3 = peg$c5(s5);\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsetag();\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n              s3 = peg$c4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$currPos;\n              peg$silentFails++;\n              s5 = peg$parsereset();\n              peg$silentFails--;\n              if (s5 === peg$FAILED) {\n                s4 = peg$c4;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c2;\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseany();\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s2;\n                  s3 = peg$c5(s5);\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c2;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c6(s1);\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsetag() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parseld();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecolor();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseld();\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = peg$c4;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$c2;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              s8 = peg$parserd();\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = peg$c4;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$c2;\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseany();\n                if (s8 !== peg$FAILED) {\n                  peg$reportedPos = s5;\n                  s6 = peg$c9(s8);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c2;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c2;\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$currPos;\n                s6 = peg$currPos;\n                peg$silentFails++;\n                s7 = peg$parseld();\n                peg$silentFails--;\n                if (s7 === peg$FAILED) {\n                  s6 = peg$c4;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$c2;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  peg$silentFails++;\n                  s8 = peg$parserd();\n                  peg$silentFails--;\n                  if (s8 === peg$FAILED) {\n                    s7 = peg$c4;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$c2;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseany();\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s5;\n                      s6 = peg$c9(s8);\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              }\n            } else {\n              s4 = peg$c2;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c10(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseany() {\n      var s0, s1;\n\n      s0 = peg$parseesc_left();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseesc_right();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.length > peg$currPos) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c12(s1);\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseesc_left() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseesc_seq();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s2 = peg$c13;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c15(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseesc_right() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseesc_seq();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s2 = peg$c16;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c15(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseesc_seq() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s0 = peg$c18;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c20.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c20.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c21); }\n          }\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c22(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsereset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseesc_right();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = peg$c4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parserd();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseafter();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c23;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c24(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseafter() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = [];\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseld();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = peg$c4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parserd();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = peg$c4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseany();\n          if (s4 !== peg$FAILED) {\n            peg$reportedPos = s1;\n            s2 = peg$c25(s4);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          s1 = peg$currPos;\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseld();\n          peg$silentFails--;\n          if (s3 === peg$FAILED) {\n            s2 = peg$c4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parserd();\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n              s3 = peg$c4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseany();\n              if (s4 !== peg$FAILED) {\n                peg$reportedPos = s1;\n                s2 = peg$c25(s4);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        }\n      } else {\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseld() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s0 = peg$c13;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n\n      return s0;\n    }\n\n    function peg$parserd() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 125) {\n        s0 = peg$c16;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseeol() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s0 = peg$c26;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c28) {\n          s0 = peg$c28;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 13) {\n            s0 = peg$c30;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c31); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8232) {\n              s0 = peg$c32;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c33); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 8233) {\n                s0 = peg$c34;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c35); }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0;\n\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseeol();\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})()"],"mappings":"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"},"metadata":{},"sourceType":"script"}