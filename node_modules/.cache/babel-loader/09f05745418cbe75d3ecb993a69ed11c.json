{"ast":null,"code":"var Immutable = require(\"immutable\");\n/**\n * Track connected clients\n * @param {UI} ui\n * @param {BrowserSync} bs\n */\n\n\nmodule.exports.init = function (ui, bs) {\n  var uaParser = new bs.utils.UAParser();\n  var currentConnections = [];\n  ui.clients.on(\"connection\", function (client) {\n    client.on(\"client:heartbeat\", function (data) {\n      var match;\n\n      if (currentConnections.some(function (item, index) {\n        if (item.id === client.id) {\n          match = index;\n          return true;\n        }\n\n        return false;\n      })) {\n        if (typeof match === \"number\") {\n          currentConnections[match].timestamp = new Date().getTime();\n          currentConnections[match].data = data;\n        }\n      } else {\n        currentConnections.push({\n          id: client.id,\n          timestamp: new Date().getTime(),\n          browser: uaParser.setUA(client.handshake.headers[\"user-agent\"]).getBrowser(),\n          data: data\n        });\n      }\n    });\n  });\n  var registry;\n  var temp;\n  var initialSent;\n  var int = setInterval(function () {\n    var sockets = ui.clients.sockets;\n    var keys = Object.keys(sockets);\n\n    if (keys.length) {\n      temp = Immutable.List(keys.map(function (clientKey) {\n        var currentClient = sockets[clientKey];\n        return Immutable.fromJS({\n          id: currentClient.id,\n          browser: uaParser.setUA(currentClient.handshake.headers[\"user-agent\"]).getBrowser()\n        });\n      }));\n\n      if (!registry) {\n        registry = temp;\n        sendUpdated(ui.socket, decorateClients(registry.toJS(), currentConnections));\n      } else {\n        if (Immutable.is(registry, temp)) {\n          if (!initialSent) {\n            sendUpdated(ui.socket, decorateClients(registry.toJS(), currentConnections));\n            initialSent = true;\n          }\n        } else {\n          registry = temp;\n          sendUpdated(ui.socket, decorateClients(registry.toJS(), currentConnections));\n        }\n      }\n    } else {\n      sendUpdated(ui.socket, []);\n    }\n  }, 1000);\n  bs.registerCleanupTask(function () {\n    clearInterval(int);\n  });\n};\n/**\n * Use heart-beated data to decorate clients\n * @param clients\n * @param clientsInfo\n * @returns {*}\n */\n\n\nfunction decorateClients(clients, clientsInfo) {\n  return clients.map(function (item) {\n    clientsInfo.forEach(function (client) {\n      if (client.id === item.id) {\n        item.data = client.data;\n        return false;\n      }\n    });\n    return item;\n  });\n}\n/**\n * @param socket\n * @param connectedClients\n */\n\n\nfunction sendUpdated(socket, connectedClients) {\n  socket.emit(\"ui:connections:update\", connectedClients);\n}\n/**\n * @param clients\n * @param data\n */\n//function highlightClient (clients, data) {\n//    var socket = getClientById(clients, data.id);\n//    if (socket) {\n//        socket.emit(\"highlight\");\n//    }\n//}\n\n/**\n * @param clients\n * @param id\n */\n//function getClientById (clients, id) {\n//    var match;\n//    clients.sockets.some(function (item, i) {\n//        if (item.id === id) {\n//            match = clients.sockets[i];\n//            return true;\n//        }\n//    });\n//    return match;\n//}","map":{"version":3,"names":["Immutable","require","module","exports","init","ui","bs","uaParser","utils","UAParser","currentConnections","clients","on","client","data","match","some","item","index","id","timestamp","Date","getTime","push","browser","setUA","handshake","headers","getBrowser","registry","temp","initialSent","int","setInterval","sockets","keys","Object","length","List","map","clientKey","currentClient","fromJS","sendUpdated","socket","decorateClients","toJS","is","registerCleanupTask","clearInterval","clientsInfo","forEach","connectedClients","emit"],"sources":["/Users/johnberetty/node_modules/browser-sync-ui/lib/plugins/connections/lib/connections.js"],"sourcesContent":["var Immutable = require(\"immutable\");\n\n/**\n * Track connected clients\n * @param {UI} ui\n * @param {BrowserSync} bs\n */\nmodule.exports.init = function (ui, bs) {\n\n    var uaParser = new bs.utils.UAParser();\n\n    var currentConnections = [];\n\n    ui.clients.on(\"connection\", function (client) {\n        client.on(\"client:heartbeat\", function (data) {\n            var match;\n            if (currentConnections.some(function (item, index) {\n                    if (item.id === client.id) {\n                        match = index;\n                        return true;\n                    }\n                    return false;\n                })) {\n                if (typeof match === \"number\") {\n                    currentConnections[match].timestamp = new Date().getTime();\n                    currentConnections[match].data = data;\n                }\n            } else {\n                currentConnections.push({\n                    id: client.id,\n                    timestamp: new Date().getTime(),\n                    browser: uaParser.setUA(client.handshake.headers[\"user-agent\"]).getBrowser(),\n                    data: data\n                });\n            }\n        });\n    });\n\n    var registry;\n    var temp;\n    var initialSent;\n\n    var int = setInterval(function () {\n\n        var sockets = ui.clients.sockets;\n        var keys = Object.keys(sockets);\n\n        if (keys.length) {\n            temp = Immutable.List(keys.map(function (clientKey) {\n                var currentClient = sockets[clientKey];\n                return Immutable.fromJS({\n                    id: currentClient.id,\n                    browser: uaParser.setUA(currentClient.handshake.headers[\"user-agent\"]).getBrowser()\n                });\n            }));\n            if (!registry) {\n                registry = temp;\n                sendUpdated(ui.socket, decorateClients(registry.toJS(), currentConnections));\n            } else {\n                if (Immutable.is(registry, temp)) {\n                    if (!initialSent) {\n                        sendUpdated(ui.socket, decorateClients(registry.toJS(), currentConnections));\n                        initialSent = true;\n                    }\n                } else {\n                    registry = temp;\n                    sendUpdated(ui.socket, decorateClients(registry.toJS(), currentConnections));\n                }\n            }\n        } else {\n            sendUpdated(ui.socket, []);\n        }\n\n    }, 1000);\n\n    bs.registerCleanupTask(function () {\n        clearInterval(int);\n    });\n};\n\n\n/**\n * Use heart-beated data to decorate clients\n * @param clients\n * @param clientsInfo\n * @returns {*}\n */\nfunction decorateClients(clients, clientsInfo) {\n    return clients.map(function (item) {\n        clientsInfo.forEach(function (client) {\n            if (client.id === item.id) {\n                item.data = client.data;\n                return false;\n            }\n        });\n        return item;\n    });\n}\n\n/**\n * @param socket\n * @param connectedClients\n */\nfunction sendUpdated(socket, connectedClients) {\n    socket.emit(\"ui:connections:update\", connectedClients);\n}\n\n/**\n * @param clients\n * @param data\n */\n//function highlightClient (clients, data) {\n//    var socket = getClientById(clients, data.id);\n//    if (socket) {\n//        socket.emit(\"highlight\");\n//    }\n//}\n\n/**\n * @param clients\n * @param id\n */\n//function getClientById (clients, id) {\n//    var match;\n//    clients.sockets.some(function (item, i) {\n//        if (item.id === id) {\n//            match = clients.sockets[i];\n//            return true;\n//        }\n//    });\n//    return match;\n//}"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsB,UAAUC,EAAV,EAAcC,EAAd,EAAkB;EAEpC,IAAIC,QAAQ,GAAG,IAAID,EAAE,CAACE,KAAH,CAASC,QAAb,EAAf;EAEA,IAAIC,kBAAkB,GAAG,EAAzB;EAEAL,EAAE,CAACM,OAAH,CAAWC,EAAX,CAAc,YAAd,EAA4B,UAAUC,MAAV,EAAkB;IAC1CA,MAAM,CAACD,EAAP,CAAU,kBAAV,EAA8B,UAAUE,IAAV,EAAgB;MAC1C,IAAIC,KAAJ;;MACA,IAAIL,kBAAkB,CAACM,IAAnB,CAAwB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;QAC3C,IAAID,IAAI,CAACE,EAAL,KAAYN,MAAM,CAACM,EAAvB,EAA2B;UACvBJ,KAAK,GAAGG,KAAR;UACA,OAAO,IAAP;QACH;;QACD,OAAO,KAAP;MACH,CAND,CAAJ,EAMQ;QACJ,IAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;UAC3BL,kBAAkB,CAACK,KAAD,CAAlB,CAA0BK,SAA1B,GAAsC,IAAIC,IAAJ,GAAWC,OAAX,EAAtC;UACAZ,kBAAkB,CAACK,KAAD,CAAlB,CAA0BD,IAA1B,GAAiCA,IAAjC;QACH;MACJ,CAXD,MAWO;QACHJ,kBAAkB,CAACa,IAAnB,CAAwB;UACpBJ,EAAE,EAAEN,MAAM,CAACM,EADS;UAEpBC,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAFS;UAGpBE,OAAO,EAAEjB,QAAQ,CAACkB,KAAT,CAAeZ,MAAM,CAACa,SAAP,CAAiBC,OAAjB,CAAyB,YAAzB,CAAf,EAAuDC,UAAvD,EAHW;UAIpBd,IAAI,EAAEA;QAJc,CAAxB;MAMH;IACJ,CArBD;EAsBH,CAvBD;EAyBA,IAAIe,QAAJ;EACA,IAAIC,IAAJ;EACA,IAAIC,WAAJ;EAEA,IAAIC,GAAG,GAAGC,WAAW,CAAC,YAAY;IAE9B,IAAIC,OAAO,GAAG7B,EAAE,CAACM,OAAH,CAAWuB,OAAzB;IACA,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,OAAZ,CAAX;;IAEA,IAAIC,IAAI,CAACE,MAAT,EAAiB;MACbP,IAAI,GAAG9B,SAAS,CAACsC,IAAV,CAAeH,IAAI,CAACI,GAAL,CAAS,UAAUC,SAAV,EAAqB;QAChD,IAAIC,aAAa,GAAGP,OAAO,CAACM,SAAD,CAA3B;QACA,OAAOxC,SAAS,CAAC0C,MAAV,CAAiB;UACpBvB,EAAE,EAAEsB,aAAa,CAACtB,EADE;UAEpBK,OAAO,EAAEjB,QAAQ,CAACkB,KAAT,CAAegB,aAAa,CAACf,SAAd,CAAwBC,OAAxB,CAAgC,YAAhC,CAAf,EAA8DC,UAA9D;QAFW,CAAjB,CAAP;MAIH,CANqB,CAAf,CAAP;;MAOA,IAAI,CAACC,QAAL,EAAe;QACXA,QAAQ,GAAGC,IAAX;QACAa,WAAW,CAACtC,EAAE,CAACuC,MAAJ,EAAYC,eAAe,CAAChB,QAAQ,CAACiB,IAAT,EAAD,EAAkBpC,kBAAlB,CAA3B,CAAX;MACH,CAHD,MAGO;QACH,IAAIV,SAAS,CAAC+C,EAAV,CAAalB,QAAb,EAAuBC,IAAvB,CAAJ,EAAkC;UAC9B,IAAI,CAACC,WAAL,EAAkB;YACdY,WAAW,CAACtC,EAAE,CAACuC,MAAJ,EAAYC,eAAe,CAAChB,QAAQ,CAACiB,IAAT,EAAD,EAAkBpC,kBAAlB,CAA3B,CAAX;YACAqB,WAAW,GAAG,IAAd;UACH;QACJ,CALD,MAKO;UACHF,QAAQ,GAAGC,IAAX;UACAa,WAAW,CAACtC,EAAE,CAACuC,MAAJ,EAAYC,eAAe,CAAChB,QAAQ,CAACiB,IAAT,EAAD,EAAkBpC,kBAAlB,CAA3B,CAAX;QACH;MACJ;IACJ,CAtBD,MAsBO;MACHiC,WAAW,CAACtC,EAAE,CAACuC,MAAJ,EAAY,EAAZ,CAAX;IACH;EAEJ,CA/BoB,EA+BlB,IA/BkB,CAArB;EAiCAtC,EAAE,CAAC0C,mBAAH,CAAuB,YAAY;IAC/BC,aAAa,CAACjB,GAAD,CAAb;EACH,CAFD;AAGH,CAvED;AA0EA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASa,eAAT,CAAyBlC,OAAzB,EAAkCuC,WAAlC,EAA+C;EAC3C,OAAOvC,OAAO,CAAC4B,GAAR,CAAY,UAAUtB,IAAV,EAAgB;IAC/BiC,WAAW,CAACC,OAAZ,CAAoB,UAAUtC,MAAV,EAAkB;MAClC,IAAIA,MAAM,CAACM,EAAP,KAAcF,IAAI,CAACE,EAAvB,EAA2B;QACvBF,IAAI,CAACH,IAAL,GAAYD,MAAM,CAACC,IAAnB;QACA,OAAO,KAAP;MACH;IACJ,CALD;IAMA,OAAOG,IAAP;EACH,CARM,CAAP;AASH;AAED;AACA;AACA;AACA;;;AACA,SAAS0B,WAAT,CAAqBC,MAArB,EAA6BQ,gBAA7B,EAA+C;EAC3CR,MAAM,CAACS,IAAP,CAAY,uBAAZ,EAAqCD,gBAArC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}