{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst childProcess = require('child_process');\n\nconst isWsl = require('is-wsl');\n\nmodule.exports = (target, opts) => {\n  if (typeof target !== 'string') {\n    return Promise.reject(new Error('Expected a `target`'));\n  }\n\n  opts = Object.assign({\n    wait: true\n  }, opts);\n  let cmd;\n  let appArgs = [];\n  let args = [];\n  const cpOpts = {};\n\n  if (Array.isArray(opts.app)) {\n    appArgs = opts.app.slice(1);\n    opts.app = opts.app[0];\n  }\n\n  if (process.platform === 'darwin') {\n    cmd = 'open';\n\n    if (opts.wait) {\n      args.push('-W');\n    }\n\n    if (opts.app) {\n      args.push('-a', opts.app);\n    }\n  } else if (process.platform === 'win32' || isWsl) {\n    cmd = 'cmd' + (isWsl ? '.exe' : '');\n    args.push('/c', 'start', '\"\"', '/b');\n    target = target.replace(/&/g, '^&');\n\n    if (opts.wait) {\n      args.push('/wait');\n    }\n\n    if (opts.app) {\n      args.push(opts.app);\n    }\n\n    if (appArgs.length > 0) {\n      args = args.concat(appArgs);\n    }\n  } else {\n    if (opts.app) {\n      cmd = opts.app;\n    } else {\n      cmd = process.platform === 'android' ? 'xdg-open' : path.join(__dirname, 'xdg-open');\n    }\n\n    if (appArgs.length > 0) {\n      args = args.concat(appArgs);\n    }\n\n    if (!opts.wait) {\n      // `xdg-open` will block the process unless\n      // stdio is ignored and it's detached from the parent\n      // even if it's unref'd\n      cpOpts.stdio = 'ignore';\n      cpOpts.detached = true;\n    }\n  }\n\n  args.push(target);\n\n  if (process.platform === 'darwin' && appArgs.length > 0) {\n    args.push('--args');\n    args = args.concat(appArgs);\n  }\n\n  const cp = childProcess.spawn(cmd, args, cpOpts);\n\n  if (opts.wait) {\n    return new Promise((resolve, reject) => {\n      cp.once('error', reject);\n      cp.once('close', code => {\n        if (code > 0) {\n          reject(new Error('Exited with code ' + code));\n          return;\n        }\n\n        resolve(cp);\n      });\n    });\n  }\n\n  cp.unref();\n  return Promise.resolve(cp);\n};","map":{"version":3,"names":["path","require","childProcess","isWsl","module","exports","target","opts","Promise","reject","Error","Object","assign","wait","cmd","appArgs","args","cpOpts","Array","isArray","app","slice","process","platform","push","replace","length","concat","join","__dirname","stdio","detached","cp","spawn","resolve","once","code","unref"],"sources":["/Users/johnberetty/node_modules/opn/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst childProcess = require('child_process');\nconst isWsl = require('is-wsl');\n\nmodule.exports = (target, opts) => {\n\tif (typeof target !== 'string') {\n\t\treturn Promise.reject(new Error('Expected a `target`'));\n\t}\n\n\topts = Object.assign({wait: true}, opts);\n\n\tlet cmd;\n\tlet appArgs = [];\n\tlet args = [];\n\tconst cpOpts = {};\n\n\tif (Array.isArray(opts.app)) {\n\t\tappArgs = opts.app.slice(1);\n\t\topts.app = opts.app[0];\n\t}\n\n\tif (process.platform === 'darwin') {\n\t\tcmd = 'open';\n\n\t\tif (opts.wait) {\n\t\t\targs.push('-W');\n\t\t}\n\n\t\tif (opts.app) {\n\t\t\targs.push('-a', opts.app);\n\t\t}\n\t} else if (process.platform === 'win32' || isWsl) {\n\t\tcmd = 'cmd' + (isWsl ? '.exe' : '');\n\t\targs.push('/c', 'start', '\"\"', '/b');\n\t\ttarget = target.replace(/&/g, '^&');\n\n\t\tif (opts.wait) {\n\t\t\targs.push('/wait');\n\t\t}\n\n\t\tif (opts.app) {\n\t\t\targs.push(opts.app);\n\t\t}\n\n\t\tif (appArgs.length > 0) {\n\t\t\targs = args.concat(appArgs);\n\t\t}\n\t} else {\n\t\tif (opts.app) {\n\t\t\tcmd = opts.app;\n\t\t} else {\n\t\t\tcmd = process.platform === 'android' ? 'xdg-open' : path.join(__dirname, 'xdg-open');\n\t\t}\n\n\t\tif (appArgs.length > 0) {\n\t\t\targs = args.concat(appArgs);\n\t\t}\n\n\t\tif (!opts.wait) {\n\t\t\t// `xdg-open` will block the process unless\n\t\t\t// stdio is ignored and it's detached from the parent\n\t\t\t// even if it's unref'd\n\t\t\tcpOpts.stdio = 'ignore';\n\t\t\tcpOpts.detached = true;\n\t\t}\n\t}\n\n\targs.push(target);\n\n\tif (process.platform === 'darwin' && appArgs.length > 0) {\n\t\targs.push('--args');\n\t\targs = args.concat(appArgs);\n\t}\n\n\tconst cp = childProcess.spawn(cmd, args, cpOpts);\n\n\tif (opts.wait) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tcp.once('error', reject);\n\n\t\t\tcp.once('close', code => {\n\t\t\t\tif (code > 0) {\n\t\t\t\t\treject(new Error('Exited with code ' + code));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(cp);\n\t\t\t});\n\t\t});\n\t}\n\n\tcp.unref();\n\n\treturn Promise.resolve(cp);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}