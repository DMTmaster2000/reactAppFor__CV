{"ast":null,"code":"var url = require(\"url\");\n\nmodule.exports.rewriteLinks = function (userServer) {\n  var host = userServer.hostname;\n  var string = host;\n  var port = userServer.port;\n\n  if (host && port) {\n    if (parseInt(port, 10) !== 80) {\n      string = host + \":\" + port;\n    }\n  }\n\n  var reg = new RegExp( // a simple, but exact match\n  \"https?:\\\\\\\\/\\\\\\\\/\" + string + \"|\" + // following ['\"] + exact\n  \"('|\\\")\\\\/\\\\/\" + string + \"|\" + // exact match with optional trailing slash\n  \"https?://\" + string + \"(?!:)(/)?\" + \"|\" + // following ['\"] + exact + possible multiple (imr srcset etc)\n  \"('|\\\")(https?://|/|\\\\.)?\" + string + \"(?!:)(/)?(.*?)(?=[ ,'\\\"\\\\s])\", \"g\");\n  return {\n    match: reg,\n    //match: new RegExp(\"https?:\\\\\\\\/\\\\\\\\/\" + string + \"|https?://\" + string + \"(\\/)?|('|\\\")(https?://|/|\\\\.)?\" + string + \"(\\/)?(.*?)(?=[ ,'\\\"\\\\s])\", \"g\"),\n    //match: new RegExp(\"https?:\\\\\\\\?/\\\\\\\\?/\" + string + \"(\\/)?|('|\\\")(https?://|\\\\\\\\?/|\\\\.)?\" + string + \"(\\/)?(.*?)(?=[ ,'\\\"\\\\s])\", \"g\"),\n    //match: new RegExp('https?://' + string + '(\\/)?|(\\'|\")(https?://|/|\\\\.)?' + string + '(\\/)?(.*?)(?=[ ,\\'\"\\\\s])', 'g'),\n    //match: new RegExp(\"https?:\\\\\\\\/\\\\\\\\/\" + string, \"g\"),\n    fn: function (req, res, match) {\n      var proxyUrl = req.headers[\"host\"];\n      /**\n       * Reject subdomains\n       */\n\n      if (match[0] === \".\") {\n        return match;\n      }\n\n      var captured = match[0] === \"'\" || match[0] === '\"' ? match[0] : \"\";\n      /**\n       * allow http https\n       * @type {string}\n       */\n\n      var pre = \"//\";\n\n      if (match[0] === \"'\" || match[0] === '\"') {\n        match = match.slice(1);\n      }\n      /**\n       * parse the url\n       * @type {number|*}\n       */\n\n\n      var out = url.parse(match);\n      /**\n       * If host not set, just do a simple replace\n       */\n\n      if (!out.host) {\n        string = string.replace(/^(\\/)/, \"\");\n        return captured + match.replace(string, proxyUrl);\n      }\n      /**\n       * Only add trailing slash if one was\n       * present in the original match\n       */\n\n\n      if (out.path === \"/\") {\n        if (match.slice(-1) === \"/\") {\n          out.path = \"/\";\n        } else {\n          out.path = \"\";\n        }\n      }\n      /**\n       * Finally append all of parsed url\n       */\n\n\n      return [captured, pre, proxyUrl, out.path || \"\", out.hash || \"\"].join(\"\");\n    }\n  };\n};\n/**\n * Remove 'domain' from any cookies\n * @param {Object} res\n */\n\n\nmodule.exports.checkCookies = function checkCookies(res) {\n  if (typeof res.headers[\"set-cookie\"] !== \"undefined\") {\n    res.headers[\"set-cookie\"] = res.headers[\"set-cookie\"].map(function (item) {\n      return rewriteCookies(item);\n    });\n  }\n};\n/**\n * Remove the domain from any cookies.\n * @param rawCookie\n * @returns {string}\n */\n\n\nfunction rewriteCookies(rawCookie) {\n  var objCookie = function () {\n    // simple parse function (does not remove quotes)\n    var obj = {};\n    var pairs = rawCookie.split(/; */);\n    pairs.forEach(function (pair) {\n      var eqIndex = pair.indexOf(\"=\"); // skip things that don't look like key=value\n\n      if (eqIndex < 0) {\n        return;\n      }\n\n      var key = pair.substr(0, eqIndex).trim();\n      obj[key] = pair.substr(eqIndex + 1, pair.length).trim();\n    });\n    return obj;\n  }();\n\n  var pairs = Object.keys(objCookie).filter(function (item) {\n    return item.toLowerCase() !== \"domain\";\n  }).map(function (key) {\n    return key + \"=\" + objCookie[key];\n  });\n\n  if (rawCookie.match(/httponly/i)) {\n    pairs.push(\"HttpOnly\");\n  }\n\n  return pairs.join(\"; \");\n}\n\nmodule.exports.rewriteCookies = rewriteCookies;","map":{"version":3,"mappings":"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","names":["url","require","module","exports","rewriteLinks","userServer","host","hostname","string","port","parseInt","reg","RegExp","match","fn","req","res","proxyUrl","headers","captured","pre","slice","out","parse","replace","path","hash","join","checkCookies","map","item","rewriteCookies","rawCookie","objCookie","obj","pairs","split","forEach","pair","eqIndex","indexOf","key","substr","trim","length","Object","keys","filter","toLowerCase","push"],"sources":["../../lib/server/proxy-utils.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}