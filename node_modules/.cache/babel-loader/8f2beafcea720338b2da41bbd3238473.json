{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Socket = require('./socket');\n\nvar Emitter = require('events').EventEmitter;\n\nvar parser = require('socket.io-parser');\n\nvar hasBin = require('has-binary2');\n\nvar debug = require('debug')('socket.io:namespace');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Namespace;\n/**\n * Blacklisted events.\n */\n\nexports.events = ['connect', // for symmetry with client\n'connection', 'newListener'];\n/**\n * Flags.\n */\n\nexports.flags = ['json', 'volatile', 'local'];\n/**\n * `EventEmitter#emit` reference.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * Namespace constructor.\n *\n * @param {Server} server instance\n * @param {Socket} name\n * @api private\n */\n\nfunction Namespace(server, name) {\n  this.name = name;\n  this.server = server;\n  this.sockets = {};\n  this.connected = {};\n  this.fns = [];\n  this.ids = 0;\n  this.rooms = [];\n  this.flags = {};\n  this.initAdapter();\n}\n/**\n * Inherits from `EventEmitter`.\n */\n\n\nNamespace.prototype.__proto__ = Emitter.prototype;\n/**\n * Apply flags from `Socket`.\n */\n\nexports.flags.forEach(function (flag) {\n  Object.defineProperty(Namespace.prototype, flag, {\n    get: function () {\n      this.flags[flag] = true;\n      return this;\n    }\n  });\n});\n/**\n * Initializes the `Adapter` for this nsp.\n * Run upon changing adapter by `Server#adapter`\n * in addition to the constructor.\n *\n * @api private\n */\n\nNamespace.prototype.initAdapter = function () {\n  this.adapter = new (this.server.adapter())(this);\n};\n/**\n * Sets up namespace middleware.\n *\n * @return {Namespace} self\n * @api public\n */\n\n\nNamespace.prototype.use = function (fn) {\n  if (this.server.eio && this.name === '/') {\n    debug('removing initial packet');\n    delete this.server.eio.initialPacket;\n  }\n\n  this.fns.push(fn);\n  return this;\n};\n/**\n * Executes the middleware for an incoming client.\n *\n * @param {Socket} socket that will get added\n * @param {Function} fn last fn call in the middleware\n * @api private\n */\n\n\nNamespace.prototype.run = function (socket, fn) {\n  var fns = this.fns.slice(0);\n  if (!fns.length) return fn(null);\n\n  function run(i) {\n    fns[i](socket, function (err) {\n      // upon error, short-circuit\n      if (err) return fn(err); // if no middleware left, summon callback\n\n      if (!fns[i + 1]) return fn(null); // go on to next\n\n      run(i + 1);\n    });\n  }\n\n  run(0);\n};\n/**\n * Targets a room when emitting.\n *\n * @param {String} name\n * @return {Namespace} self\n * @api public\n */\n\n\nNamespace.prototype.to = Namespace.prototype.in = function (name) {\n  if (!~this.rooms.indexOf(name)) this.rooms.push(name);\n  return this;\n};\n/**\n * Adds a new client.\n *\n * @return {Socket}\n * @api private\n */\n\n\nNamespace.prototype.add = function (client, query, fn) {\n  debug('adding socket to nsp %s', this.name);\n  var socket = new Socket(this, client, query);\n  var self = this;\n  this.run(socket, function (err) {\n    process.nextTick(function () {\n      if ('open' == client.conn.readyState) {\n        if (err) return socket.error(err.data || err.message); // track socket\n\n        self.sockets[socket.id] = socket; // it's paramount that the internal `onconnect` logic\n        // fires before user-set events to prevent state order\n        // violations (such as a disconnection before the connection\n        // logic is complete)\n\n        socket.onconnect();\n        if (fn) fn(); // fire user-set events\n\n        self.emit('connect', socket);\n        self.emit('connection', socket);\n      } else {\n        debug('next called after client was closed - ignoring socket');\n      }\n    });\n  });\n  return socket;\n};\n/**\n * Removes a client. Called by each `Socket`.\n *\n * @api private\n */\n\n\nNamespace.prototype.remove = function (socket) {\n  if (this.sockets.hasOwnProperty(socket.id)) {\n    delete this.sockets[socket.id];\n  } else {\n    debug('ignoring remove for %s', socket.id);\n  }\n};\n/**\n * Emits to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\n\nNamespace.prototype.emit = function (ev) {\n  if (~exports.events.indexOf(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  } // set up packet object\n\n\n  var args = Array.prototype.slice.call(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  if ('function' == typeof args[args.length - 1]) {\n    throw new Error('Callbacks are not supported when broadcasting');\n  }\n\n  var rooms = this.rooms.slice(0);\n  var flags = Object.assign({}, this.flags); // reset flags\n\n  this.rooms = [];\n  this.flags = {};\n  this.adapter.broadcast(packet, {\n    rooms: rooms,\n    flags: flags\n  });\n  return this;\n};\n/**\n * Sends a `message` event to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\n\nNamespace.prototype.send = Namespace.prototype.write = function () {\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Gets a list of clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\n\nNamespace.prototype.clients = function (fn) {\n  if (!this.adapter) {\n    throw new Error('No adapter for this namespace, are you trying to get the list of clients of a dynamic namespace?');\n  }\n\n  this.adapter.clients(this.rooms, fn); // reset rooms for scenario:\n  // .in('room').clients() (GH-1978)\n\n  this.rooms = [];\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} compress if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nNamespace.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} Encode as if it has binary data if `true`, Encode as if it doesnt have binary data if `false`\n * @return {Socket} self\n * @api public\n */\n\n\nNamespace.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};","map":{"version":3,"names":["Socket","require","Emitter","EventEmitter","parser","hasBin","debug","module","exports","Namespace","events","flags","emit","prototype","server","name","sockets","connected","fns","ids","rooms","initAdapter","__proto__","forEach","flag","Object","defineProperty","get","adapter","use","fn","eio","initialPacket","push","run","socket","slice","length","i","err","to","in","indexOf","add","client","query","self","process","nextTick","conn","readyState","error","data","message","id","onconnect","remove","hasOwnProperty","ev","apply","arguments","args","Array","call","packet","type","binary","undefined","BINARY_EVENT","EVENT","Error","assign","broadcast","send","write","unshift","clients","compress"],"sources":["/Users/johnberetty/node_modules/socket.io/lib/namespace.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Socket = require('./socket');\nvar Emitter = require('events').EventEmitter;\nvar parser = require('socket.io-parser');\nvar hasBin = require('has-binary2');\nvar debug = require('debug')('socket.io:namespace');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Namespace;\n\n/**\n * Blacklisted events.\n */\n\nexports.events = [\n  'connect',    // for symmetry with client\n  'connection',\n  'newListener'\n];\n\n/**\n * Flags.\n */\n\nexports.flags = [\n  'json',\n  'volatile',\n  'local'\n];\n\n/**\n * `EventEmitter#emit` reference.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * Namespace constructor.\n *\n * @param {Server} server instance\n * @param {Socket} name\n * @api private\n */\n\nfunction Namespace(server, name){\n  this.name = name;\n  this.server = server;\n  this.sockets = {};\n  this.connected = {};\n  this.fns = [];\n  this.ids = 0;\n  this.rooms = [];\n  this.flags = {};\n  this.initAdapter();\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nNamespace.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Apply flags from `Socket`.\n */\n\nexports.flags.forEach(function(flag){\n  Object.defineProperty(Namespace.prototype, flag, {\n    get: function() {\n      this.flags[flag] = true;\n      return this;\n    }\n  });\n});\n\n/**\n * Initializes the `Adapter` for this nsp.\n * Run upon changing adapter by `Server#adapter`\n * in addition to the constructor.\n *\n * @api private\n */\n\nNamespace.prototype.initAdapter = function(){\n  this.adapter = new (this.server.adapter())(this);\n};\n\n/**\n * Sets up namespace middleware.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.use = function(fn){\n  if (this.server.eio && this.name === '/') {\n    debug('removing initial packet');\n    delete this.server.eio.initialPacket;\n  }\n  this.fns.push(fn);\n  return this;\n};\n\n/**\n * Executes the middleware for an incoming client.\n *\n * @param {Socket} socket that will get added\n * @param {Function} fn last fn call in the middleware\n * @api private\n */\n\nNamespace.prototype.run = function(socket, fn){\n  var fns = this.fns.slice(0);\n  if (!fns.length) return fn(null);\n\n  function run(i){\n    fns[i](socket, function(err){\n      // upon error, short-circuit\n      if (err) return fn(err);\n\n      // if no middleware left, summon callback\n      if (!fns[i + 1]) return fn(null);\n\n      // go on to next\n      run(i + 1);\n    });\n  }\n\n  run(0);\n};\n\n/**\n * Targets a room when emitting.\n *\n * @param {String} name\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.to =\nNamespace.prototype.in = function(name){\n  if (!~this.rooms.indexOf(name)) this.rooms.push(name);\n  return this;\n};\n\n/**\n * Adds a new client.\n *\n * @return {Socket}\n * @api private\n */\n\nNamespace.prototype.add = function(client, query, fn){\n  debug('adding socket to nsp %s', this.name);\n  var socket = new Socket(this, client, query);\n  var self = this;\n  this.run(socket, function(err){\n    process.nextTick(function(){\n      if ('open' == client.conn.readyState) {\n        if (err) return socket.error(err.data || err.message);\n\n        // track socket\n        self.sockets[socket.id] = socket;\n\n        // it's paramount that the internal `onconnect` logic\n        // fires before user-set events to prevent state order\n        // violations (such as a disconnection before the connection\n        // logic is complete)\n        socket.onconnect();\n        if (fn) fn();\n\n        // fire user-set events\n        self.emit('connect', socket);\n        self.emit('connection', socket);\n      } else {\n        debug('next called after client was closed - ignoring socket');\n      }\n    });\n  });\n  return socket;\n};\n\n/**\n * Removes a client. Called by each `Socket`.\n *\n * @api private\n */\n\nNamespace.prototype.remove = function(socket){\n  if (this.sockets.hasOwnProperty(socket.id)) {\n    delete this.sockets[socket.id];\n  } else {\n    debug('ignoring remove for %s', socket.id);\n  }\n};\n\n/**\n * Emits to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.emit = function(ev){\n  if (~exports.events.indexOf(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n  // set up packet object\n  var args = Array.prototype.slice.call(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  if ('function' == typeof args[args.length - 1]) {\n    throw new Error('Callbacks are not supported when broadcasting');\n  }\n\n  var rooms = this.rooms.slice(0);\n  var flags = Object.assign({}, this.flags);\n\n  // reset flags\n  this.rooms = [];\n  this.flags = {};\n\n  this.adapter.broadcast(packet, {\n    rooms: rooms,\n    flags: flags\n  });\n\n  return this;\n};\n\n/**\n * Sends a `message` event to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.send =\nNamespace.prototype.write = function(){\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Gets a list of clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.clients = function(fn){\n  if(!this.adapter){\n    throw new Error('No adapter for this namespace, are you trying to get the list of clients of a dynamic namespace?')\n  }\n  this.adapter.clients(this.rooms, fn);\n  // reset rooms for scenario:\n  // .in('room').clients() (GH-1978)\n  this.rooms = [];\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} compress if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nNamespace.prototype.compress = function(compress){\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} Encode as if it has binary data if `true`, Encode as if it doesnt have binary data if `false`\n * @return {Socket} self\n * @api public\n */\n\n Namespace.prototype.binary = function (binary) {\n   this.flags.binary = binary;\n   return this;\n };\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}