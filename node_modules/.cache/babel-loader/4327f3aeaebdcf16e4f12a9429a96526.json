{"ast":null,"code":"const PLUGIN_NAME = \"Sync Options\";\n/**\n * @type {{plugin: Function, plugin:name: string, hooks: object}}\n */\n\nmodule.exports = {\n  \"plugin\": function (ui, bs) {\n    ui.listen(\"sync-options\", {\n      \"set\": function (data) {\n        ui.logger.debug(\"Setting option: {magenta:%s}:{cyan:%s}\", data.path.join(\".\"), data.value);\n        bs.setOptionIn(data.path, data.value);\n      },\n      \"setMany\": function (data) {\n        ui.logger.debug(\"Setting Many options...\");\n\n        if (data.value !== true) {\n          data.value = false;\n        }\n\n        bs.setMany(function (item) {\n          [[\"codeSync\"], [\"ghostMode\", \"clicks\"], [\"ghostMode\", \"scroll\"], [\"ghostMode\", \"forms\", \"inputs\"], [\"ghostMode\", \"forms\", \"toggles\"], [\"ghostMode\", \"forms\", \"submit\"]].forEach(function (option) {\n            item.setIn(option, data.value);\n          });\n        });\n        return bs;\n      }\n    });\n  },\n  \"hooks\": {\n    \"markup\": fileContent(\"sync-options.html\"),\n    \"client:js\": fileContent(\"sync-options.client.js\"),\n    \"templates\": [],\n    \"page\": {\n      path: \"/sync-options\",\n      title: PLUGIN_NAME,\n      template: \"sync-options.html\",\n      controller: PLUGIN_NAME.replace(\" \", \"\") + \"Controller\",\n      order: 2,\n      icon: \"sync\"\n    }\n  },\n  \"plugin:name\": PLUGIN_NAME\n};\n\nfunction getPath(filepath) {\n  return require(\"path\").join(__dirname, filepath);\n}\n\nfunction fileContent(filepath) {\n  return require(\"fs\").readFileSync(getPath(filepath), \"utf-8\");\n}","map":{"version":3,"names":["PLUGIN_NAME","module","exports","ui","bs","listen","data","logger","debug","path","join","value","setOptionIn","setMany","item","forEach","option","setIn","fileContent","title","template","controller","replace","order","icon","getPath","filepath","require","__dirname","readFileSync"],"sources":["/Users/johnberetty/node_modules/browser-sync-ui/lib/plugins/sync-options/sync-options.plugin.js"],"sourcesContent":["const PLUGIN_NAME = \"Sync Options\";\n\n/**\n * @type {{plugin: Function, plugin:name: string, hooks: object}}\n */\nmodule.exports = {\n\n    \"plugin\": function (ui, bs) {\n\n        ui.listen(\"sync-options\", {\n\n            \"set\": function (data) {\n\n                ui.logger.debug(\"Setting option: {magenta:%s}:{cyan:%s}\", data.path.join(\".\"), data.value);\n                bs.setOptionIn(data.path, data.value);\n\n            },\n\n            \"setMany\": function (data) {\n\n                ui.logger.debug(\"Setting Many options...\");\n\n                if (data.value !== true) {\n                    data.value = false;\n                }\n\n                bs.setMany(function (item) {\n                    [\n                        [\"codeSync\"],\n                        [\"ghostMode\", \"clicks\"],\n                        [\"ghostMode\", \"scroll\"],\n                        [\"ghostMode\", \"forms\", \"inputs\"],\n                        [\"ghostMode\", \"forms\", \"toggles\"],\n                        [\"ghostMode\", \"forms\", \"submit\"]\n                    ].forEach(function (option) {\n                            item.setIn(option, data.value);\n                        });\n                });\n\n                return bs;\n            }\n        });\n    },\n    \"hooks\": {\n        \"markup\": fileContent(\"sync-options.html\"),\n        \"client:js\": fileContent(\"sync-options.client.js\"),\n        \"templates\": [],\n        \"page\": {\n            path: \"/sync-options\",\n            title: PLUGIN_NAME,\n            template: \"sync-options.html\",\n            controller: PLUGIN_NAME.replace(\" \", \"\") + \"Controller\",\n            order: 2,\n            icon: \"sync\"\n        }\n    },\n    \"plugin:name\": PLUGIN_NAME\n};\n\nfunction getPath (filepath) {\n    return require(\"path\").join(__dirname, filepath);\n}\n\nfunction fileContent (filepath) {\n    return require(\"fs\").readFileSync(getPath(filepath), \"utf-8\");\n}\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,cAApB;AAEA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB;EAEb,UAAU,UAAUC,EAAV,EAAcC,EAAd,EAAkB;IAExBD,EAAE,CAACE,MAAH,CAAU,cAAV,EAA0B;MAEtB,OAAO,UAAUC,IAAV,EAAgB;QAEnBH,EAAE,CAACI,MAAH,CAAUC,KAAV,CAAgB,wCAAhB,EAA0DF,IAAI,CAACG,IAAL,CAAUC,IAAV,CAAe,GAAf,CAA1D,EAA+EJ,IAAI,CAACK,KAApF;QACAP,EAAE,CAACQ,WAAH,CAAeN,IAAI,CAACG,IAApB,EAA0BH,IAAI,CAACK,KAA/B;MAEH,CAPqB;MAStB,WAAW,UAAUL,IAAV,EAAgB;QAEvBH,EAAE,CAACI,MAAH,CAAUC,KAAV,CAAgB,yBAAhB;;QAEA,IAAIF,IAAI,CAACK,KAAL,KAAe,IAAnB,EAAyB;UACrBL,IAAI,CAACK,KAAL,GAAa,KAAb;QACH;;QAEDP,EAAE,CAACS,OAAH,CAAW,UAAUC,IAAV,EAAgB;UACvB,CACI,CAAC,UAAD,CADJ,EAEI,CAAC,WAAD,EAAc,QAAd,CAFJ,EAGI,CAAC,WAAD,EAAc,QAAd,CAHJ,EAII,CAAC,WAAD,EAAc,OAAd,EAAuB,QAAvB,CAJJ,EAKI,CAAC,WAAD,EAAc,OAAd,EAAuB,SAAvB,CALJ,EAMI,CAAC,WAAD,EAAc,OAAd,EAAuB,QAAvB,CANJ,EAOEC,OAPF,CAOU,UAAUC,MAAV,EAAkB;YACpBF,IAAI,CAACG,KAAL,CAAWD,MAAX,EAAmBV,IAAI,CAACK,KAAxB;UACH,CATL;QAUH,CAXD;QAaA,OAAOP,EAAP;MACH;IA/BqB,CAA1B;EAiCH,CArCY;EAsCb,SAAS;IACL,UAAUc,WAAW,CAAC,mBAAD,CADhB;IAEL,aAAaA,WAAW,CAAC,wBAAD,CAFnB;IAGL,aAAa,EAHR;IAIL,QAAQ;MACJT,IAAI,EAAE,eADF;MAEJU,KAAK,EAAEnB,WAFH;MAGJoB,QAAQ,EAAE,mBAHN;MAIJC,UAAU,EAAErB,WAAW,CAACsB,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,IAA+B,YAJvC;MAKJC,KAAK,EAAE,CALH;MAMJC,IAAI,EAAE;IANF;EAJH,CAtCI;EAmDb,eAAexB;AAnDF,CAAjB;;AAsDA,SAASyB,OAAT,CAAkBC,QAAlB,EAA4B;EACxB,OAAOC,OAAO,CAAC,MAAD,CAAP,CAAgBjB,IAAhB,CAAqBkB,SAArB,EAAgCF,QAAhC,CAAP;AACH;;AAED,SAASR,WAAT,CAAsBQ,QAAtB,EAAgC;EAC5B,OAAOC,OAAO,CAAC,IAAD,CAAP,CAAcE,YAAd,CAA2BJ,OAAO,CAACC,QAAD,CAAlC,EAA8C,OAA9C,CAAP;AACH"},"metadata":{},"sourceType":"script"}