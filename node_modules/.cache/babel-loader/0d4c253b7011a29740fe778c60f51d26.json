{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./lodash.custom\");\n\nvar Immutable = require(\"immutable\");\n\nvar utils = require(\"./utils\");\n\nvar pluginUtils = require(\"./plugins\");\n\nvar connectUtils = require(\"./connect-utils\");\n\nmodule.exports = {\n  /**\n   * BrowserSync needs at least 1 free port.\n   * It will check the one provided in config\n   * and keep incrementing until an available one is found.\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  getEmptyPort: function (bs, done) {\n    utils.getPorts(bs.options, function (err, port) {\n      if (err) {\n        return utils.fail(true, err, bs.cb);\n      }\n\n      bs.debug(\"Found a free port: {magenta:%s\", port);\n      done(null, {\n        options: {\n          port: port\n        }\n      });\n    });\n  },\n\n  /**\n   * If the running mode is proxy, we'll use a separate port\n   * for the Browsersync web-socket server. This is to eliminate any issues\n   * with trying to proxy web sockets through to the users server.\n   * @param bs\n   * @param done\n   */\n  getExtraPortForProxy: function (bs, done) {\n    /**\n     * An extra port is not needed in snippet/server mode\n     */\n    if (bs.options.get(\"mode\") !== \"proxy\") {\n      return done();\n    }\n    /**\n     * Web socket support is disabled by default\n     */\n\n\n    if (!bs.options.getIn([\"proxy\", \"ws\"])) {\n      return done();\n    }\n    /**\n     * Use 1 higher than server port by default...\n     */\n\n\n    var socketPort = bs.options.get(\"port\") + 1;\n    /**\n     * Or use the user-defined socket.port option instead\n     */\n\n    if (bs.options.hasIn([\"socket\", \"port\"])) {\n      socketPort = bs.options.getIn([\"socket\", \"port\"]);\n    }\n\n    utils.getPort(bs.options.get(\"listen\", \"localhost\"), socketPort, null, function (err, port) {\n      if (err) {\n        return utils.fail(true, err, bs.cb);\n      }\n\n      done(null, {\n        optionsIn: [{\n          path: [\"socket\", \"port\"],\n          value: port\n        }]\n      });\n    });\n  },\n\n  /**\n   * Some features require an internet connection.\n   * If the user did not provide either `true` or `false`\n   * for the online option, we will attempt to resolve www.google.com\n   * as a way of determining network connectivity\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  getOnlineStatus: function (bs, done) {\n    if (_.isUndefined(bs.options.get(\"online\")) && _.isUndefined(process.env.TESTING)) {\n      require(\"dns\").resolve(\"www.google.com\", function (err) {\n        var online = false;\n\n        if (err) {\n          bs.debug(\"Could not resolve www.google.com, setting {magenta:online: false}\");\n        } else {\n          bs.debug(\"Resolved www.google.com, setting {magenta:online: true}\");\n          online = true;\n        }\n\n        done(null, {\n          options: {\n            online: online\n          }\n        });\n      });\n    } else {\n      done();\n    }\n  },\n\n  /**\n   * Try to load plugins that were given in options\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  resolveInlineUserPlugins: function (bs, done) {\n    var plugins = bs.options.get(\"plugins\").map(pluginUtils.resolvePlugin).map(pluginUtils.requirePlugin);\n    plugins.forEach(function (plugin) {\n      if (plugin.get(\"errors\").size) {\n        return logPluginError(plugin);\n      }\n\n      var jsPlugin = plugin.toJS();\n      jsPlugin.options = jsPlugin.options || {};\n      jsPlugin.options.moduleName = jsPlugin.moduleName;\n      bs.registerPlugin(jsPlugin.module, jsPlugin.options);\n    });\n\n    function logPluginError(plugin) {\n      utils.fail(true, plugin.getIn([\"errors\", 0]), bs.cb);\n    }\n\n    done();\n  },\n\n  /**\n   *\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  setOptions: function (bs, done) {\n    done(null, {\n      options: {\n        urls: utils.getUrlOptions(bs.options),\n        snippet: connectUtils.enabled(bs.options) ? connectUtils.scriptTags(bs.options) : false,\n        scriptPaths: Immutable.fromJS(connectUtils.clientScript(bs.options, true)),\n        files: bs.pluginManager.hook(\"files:watch\", bs.options.get(\"files\"), bs.pluginManager.pluginOptions)\n      }\n    });\n  },\n\n  /**\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  setInternalEvents: function (bs, done) {\n    require(\"./internal-events\")(bs);\n\n    done();\n  },\n\n  /**\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  setFileWatchers: function (bs, done) {\n    done(null, {\n      instance: {\n        watchers: bs.pluginManager.get(\"file:watcher\")(bs)\n      }\n    });\n  },\n\n  /**\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  mergeMiddlewares: function (bs, done) {\n    done(null, {\n      options: {\n        middleware: bs.pluginManager.hook(\"server:middleware\", bs.options.get(\"middleware\"))\n      }\n    });\n  },\n\n  /**\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  startServer: function (bs, done) {\n    var server = bs.pluginManager.get(\"server\")(bs);\n    done(null, {\n      instance: {\n        server: server.server,\n        app: server.app\n      }\n    });\n  },\n\n  /**\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  startTunnel: function (bs, done) {\n    if (bs.options.get(\"tunnel\") && bs.options.get(\"online\")) {\n      var localTunnel = require(\"./tunnel\");\n\n      localTunnel(bs, function (err, tunnel) {\n        if (err) {\n          return done(err);\n        } else {\n          return done(null, {\n            optionsIn: [{\n              path: [\"urls\", \"tunnel\"],\n              value: tunnel.url\n            }],\n            instance: {\n              tunnel: tunnel\n            }\n          });\n        }\n      });\n    } else {\n      done();\n    }\n  },\n\n  /**\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  startSockets: function (bs, done) {\n    var clientEvents = bs.pluginManager.hook(\"client:events\", bs.options.get(\"clientEvents\").toJS()); // Start the socket, needs an existing server.\n\n    var io = bs.pluginManager.get(\"socket\")(bs.server, clientEvents, bs);\n    done(null, {\n      instance: {\n        io: io\n      },\n      options: {\n        clientEvents: Immutable.fromJS(clientEvents)\n      }\n    });\n  },\n\n  /**\n   *\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  startUi: function (bs, done) {\n    var PLUGIN_NAME = \"UI\";\n    var userPlugins = bs.getUserPlugins();\n    var ui = bs.pluginManager.get(PLUGIN_NAME);\n    var uiOpts = bs.options.get(\"ui\");\n\n    if (!uiOpts || uiOpts.get(\"enabled\") === false) {\n      return done();\n    } // if user provided a UI, use it instead\n\n\n    if (userPlugins.some(function (item) {\n      return item.name === PLUGIN_NAME;\n    })) {\n      uiOpts = bs.options.get(\"ui\").mergeDeep(Immutable.fromJS(bs.pluginManager.pluginOptions[PLUGIN_NAME]));\n    }\n    /**\n     * Append the 'listen' option\n     */\n\n\n    var opts = uiOpts.update(function (uiOpts) {\n      var listen = bs.options.get(\"listen\");\n\n      if (listen) {\n        return uiOpts.set(\"listen\", listen);\n      }\n\n      return uiOpts;\n    });\n    return ui(opts.toJS(), bs, function (err, ui) {\n      if (err) {\n        return done(err);\n      }\n\n      done(null, {\n        instance: {\n          ui: ui\n        }\n      });\n    });\n  },\n\n  /**\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  mergeUiSettings: function (bs, done) {\n    if (!bs.ui) {\n      return done();\n    }\n\n    done(null, {\n      options: {\n        urls: bs.options.get(\"urls\").merge(bs.ui.options.get(\"urls\"))\n      }\n    });\n  },\n\n  /**\n   * @param {BrowserSync} bs\n   * @param {Function} done\n   */\n  initUserPlugins: function (bs, done) {\n    bs.pluginManager.initUserPlugins(bs);\n    done(null, {\n      options: {\n        userPlugins: bs.getUserPlugins()\n      }\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["_","require","Immutable","utils","pluginUtils","connectUtils","module","exports","getEmptyPort","bs","done","getPorts","options","err","port","fail","cb","debug","getExtraPortForProxy","get","getIn","socketPort","hasIn","getPort","optionsIn","path","value","getOnlineStatus","isUndefined","process","env","TESTING","resolve","online","resolveInlineUserPlugins","plugins","map","resolvePlugin","requirePlugin","forEach","plugin","size","logPluginError","jsPlugin","toJS","moduleName","registerPlugin","setOptions","urls","getUrlOptions","snippet","enabled","scriptTags","scriptPaths","fromJS","clientScript","files","pluginManager","hook","pluginOptions","setInternalEvents","setFileWatchers","instance","watchers","mergeMiddlewares","middleware","startServer","server","app","startTunnel","localTunnel","tunnel","url","startSockets","clientEvents","io","startUi","PLUGIN_NAME","userPlugins","getUserPlugins","ui","uiOpts","some","item","name","mergeDeep","opts","update","listen","set","mergeUiSettings","merge","initUserPlugins"],"sources":["../lib/async.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}