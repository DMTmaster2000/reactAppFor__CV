{"ast":null,"code":"\"use strict\";\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar join = require(\"path\").join;\n\nvar connect = require(\"connect\");\n\nvar Immutable = require(\"immutable\");\n\nvar http = require(\"http\");\n\nvar https = require(\"https\");\n\nvar Map = require(\"immutable\").Map;\n\nvar fromJS = require(\"immutable\").fromJS;\n\nvar List = require(\"immutable\").List;\n\nvar snippet = require(\"./../snippet\").utils;\n\nvar _ = require(\"../lodash.custom\");\n\nvar serveStatic = require(\"./serve-static-wrapper\").default();\n\nvar serveIndex = require(\"serve-index\");\n\nvar logger = require(\"../logger\");\n\nvar snippetUtils = require(\"../snippet\").utils;\n\nvar lrSnippet = require(\"resp-modifier\");\n\nvar certPath = join(__dirname, \"..\", \"..\", \"certs\");\n\nfunction getCa(options) {\n  var caOption = options.getIn([\"https\", \"ca\"]); // if not provided, use Browsersync self-signed\n\n  if (typeof caOption === \"undefined\") {\n    return fs.readFileSync(join(certPath, \"server.csr\"));\n  } // if a string was given, read that file from disk\n\n\n  if (typeof caOption === \"string\") {\n    return fs.readFileSync(caOption);\n  } // if an array was given, read all\n\n\n  if (List.isList(caOption)) {\n    return caOption.toArray().map(function (x) {\n      return fs.readFileSync(x);\n    });\n  }\n}\n\nfunction getKey(options) {\n  return fs.readFileSync(options.getIn([\"https\", \"key\"]) || join(certPath, \"server.key\"));\n}\n\nfunction getCert(options) {\n  return fs.readFileSync(options.getIn([\"https\", \"cert\"]) || join(certPath, \"server.crt\"));\n}\n\nfunction getHttpsServerDefaults(options) {\n  return fromJS({\n    key: getKey(options),\n    cert: getCert(options),\n    ca: getCa(options),\n    passphrase: options.getIn([\"https\", \"passphrase\"], \"\")\n  });\n}\n\nfunction getPFXDefaults(options) {\n  return fromJS({\n    pfx: fs.readFileSync(options.getIn([\"https\", \"pfx\"]))\n  });\n}\n\nvar serverUtils = {\n  /**\n   * @param options\n   * @returns {{key, cert}}\n   */\n  getHttpsOptions: function (options) {\n    var userOption = options.get(\"https\");\n\n    if (Map.isMap(userOption)) {\n      if (userOption.has(\"pfx\")) {\n        return userOption.mergeDeep(getPFXDefaults(options));\n      }\n\n      return userOption.mergeDeep(getHttpsServerDefaults(options));\n    }\n\n    return getHttpsServerDefaults(options);\n  },\n\n  /**\n   * Get either http or https server\n   * or use the httpModule provided in options if present\n   */\n  getServer: function (app, options) {\n    return {\n      server: function () {\n        var httpModule = serverUtils.getHttpModule(options);\n\n        if (options.get(\"scheme\") === \"https\" || options.get(\"httpModule\") === \"http2\") {\n          var opts = serverUtils.getHttpsOptions(options);\n          return httpModule.createServer(opts.toJS(), app);\n        }\n\n        return httpModule.createServer(app);\n      }(),\n      app: app\n    };\n  },\n  getHttpModule: function (options) {\n    /**\n     * Users may provide a string to be used by nodes\n     * require lookup.\n     */\n    var httpModule = options.get(\"httpModule\");\n\n    if (typeof httpModule === \"string\") {\n      /**\n       * Note, this could throw, but let that happen as\n       * the error message good enough.\n       */\n      var maybe = require.resolve(httpModule);\n\n      return require(maybe);\n    }\n\n    if (options.get(\"scheme\") === \"https\") {\n      return https;\n    }\n\n    return http;\n  },\n  getMiddlewares: function (bs) {\n    var clientJs = bs.pluginManager.hook(\"client:js\", {\n      port: bs.options.get(\"port\"),\n      options: bs.options\n    });\n    var scripts = bs.pluginManager.get(\"client:script\")(bs.options.toJS(), clientJs, \"middleware\");\n    var defaultMiddlewares = [{\n      id: \"Browsersync HTTP Protocol\",\n      route: require(\"../config\").httpProtocol.path,\n      handle: require(\"../http-protocol\").middleware(bs)\n    }, {\n      id: \"Browsersync IE8 Support\",\n      route: \"\",\n      handle: snippet.isOldIe(bs.options.get(\"excludedFileTypes\").toJS())\n    }, {\n      id: \"Browsersync Response Modifier\",\n      route: \"\",\n      handle: serverUtils.getSnippetMiddleware(bs)\n    }, {\n      id: \"Browsersync Client - versioned\",\n      route: bs.options.getIn([\"scriptPaths\", \"versioned\"]),\n      handle: scripts\n    }, {\n      id: \"Browsersync Client\",\n      route: bs.options.getIn([\"scriptPaths\", \"path\"]),\n      handle: scripts\n    }];\n    /**\n     * Add cors middleware to the front of the stack\n     * if a user provided a 'cors' flag\n     */\n\n    if (bs.options.get(\"cors\")) {\n      defaultMiddlewares.unshift({\n        id: \"Browsersync CORS support\",\n        route: \"\",\n        handle: serverUtils.getCorsMiddlewware()\n      });\n    }\n    /**\n     * Add connect-history-api-fallback if 'single' argument given\n     */\n\n\n    if (bs.options.get(\"single\")) {\n      defaultMiddlewares.unshift({\n        id: \"Browsersync SPA support\",\n        route: \"\",\n        handle: require(\"connect-history-api-fallback\")()\n      });\n    }\n    /**\n     * Add serve static middleware\n     */\n\n\n    if (bs.options.get(\"serveStatic\")) {\n      var ssMiddlewares = serverUtils.getServeStaticMiddlewares(bs.options.get(\"serveStatic\"), bs.options.get(\"serveStaticOptions\", Immutable.Map({})).toJS());\n      var withErrors = ssMiddlewares.filter(function (x) {\n        return x.get(\"errors\").size > 0;\n      });\n      var withoutErrors = ssMiddlewares.filter(function (x) {\n        return x.get(\"errors\").size === 0;\n      });\n\n      if (withErrors.size) {\n        withErrors.forEach(function (item) {\n          logger.logger.error(\"{red:Warning!} %s\", item.getIn([\"errors\", 0, \"data\", \"message\"]));\n        });\n      }\n\n      if (withoutErrors.size) {\n        withoutErrors.forEach(function (item) {\n          defaultMiddlewares.push.apply(defaultMiddlewares, item.get(\"items\").toJS());\n        });\n      }\n    }\n    /**\n     * Add user-provided middlewares\n     */\n\n\n    var userMiddlewares = bs.options.get(\"middleware\").map(normaliseMiddleware).toArray();\n    var beforeMiddlewares = userMiddlewares.filter(function (x) {\n      return x.override;\n    });\n    var afterMiddlewares = userMiddlewares.filter(function (x) {\n      return !x.override;\n    }).concat(bs.options.get(\"mode\") !== \"proxy\" && userMiddlewares.length === 0 && {\n      id: \"Browsersync 404/index support\",\n      route: \"\",\n      handle: serveIndex(bs.options.get(\"cwd\"), {\n        icons: true,\n        view: \"details\"\n      })\n    });\n    var mwStack = [].concat(beforeMiddlewares, defaultMiddlewares, afterMiddlewares).filter(Boolean);\n    return mwStack;\n\n    function normaliseMiddleware(item) {\n      /**\n       * Object given in options, which\n       * ended up being a Map\n       */\n      if (Map.isMap(item)) {\n        return item.toJS();\n      }\n      /**\n       * Single function\n       */\n\n\n      if (typeof item === \"function\") {\n        return {\n          route: \"\",\n          handle: item\n        };\n      }\n      /**\n       * Plain obj\n       */\n\n\n      if (item.route !== undefined && item.handle) {\n        return item;\n      }\n    }\n  },\n  getBaseApp: function (bs) {\n    var app = connect();\n    var middlewares = serverUtils.getMiddlewares(bs);\n    /**\n     * Add all internal middlewares\n     */\n\n    middlewares.forEach(function (item) {\n      app.stack.push(item);\n    });\n    return app;\n  },\n  getSnippetMiddleware: function (bs) {\n    var rules = [];\n    var blacklist = List([]).concat(bs.options.getIn([\"snippetOptions\", \"ignorePaths\"])).concat(bs.options.getIn([\"snippetOptions\", \"blacklist\"])).filter(Boolean);\n    var whitelist = List([]).concat(bs.options.getIn([\"snippetOptions\", \"whitelist\"])); // Snippet\n\n    if (bs.options.get(\"snippet\")) {\n      rules.push(snippetUtils.getRegex(bs.options.get(\"snippet\"), bs.options.get(\"snippetOptions\")));\n    } // User\n\n\n    bs.options.get(\"rewriteRules\").forEach(function (rule) {\n      if (Map.isMap(rule)) {\n        rules.push(rule.toJS());\n      }\n\n      if (_.isPlainObject(rule)) {\n        rules.push(rule);\n      }\n    }); // Proxy\n\n    if (bs.options.get(\"proxy\")) {\n      var proxyRule = require(\"./proxy-utils\").rewriteLinks(bs.options.getIn([\"proxy\", \"url\"]).toJS());\n\n      rules.push(proxyRule);\n    }\n\n    var lr = lrSnippet.create({\n      rules: rules,\n      blacklist: blacklist.toArray(),\n      whitelist: whitelist.toArray()\n    });\n    return lr.middleware;\n  },\n  getCorsMiddlewware: function () {\n    return function (req, res, next) {\n      // Website you wish to allow to connect\n      res.setHeader(\"Access-Control-Allow-Origin\", \"*\"); // Request methods you wish to allow\n\n      res.setHeader(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS, PUT, PATCH, DELETE\"); // Request headers you wish to allow\n\n      res.setHeader(\"Access-Control-Allow-Headers\", \"X-Requested-With,content-type\"); // Set to true if you need the website to include cookies in the requests sent\n      // to the API (e.g. in case you use sessions)\n\n      res.setHeader(\"Access-Control-Allow-Credentials\", true);\n      next();\n    };\n  },\n\n  /**\n   * @param ssOption\n   * @param serveStaticOptions\n   * @returns {*}\n   */\n  getServeStaticMiddlewares: function (ssOption, serveStaticOptions) {\n    return ssOption.map(function (dir, i) {\n      /**\n       * When a user gives a plain string only, eg:\n       *   serveStatic: ['./temp']\n       *     ->\n       *       This means a middleware will be created with\n       *         route: ''\n       *         handle: serveStatic('./temp', options)\n       */\n      if (_.isString(dir)) {\n        return getFromString(dir);\n      }\n      /**\n       * If a user gave an object eg:\n       *   serveStatic: [{route: \"\", dir: [\"test\", \"./tmp\"]}]\n       *     ->\n       *       This means we need to create a middle for each route + dir combo\n       */\n\n\n      if (Immutable.Map.isMap(dir)) {\n        return getFromMap(dir, i);\n      }\n      /**\n       * At this point, an item in the serveStatic array was not a string\n       * or an object so we return an error that can be logged\n       */\n\n\n      return fromJS({\n        items: [],\n        errors: [{\n          type: \"Invalid Type\",\n          data: {\n            message: \"Only strings and Objects (with route+dir) are supported for the ServeStatic option\"\n          }\n        }]\n      });\n    });\n    /**\n     * @param {string} x\n     * @returns {string}\n     */\n\n    function getRoute(x) {\n      if (x === \"\") return \"\";\n      return x[0] === \"/\" ? x : \"/\" + x;\n    }\n    /**\n     * @param dir\n     * @returns {Map}\n     */\n\n\n    function getFromString(dir) {\n      return fromJS({\n        items: [{\n          route: \"\",\n          handle: serveStatic(dir, serveStaticOptions)\n        }],\n        errors: []\n      });\n    }\n    /**\n     * @param dir\n     * @returns {Map}\n     */\n\n\n    function getFromMap(dir) {\n      var ssOptions = function () {\n        if (dir.get(\"options\")) {\n          return dir.get(\"options\").toJS();\n        }\n\n        return {};\n      }();\n\n      var route = Immutable.List([]).concat(dir.get(\"route\")).filter(_.isString);\n\n      var _dir = Immutable.List([]).concat(dir.get(\"dir\")).filter(_.isString);\n\n      if (_dir.size === 0) {\n        return fromJS({\n          items: [],\n          errors: [{\n            type: \"Invalid Object\",\n            data: {\n              message: \"Serve Static requires a 'dir' property when using an Object\"\n            }\n          }]\n        });\n      }\n\n      var ssItems = function () {\n        /**\n         * iterate over every 'route' item\n         * @type {Immutable.List<any>|Immutable.List<*>|Immutable.List<any>|*}\n         */\n        var routeItems = function () {\n          /**\n           * If no 'route' was given, assume we want to match all\n           * paths\n           */\n          if (route.size === 0) {\n            return _dir.map(function (dirString) {\n              return Map({\n                route: \"\",\n                dir: dirString\n              });\n            });\n          }\n\n          return route.reduce(function (acc, routeString) {\n            /**\n             * For each 'route' item, also iterate through 'dirs'\n             * @type {Immutable.Iterable<K, M>}\n             */\n            var perDir = _dir.map(function (dirString) {\n              return Map({\n                route: getRoute(routeString),\n                dir: dirString\n              });\n            });\n\n            return acc.concat(perDir);\n          }, List([]));\n        }();\n        /**\n         * Now create a serverStatic Middleware for each item\n         */\n\n\n        return routeItems.map(function (routeItem) {\n          return routeItem.merge({\n            handle: serveStatic(routeItem.get(\"dir\"), ssOptions)\n          });\n        });\n      }();\n\n      return fromJS({\n        items: ssItems,\n        errors: []\n      });\n    }\n  }\n};\nmodule.exports = serverUtils;","map":{"version":3,"mappings":"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","names":["fs","require","path","join","connect","Immutable","http","https","Map","fromJS","List","snippet","utils","_","serveStatic","default","serveIndex","logger","snippetUtils","lrSnippet","certPath","__dirname","getCa","options","caOption","getIn","readFileSync","isList","toArray","map","x","getKey","getCert","getHttpsServerDefaults","key","cert","ca","passphrase","getPFXDefaults","pfx","serverUtils","getHttpsOptions","userOption","get","isMap","has","mergeDeep","getServer","app","server","httpModule","getHttpModule","opts","createServer","toJS","maybe","resolve","getMiddlewares","bs","clientJs","pluginManager","hook","port","scripts","defaultMiddlewares","id","route","httpProtocol","handle","middleware","isOldIe","getSnippetMiddleware","unshift","getCorsMiddlewware","ssMiddlewares","getServeStaticMiddlewares","withErrors","filter","size","withoutErrors","forEach","item","error","push","apply","userMiddlewares","normaliseMiddleware","beforeMiddlewares","override","afterMiddlewares","concat","length","icons","view","mwStack","Boolean","undefined","getBaseApp","middlewares","stack","rules","blacklist","whitelist","getRegex","rule","isPlainObject","proxyRule","rewriteLinks","lr","create","req","res","next","setHeader","ssOption","serveStaticOptions","dir","i","isString","getFromString","getFromMap","items","errors","type","data","message","getRoute","ssOptions","_dir","ssItems","routeItems","dirString","reduce","acc","routeString","perDir","routeItem","merge","module","exports"],"sources":["../../lib/server/utils.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}