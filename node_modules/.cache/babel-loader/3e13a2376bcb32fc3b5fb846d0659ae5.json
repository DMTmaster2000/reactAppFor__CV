{"ast":null,"code":"/**\n * tFunk for colours/compiler\n */\nvar tfunk = require(\"tfunk\");\n/**\n * Lodash clonedeep & merge\n */\n\n\nvar _ = require(\"./lodash.custom\");\n/**\n * Default configuration.\n * Can be overridden in first constructor arg\n */\n\n\nvar defaults = {\n  /**\n   * Initial log level\n   */\n  level: \"info\",\n\n  /**\n   * Prefix for logger\n   */\n  prefix: \"\",\n\n  /**\n   * Available levels and their score\n   */\n  levels: {\n    \"trace\": 100,\n    \"debug\": 200,\n    \"warn\": 300,\n    \"info\": 400,\n    \"error\": 500\n  },\n\n  /**\n   * Default prefixes\n   */\n  prefixes: {\n    \"trace\": \"[trace] \",\n    \"debug\": \"{yellow:[debug]} \",\n    \"info\": \"{cyan:[info]} \",\n    \"warn\": \"{magenta:[warn]} \",\n    \"error\": \"{red:[error]} \"\n  },\n\n  /**\n   * Should easy log statement be prefixed with the level?\n   */\n  useLevelPrefixes: false\n};\n/**\n * @param {Object} config\n * @constructor\n */\n\nvar Logger = function (config) {\n  if (!(this instanceof Logger)) {\n    return new Logger(config);\n  }\n\n  config = config || {};\n  this._mute = false;\n  this.config = _.merge({}, defaults, config);\n  this.addLevelMethods(this.config.levels);\n  this.compiler = new tfunk.Compiler(this.config.custom || {}, this.config);\n  this._memo = {};\n  return this;\n};\n/**\n * Set an option once\n * @param path\n * @param value\n */\n\n\nLogger.prototype.setOnce = function (path, value) {\n  if (typeof this.config[path] !== \"undefined\") {\n    if (typeof this._memo[path] === \"undefined\") {\n      this._memo[path] = this.config[path];\n    }\n\n    this.config[path] = value;\n  }\n\n  return this;\n};\n/**\n * Add convenience method such as\n * logger.warn(\"msg\")\n * logger.error(\"msg\")\n * logger.info(\"msg\")\n *\n * instead of\n * logger.log(\"warn\", \"msg\");\n * @param items\n */\n\n\nLogger.prototype.addLevelMethods = function (items) {\n  Object.keys(items).forEach(function (item) {\n    if (!this[item]) {\n      this[item] = function () {\n        var args = Array.prototype.slice.call(arguments);\n        this.log.apply(this, args);\n        return this;\n      }.bind(this, item);\n    }\n  }, this);\n};\n/**\n * Reset the state of the logger.\n * @returns {Logger}\n */\n\n\nLogger.prototype.reset = function () {\n  this.setLevel(defaults.level).setLevelPrefixes(defaults.useLevelPrefixes).mute(false);\n  return this;\n};\n/**\n * @param {String} level\n * @returns {boolean}\n */\n\n\nLogger.prototype.canLog = function (level) {\n  return this.config.levels[level] >= this.config.levels[this.config.level] && !this._mute;\n};\n/**\n * Log to the console with prefix\n * @param {String} level\n * @param {String} msg\n * @returns {Logger}\n */\n\n\nLogger.prototype.log = function (level, msg) {\n  var args = Array.prototype.slice.call(arguments);\n  this.logOne(args, msg, level);\n  return this;\n};\n/**\n * Set the log level\n * @param {String} level\n * @returns {Logger}\n */\n\n\nLogger.prototype.setLevel = function (level) {\n  this.config.level = level;\n  return this;\n};\n/**\n * @param {boolean} state\n * @returns {Logger}\n */\n\n\nLogger.prototype.setLevelPrefixes = function (state) {\n  this.config.useLevelPrefixes = state;\n  return this;\n};\n/**\n * @param prefix\n */\n\n\nLogger.prototype.setPrefix = function (prefix) {\n  if (typeof prefix === \"string\") {\n    this.compiler.prefix = this.compiler.compile(prefix, true);\n  }\n\n  if (typeof prefix === \"function\") {\n    this.compiler.prefix = prefix;\n  }\n};\n/**\n * @param {String} level\n * @param {String} msg\n * @returns {Logger}\n */\n\n\nLogger.prototype.unprefixed = function (level, msg) {\n  var args = Array.prototype.slice.call(arguments);\n  this.logOne(args, msg, level, true);\n  return this;\n};\n/**\n * @param {Array} args\n * @param {String} msg\n * @param {String} level\n * @param {boolean} [unprefixed]\n * @returns {Logger}\n */\n\n\nLogger.prototype.logOne = function (args, msg, level, unprefixed) {\n  if (!this.canLog(level)) {\n    return;\n  }\n\n  args = args.slice(2);\n\n  if (this.config.useLevelPrefixes && !unprefixed) {\n    msg = this.config.prefixes[level] + msg;\n  }\n\n  msg = this.compiler.compile(msg, unprefixed);\n  args.unshift(msg);\n  console.log.apply(console, args);\n  this.resetTemps();\n  return this;\n};\n/**\n * Reset any temporary value\n */\n\n\nLogger.prototype.resetTemps = function () {\n  Object.keys(this._memo).forEach(function (key) {\n    this.config[key] = this._memo[key];\n  }, this);\n};\n/**\n * Mute the logger\n */\n\n\nLogger.prototype.mute = function (bool) {\n  this._mute = bool;\n  return this;\n};\n/**\n * Clone the instance to share setup\n * @param opts\n * @returns {Logger}\n */\n\n\nLogger.prototype.clone = function (opts) {\n  var config = _.cloneDeep(this.config);\n\n  if (typeof opts === \"function\") {\n    config = opts(config) || {};\n  } else {\n    config = _.merge({}, config, opts || {});\n  }\n\n  return new Logger(config);\n};\n\nmodule.exports.Logger = Logger;\nmodule.exports.compile = tfunk;","map":{"version":3,"names":["tfunk","require","_","defaults","level","prefix","levels","prefixes","useLevelPrefixes","Logger","config","_mute","merge","addLevelMethods","compiler","Compiler","custom","_memo","prototype","setOnce","path","value","items","Object","keys","forEach","item","args","Array","slice","call","arguments","log","apply","bind","reset","setLevel","setLevelPrefixes","mute","canLog","msg","logOne","state","setPrefix","compile","unprefixed","unshift","console","resetTemps","key","bool","clone","opts","cloneDeep","module","exports"],"sources":["/Users/johnberetty/node_modules/eazy-logger/index.js"],"sourcesContent":["/**\n * tFunk for colours/compiler\n */\nvar tfunk = require(\"tfunk\");\n\n/**\n * Lodash clonedeep & merge\n */\nvar _ = require(\"./lodash.custom\");\n\n/**\n * Default configuration.\n * Can be overridden in first constructor arg\n */\nvar defaults = {\n\n    /**\n     * Initial log level\n     */\n    level: \"info\",\n\n    /**\n     * Prefix for logger\n     */\n    prefix: \"\",\n\n    /**\n     * Available levels and their score\n     */\n    levels: {\n        \"trace\": 100,\n        \"debug\": 200,\n        \"warn\":  300,\n        \"info\":  400,\n        \"error\": 500\n    },\n\n    /**\n     * Default prefixes\n     */\n    prefixes: {\n        \"trace\": \"[trace] \",\n        \"debug\": \"{yellow:[debug]} \",\n        \"info\":  \"{cyan:[info]} \",\n        \"warn\":  \"{magenta:[warn]} \",\n        \"error\": \"{red:[error]} \"\n    },\n\n    /**\n     * Should easy log statement be prefixed with the level?\n     */\n    useLevelPrefixes: false\n};\n\n\n/**\n * @param {Object} config\n * @constructor\n */\nvar Logger = function(config) {\n\n    if (!(this instanceof Logger)) {\n        return new Logger(config);\n    }\n\n    config = config || {};\n\n    this._mute = false;\n    this.config = _.merge({}, defaults, config);\n    this.addLevelMethods(this.config.levels);\n    this.compiler = new tfunk.Compiler(this.config.custom || {}, this.config);\n    this._memo = {};\n\n    return this;\n};\n\n/**\n * Set an option once\n * @param path\n * @param value\n */\nLogger.prototype.setOnce = function (path, value) {\n\n    if (typeof this.config[path] !== \"undefined\") {\n\n        if (typeof this._memo[path] === \"undefined\") {\n            this._memo[path] = this.config[path];\n        }\n\n        this.config[path] = value;\n    }\n\n    return this;\n};\n/**\n * Add convenience method such as\n * logger.warn(\"msg\")\n * logger.error(\"msg\")\n * logger.info(\"msg\")\n *\n * instead of\n * logger.log(\"warn\", \"msg\");\n * @param items\n */\nLogger.prototype.addLevelMethods = function (items) {\n    Object.keys(items).forEach(function (item) {\n        if (!this[item]) {\n            this[item] = function () {\n                var args = Array.prototype.slice.call(arguments);\n                this.log.apply(this, args);\n                return this;\n            }.bind(this, item);\n        }\n    }, this);\n};\n/**\n * Reset the state of the logger.\n * @returns {Logger}\n */\nLogger.prototype.reset = function () {\n\n    this.setLevel(defaults.level)\n        .setLevelPrefixes(defaults.useLevelPrefixes)\n        .mute(false);\n\n    return this;\n};\n\n/**\n * @param {String} level\n * @returns {boolean}\n */\nLogger.prototype.canLog = function (level) {\n    return this.config.levels[level] >= this.config.levels[this.config.level] && !this._mute;\n};\n\n/**\n * Log to the console with prefix\n * @param {String} level\n * @param {String} msg\n * @returns {Logger}\n */\nLogger.prototype.log = function (level, msg) {\n\n    var args = Array.prototype.slice.call(arguments);\n\n    this.logOne(args, msg, level);\n\n    return this;\n};\n\n/**\n * Set the log level\n * @param {String} level\n * @returns {Logger}\n */\nLogger.prototype.setLevel = function (level) {\n\n    this.config.level = level;\n\n    return this;\n};\n\n/**\n * @param {boolean} state\n * @returns {Logger}\n */\nLogger.prototype.setLevelPrefixes = function (state) {\n\n    this.config.useLevelPrefixes = state;\n\n    return this;\n};\n\n/**\n * @param prefix\n */\nLogger.prototype.setPrefix = function (prefix) {\n    if (typeof prefix === \"string\") {\n        this.compiler.prefix = this.compiler.compile(prefix, true);\n    }\n    if (typeof prefix === \"function\") {\n        this.compiler.prefix = prefix;\n    }\n};\n\n/**\n * @param {String} level\n * @param {String} msg\n * @returns {Logger}\n */\nLogger.prototype.unprefixed = function (level, msg) {\n\n    var args = Array.prototype.slice.call(arguments);\n\n    this.logOne(args, msg, level, true);\n\n    return this;\n};\n\n/**\n * @param {Array} args\n * @param {String} msg\n * @param {String} level\n * @param {boolean} [unprefixed]\n * @returns {Logger}\n */\nLogger.prototype.logOne = function (args, msg, level, unprefixed) {\n\n    if (!this.canLog(level)) {\n        return;\n    }\n\n    args = args.slice(2);\n\n    if (this.config.useLevelPrefixes && !unprefixed) {\n        msg = this.config.prefixes[level] + msg;\n    }\n\n    msg = this.compiler.compile(msg, unprefixed);\n\n    args.unshift(msg);\n\n    console.log.apply(console, args);\n\n    this.resetTemps();\n\n    return this;\n};\n\n/**\n * Reset any temporary value\n */\nLogger.prototype.resetTemps = function () {\n\n    Object.keys(this._memo).forEach(function (key) {\n        this.config[key] = this._memo[key];\n    }, this);\n};\n\n/**\n * Mute the logger\n */\nLogger.prototype.mute = function (bool) {\n\n    this._mute = bool;\n    return this;\n};\n\n/**\n * Clone the instance to share setup\n * @param opts\n * @returns {Logger}\n */\nLogger.prototype.clone = function (opts) {\n\n    var config = _.cloneDeep(this.config);\n\n    if (typeof opts === \"function\") {\n        config = opts(config) || {};\n    } else {\n        config = _.merge({}, config, opts || {});\n    }\n\n    return new Logger(config);\n};\n\nmodule.exports.Logger  = Logger;\nmodule.exports.compile = tfunk;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}