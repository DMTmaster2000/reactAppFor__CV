{"ast":null,"code":"module.exports = promisify;\n\nfunction promisify(fn, args) {\n  if (typeof Promise === 'undefined') {\n    throw new Error('Please run in a Promise supported environment or provide a callback');\n  }\n\n  return new Promise(function (resolve, reject) {\n    args = [].slice.call(args).concat([callback]);\n    fn.apply(null, args);\n\n    function callback(error, port) {\n      if (error || port === false) {\n        reject(error || new Error('No open port found'));\n      } else {\n        resolve(port);\n      }\n    }\n  });\n}","map":{"version":3,"names":["module","exports","promisify","fn","args","Promise","Error","resolve","reject","slice","call","concat","callback","apply","error","port"],"sources":["/Users/johnberetty/node_modules/portscanner/lib/promisify.js"],"sourcesContent":["module.exports = promisify\n\nfunction promisify (fn, args) {\n  if (typeof Promise === 'undefined') {\n    throw new Error('Please run in a Promise supported environment or provide a callback')\n  }\n  return new Promise(function (resolve, reject) {\n    args = [].slice.call(args).concat([callback])\n    fn.apply(null, args)\n\n    function callback (error, port) {\n      if (error || port === false) {\n        reject(error || new Error('No open port found'))\n      } else {\n        resolve(port)\n      }\n    }\n  })\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;;AAEA,SAASA,SAAT,CAAoBC,EAApB,EAAwBC,IAAxB,EAA8B;EAC5B,IAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;IAClC,MAAM,IAAIC,KAAJ,CAAU,qEAAV,CAAN;EACD;;EACD,OAAO,IAAID,OAAJ,CAAY,UAAUE,OAAV,EAAmBC,MAAnB,EAA2B;IAC5CJ,IAAI,GAAG,GAAGK,KAAH,CAASC,IAAT,CAAcN,IAAd,EAAoBO,MAApB,CAA2B,CAACC,QAAD,CAA3B,CAAP;IACAT,EAAE,CAACU,KAAH,CAAS,IAAT,EAAeT,IAAf;;IAEA,SAASQ,QAAT,CAAmBE,KAAnB,EAA0BC,IAA1B,EAAgC;MAC9B,IAAID,KAAK,IAAIC,IAAI,KAAK,KAAtB,EAA6B;QAC3BP,MAAM,CAACM,KAAK,IAAI,IAAIR,KAAJ,CAAU,oBAAV,CAAV,CAAN;MACD,CAFD,MAEO;QACLC,OAAO,CAACQ,IAAD,CAAP;MACD;IACF;EACF,CAXM,CAAP;AAYD"},"metadata":{},"sourceType":"script"}