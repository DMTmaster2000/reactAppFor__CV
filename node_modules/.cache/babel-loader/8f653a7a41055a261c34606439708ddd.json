{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./lodash.custom\");\n\nvar fs = require(\"fs\");\n\nvar config = require(\"./config\");\n\nfunction getPath(options, relative, port) {\n  if (options.get(\"mode\") === \"snippet\") {\n    return options.get(\"scheme\") + \"://HOST:\" + port + relative;\n  } else {\n    return \"//HOST:\" + port + relative;\n  }\n}\n\nvar connectUtils = {\n  /**\n   * Allow users to disable the Browsersync snippet\n   * @param {Immutable.Map} options\n   * @returns {Boolean}\n   */\n  enabled: function (options) {\n    var userValue = options.get(\"snippet\");\n\n    if (typeof userValue === \"boolean\") {\n      return userValue;\n    }\n\n    return true;\n  },\n\n  /**\n   * @param {Immutable.Map} options\n   * @returns {String}\n   */\n  scriptTags: function (options) {\n    var scriptPath = this.clientScript(options);\n    var async = options.getIn([\"snippetOptions\", \"async\"]);\n    var scriptDomain = options.getIn([\"script\", \"domain\"]);\n    /**\n     * Generate the [src] attribute based on user options\n     */\n\n    var scriptSrc = function () {\n      if (options.get(\"localOnly\")) {\n        return [options.get(\"scheme\"), \"://localhost:\", options.get(\"port\"), scriptPath].join(\"\");\n      }\n      /**\n       * First, was \"scriptPath\" set? if so the user wanted full control over the\n       * script tag output\n       *\n       */\n\n\n      if (_.isFunction(options.get(\"scriptPath\"))) {\n        return options.get(\"scriptPath\").apply(null, getScriptArgs(options, scriptPath));\n      }\n      /**\n       * Next, if \"script.domain\" was given, allow that + the path to the JS file\n       * eg:\n       *  script.domain=localhost:3000\n       * -> localhost:3000/browser-sync/browser-sync-client.js\n       */\n\n\n      if (scriptDomain) {\n        if (_.isFunction(scriptDomain)) {\n          return scriptDomain.call(null, options) + scriptPath;\n        }\n\n        if (scriptDomain.match(/\\{port\\}/)) {\n          return scriptDomain.replace(\"{port}\", options.get(\"port\")) + scriptPath;\n        }\n\n        return scriptDomain + scriptPath;\n      }\n      /**\n       * Now if server or proxy, use dynamic script\n       * eg:\n       *  browser-sync start --server\n       * ->\n       *  \"HOST:3000/browser-sync/browser-sync-client.js\".replace(\"HOST\", location.hostname)\n       */\n\n\n      if (options.get(\"server\") || options.get(\"proxy\")) {\n        return scriptPath;\n      }\n      /**\n       * Final use case is snippet mode\n       * -> \"http://HOST:3000/browser-sync/browser-sync-client.js\".replace(\"HOST\", location.hostname)\n       * -> \"//HOST:3000/browser-sync/browser-sync-client.js\".replace(\"HOST\", location.hostname)\"\n       */\n\n\n      return getPath(options, scriptPath, options.get(\"port\"));\n    }();\n    /**\n     * Decide which template shall be used to generate the script tags\n     */\n\n\n    var template = function () {\n      if (scriptDomain || options.get(\"localOnly\")) {\n        return config.templates.scriptTagSimple;\n      }\n\n      return config.templates.scriptTag;\n    }();\n    /**\n     * Finally read the template file from disk and replace\n     * the dynamic values.\n     */\n\n\n    return fs.readFileSync(template, \"utf8\").replace(\"%script%\", scriptSrc).replace(\"%async%\", async ? \"async\" : \"\");\n  },\n\n  /**\n   * @param {Map} options\n   * @returns {String}\n   */\n  socketConnector: function (options) {\n    var socket = options.get(\"socket\");\n    var template = fs.readFileSync(config.templates.connector, \"utf-8\");\n    var url = connectUtils.getConnectionUrl(options);\n    /**\n     * ***Backwards compatibility***. While `socket.path` is technically a\n     * socketIoClientConfig property, it's been documented previously\n     * as a top-level option, so must stay.\n     */\n\n    var clientConfig = socket.get(\"socketIoClientConfig\").merge({\n      path: socket.get(\"path\")\n    });\n    template = template.replace(\"%config%\", JSON.stringify(clientConfig.toJS())).replace(\"%options%\", JSON.stringify(options)).replace(\"%url%\", url);\n    return template;\n  },\n\n  /**\n   * @param {Object} socketOpts\n   * @param {Map} options\n   * @returns {String|Function}\n   */\n  getNamespace: function (socketOpts, options) {\n    var namespace = socketOpts.namespace;\n\n    if (typeof namespace === \"function\") {\n      return namespace(options);\n    }\n\n    if (!namespace.match(/^\\//)) {\n      namespace = \"/\" + namespace;\n    }\n\n    return namespace;\n  },\n\n  /**\n   * @param {Map} options\n   * @returns {string}\n   */\n  getConnectionUrl: function (options) {\n    var socketOpts = options.get(\"socket\").toJS();\n    var namespace = connectUtils.getNamespace(socketOpts, options);\n    var protocol = \"\";\n    var withHostnamePort = \"'{protocol}' + location.hostname + ':{port}{ns}'\";\n    var withHost = \"'{protocol}' + location.host + '{ns}'\";\n    var withDomain = \"'{domain}{ns}'\";\n    var port = options.get(\"port\"); // default use-case is server/proxy\n\n    var string = withHost;\n\n    if (options.get(\"mode\") !== \"server\") {\n      protocol = options.get(\"scheme\") + \"://\";\n      string = withHostnamePort;\n    }\n\n    if (options.get(\"mode\") === \"proxy\" && options.getIn([\"proxy\", \"ws\"])) {\n      port = options.getIn([\"socket\", \"port\"]);\n    }\n    /**\n     * Ensure socket.domain is always a string (for noop replacements later)\n     */\n\n\n    socketOpts.domain = function () {\n      if (options.get(\"localOnly\")) {\n        string = withDomain;\n        return [options.get(\"scheme\"), \"://localhost:\", options.get(\"port\")].join(\"\");\n      }\n\n      if (socketOpts.domain) {\n        string = withDomain;\n        /**\n         * User provided a function\n         */\n\n        if (_.isFunction(socketOpts.domain)) {\n          return socketOpts.domain.call(null, options);\n        }\n        /**\n         * User provided a string\n         */\n\n\n        if (_.isString(socketOpts.domain)) {\n          return socketOpts.domain;\n        }\n      }\n\n      return \"\";\n    }();\n\n    return string.replace(\"{protocol}\", protocol).replace(\"{port}\", port).replace(\"{domain}\", socketOpts.domain.replace(\"{port}\", port)).replace(\"{ns}\", namespace);\n  },\n\n  /**\n   * @param {Object} [options]\n   * @param {Boolean} [both]\n   */\n  clientScript: function (options, both) {\n    var prefix = options.getIn([\"socket\", \"clientPath\"]);\n    var script = prefix + \"/browser-sync-client.js\";\n    var versioned = prefix + \"/browser-sync-client.js?v=\" + options.get(\"version\");\n\n    if (both) {\n      return {\n        path: script,\n        versioned: versioned\n      };\n    }\n\n    return versioned;\n  }\n};\n/**\n * @param options\n * @returns {*[]}\n */\n\nfunction getScriptArgs(options, scriptPath) {\n  var abspath = options.get(\"scheme\") + \"://HOST:\" + options.get(\"port\") + scriptPath;\n  return [scriptPath, options.get(\"port\"), options.set(\"absolute\", abspath)];\n}\n\nmodule.exports = connectUtils;","map":{"version":3,"mappings":"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","names":["_","require","fs","config","getPath","options","relative","port","get","connectUtils","enabled","userValue","scriptTags","scriptPath","clientScript","async","getIn","scriptDomain","scriptSrc","join","isFunction","apply","getScriptArgs","call","match","replace","template","templates","scriptTagSimple","scriptTag","readFileSync","socketConnector","socket","connector","url","getConnectionUrl","clientConfig","merge","path","JSON","stringify","toJS","getNamespace","socketOpts","namespace","protocol","withHostnamePort","withHost","withDomain","string","domain","isString","both","prefix","script","versioned","abspath","set","module","exports"],"sources":["../lib/connect-utils.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}