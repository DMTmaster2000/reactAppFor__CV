{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Emitter = require('events').EventEmitter;\n/**\n * Module exports.\n */\n\n\nmodule.exports = Adapter;\n/**\n * Memory adapter constructor.\n *\n * @param {Namespace} nsp\n * @api public\n */\n\nfunction Adapter(nsp) {\n  this.nsp = nsp;\n  this.rooms = {};\n  this.sids = {};\n  this.encoder = nsp.server.encoder;\n}\n/**\n * Inherits from `EventEmitter`.\n */\n\n\nAdapter.prototype.__proto__ = Emitter.prototype;\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.add = function (id, room, fn) {\n  return this.addAll(id, [room], fn);\n};\n/**\n * Adds a socket to a list of room.\n *\n * @param {String} socket id\n * @param {String} rooms\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.addAll = function (id, rooms, fn) {\n  for (var i = 0; i < rooms.length; i++) {\n    var room = rooms[i];\n    this.sids[id] = this.sids[id] || {};\n    this.sids[id][room] = true;\n    this.rooms[room] = this.rooms[room] || Room();\n    this.rooms[room].add(id);\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.del = function (id, room, fn) {\n  if (this.sids[id]) delete this.sids[id][room];\n\n  if (this.rooms.hasOwnProperty(room)) {\n    this.rooms[room].del(id);\n    if (this.rooms[room].length === 0) delete this.rooms[room];\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n/**\n * Removes a socket from all rooms it's joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.delAll = function (id, fn) {\n  var rooms = this.sids[id];\n\n  if (rooms) {\n    for (var room in rooms) {\n      if (this.rooms.hasOwnProperty(room)) {\n        this.rooms[room].del(id);\n        if (this.rooms[room].length === 0) delete this.rooms[room];\n      }\n    }\n  }\n\n  delete this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n/**\n * Broadcasts a packet.\n *\n * Options:\n *  - `flags` {Object} flags for this packet\n *  - `except` {Array} sids that should be excluded\n *  - `rooms` {Array} list of rooms to broadcast to\n *\n * @param {Object} packet object\n * @api public\n */\n\n\nAdapter.prototype.broadcast = function (packet, opts) {\n  var rooms = opts.rooms || [];\n  var except = opts.except || [];\n  var flags = opts.flags || {};\n  var packetOpts = {\n    preEncoded: true,\n    volatile: flags.volatile,\n    compress: flags.compress\n  };\n  var ids = {};\n  var self = this;\n  var socket;\n  packet.nsp = this.nsp.name;\n  this.encoder.encode(packet, function (encodedPackets) {\n    if (rooms.length) {\n      for (var i = 0; i < rooms.length; i++) {\n        var room = self.rooms[rooms[i]];\n        if (!room) continue;\n        var sockets = room.sockets;\n\n        for (var id in sockets) {\n          if (sockets.hasOwnProperty(id)) {\n            if (ids[id] || ~except.indexOf(id)) continue;\n            socket = self.nsp.connected[id];\n\n            if (socket) {\n              socket.packet(encodedPackets, packetOpts);\n              ids[id] = true;\n            }\n          }\n        }\n      }\n    } else {\n      for (var id in self.sids) {\n        if (self.sids.hasOwnProperty(id)) {\n          if (~except.indexOf(id)) continue;\n          socket = self.nsp.connected[id];\n          if (socket) socket.packet(encodedPackets, packetOpts);\n        }\n      }\n    }\n  });\n};\n/**\n * Gets a list of clients by sid.\n *\n * @param {Array} explicit set of rooms to check.\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.clients = function (rooms, fn) {\n  if ('function' == typeof rooms) {\n    fn = rooms;\n    rooms = null;\n  }\n\n  rooms = rooms || [];\n  var ids = {};\n  var sids = [];\n  var socket;\n\n  if (rooms.length) {\n    for (var i = 0; i < rooms.length; i++) {\n      var room = this.rooms[rooms[i]];\n      if (!room) continue;\n      var sockets = room.sockets;\n\n      for (var id in sockets) {\n        if (sockets.hasOwnProperty(id)) {\n          if (ids[id]) continue;\n          socket = this.nsp.connected[id];\n\n          if (socket) {\n            sids.push(id);\n            ids[id] = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (var id in this.sids) {\n      if (this.sids.hasOwnProperty(id)) {\n        socket = this.nsp.connected[id];\n        if (socket) sids.push(id);\n      }\n    }\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null, sids));\n};\n/**\n * Gets the list of rooms a given client has joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.clientRooms = function (id, fn) {\n  var rooms = this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null, rooms ? Object.keys(rooms) : null));\n};\n/**\n* Room constructor.\n*\n* @api private\n*/\n\n\nfunction Room() {\n  if (!(this instanceof Room)) return new Room();\n  this.sockets = {};\n  this.length = 0;\n}\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @api private\n */\n\n\nRoom.prototype.add = function (id) {\n  if (!this.sockets.hasOwnProperty(id)) {\n    this.sockets[id] = true;\n    this.length++;\n  }\n};\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @api private\n */\n\n\nRoom.prototype.del = function (id) {\n  if (this.sockets.hasOwnProperty(id)) {\n    delete this.sockets[id];\n    this.length--;\n  }\n};","map":{"version":3,"names":["Emitter","require","EventEmitter","module","exports","Adapter","nsp","rooms","sids","encoder","server","prototype","__proto__","add","id","room","fn","addAll","i","length","Room","process","nextTick","bind","del","hasOwnProperty","delAll","broadcast","packet","opts","except","flags","packetOpts","preEncoded","volatile","compress","ids","self","socket","name","encode","encodedPackets","sockets","indexOf","connected","clients","push","clientRooms","Object","keys"],"sources":["/Users/johnberetty/node_modules/socket.io-adapter/index.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('events').EventEmitter;\n\n/**\n * Module exports.\n */\n\nmodule.exports = Adapter;\n\n/**\n * Memory adapter constructor.\n *\n * @param {Namespace} nsp\n * @api public\n */\n\nfunction Adapter(nsp){\n  this.nsp = nsp;\n  this.rooms = {};\n  this.sids = {};\n  this.encoder = nsp.server.encoder;\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nAdapter.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.add = function(id, room, fn){\n  return this.addAll(id, [ room ], fn);\n};\n\n/**\n * Adds a socket to a list of room.\n *\n * @param {String} socket id\n * @param {String} rooms\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.addAll = function(id, rooms, fn){\n  for (var i = 0; i < rooms.length; i++) {\n    var room = rooms[i];\n    this.sids[id] = this.sids[id] || {};\n    this.sids[id][room] = true;\n    this.rooms[room] = this.rooms[room] || Room();\n    this.rooms[room].add(id);\n  }\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.del = function(id, room, fn){\n  if (this.sids[id]) delete this.sids[id][room];\n\n  if (this.rooms.hasOwnProperty(room)) {\n    this.rooms[room].del(id);\n    if (this.rooms[room].length === 0) delete this.rooms[room];\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from all rooms it's joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.delAll = function(id, fn){\n  var rooms = this.sids[id];\n  if (rooms) {\n    for (var room in rooms) {\n      if (this.rooms.hasOwnProperty(room)) {\n        this.rooms[room].del(id);\n        if (this.rooms[room].length === 0) delete this.rooms[room];\n      }\n    }\n  }\n  delete this.sids[id];\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Broadcasts a packet.\n *\n * Options:\n *  - `flags` {Object} flags for this packet\n *  - `except` {Array} sids that should be excluded\n *  - `rooms` {Array} list of rooms to broadcast to\n *\n * @param {Object} packet object\n * @api public\n */\n\nAdapter.prototype.broadcast = function(packet, opts){\n  var rooms = opts.rooms || [];\n  var except = opts.except || [];\n  var flags = opts.flags || {};\n  var packetOpts = {\n    preEncoded: true,\n    volatile: flags.volatile,\n    compress: flags.compress\n  };\n  var ids = {};\n  var self = this;\n  var socket;\n\n  packet.nsp = this.nsp.name;\n  this.encoder.encode(packet, function(encodedPackets) {\n    if (rooms.length) {\n      for (var i = 0; i < rooms.length; i++) {\n        var room = self.rooms[rooms[i]];\n        if (!room) continue;\n        var sockets = room.sockets;\n        for (var id in sockets) {\n          if (sockets.hasOwnProperty(id)) {\n            if (ids[id] || ~except.indexOf(id)) continue;\n            socket = self.nsp.connected[id];\n            if (socket) {\n              socket.packet(encodedPackets, packetOpts);\n              ids[id] = true;\n            }\n          }\n        }\n      }\n    } else {\n      for (var id in self.sids) {\n        if (self.sids.hasOwnProperty(id)) {\n          if (~except.indexOf(id)) continue;\n          socket = self.nsp.connected[id];\n          if (socket) socket.packet(encodedPackets, packetOpts);\n        }\n      }\n    }\n  });\n};\n\n/**\n * Gets a list of clients by sid.\n *\n * @param {Array} explicit set of rooms to check.\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.clients = function(rooms, fn){\n  if ('function' == typeof rooms){\n    fn = rooms;\n    rooms = null;\n  }\n\n  rooms = rooms || [];\n\n  var ids = {};\n  var sids = [];\n  var socket;\n\n  if (rooms.length) {\n    for (var i = 0; i < rooms.length; i++) {\n      var room = this.rooms[rooms[i]];\n      if (!room) continue;\n      var sockets = room.sockets;\n      for (var id in sockets) {\n        if (sockets.hasOwnProperty(id)) {\n          if (ids[id]) continue;\n          socket = this.nsp.connected[id];\n          if (socket) {\n            sids.push(id);\n            ids[id] = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (var id in this.sids) {\n      if (this.sids.hasOwnProperty(id)) {\n        socket = this.nsp.connected[id];\n        if (socket) sids.push(id);\n      }\n    }\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null, sids));\n};\n\n/**\n * Gets the list of rooms a given client has joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\nAdapter.prototype.clientRooms = function(id, fn){\n  var rooms = this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null, rooms ? Object.keys(rooms) : null));\n};\n\n/**\n* Room constructor.\n*\n* @api private\n*/\n\nfunction Room(){\n  if (!(this instanceof Room)) return new Room();\n  this.sockets = {};\n  this.length = 0;\n}\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.add = function(id){\n  if (!this.sockets.hasOwnProperty(id)) {\n    this.sockets[id] = true;\n    this.length++;\n  }\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.del = function(id){\n  if (this.sockets.hasOwnProperty(id)) {\n    delete this.sockets[id];\n    this.length--;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}