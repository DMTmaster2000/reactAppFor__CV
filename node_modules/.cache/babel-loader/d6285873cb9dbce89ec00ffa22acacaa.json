{"ast":null,"code":"'use strict'; // most of this code was written by Andrew Kelley\n// licensed under the BSD license: see\n// https://github.com/andrewrk/node-mv/blob/master/package.json\n// this needs a cleanup\n\nconst u = require('universalify').fromCallback;\n\nconst fs = require('graceful-fs');\n\nconst ncp = require('../copy/ncp');\n\nconst path = require('path');\n\nconst remove = require('../remove').remove;\n\nconst mkdirp = require('../mkdirs').mkdirs;\n\nfunction move(source, dest, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  const shouldMkdirp = 'mkdirp' in options ? options.mkdirp : true;\n  const overwrite = options.overwrite || options.clobber || false;\n\n  if (shouldMkdirp) {\n    mkdirs();\n  } else {\n    doRename();\n  }\n\n  function mkdirs() {\n    mkdirp(path.dirname(dest), err => {\n      if (err) return callback(err);\n      doRename();\n    });\n  }\n\n  function doRename() {\n    if (path.resolve(source) === path.resolve(dest)) {\n      fs.access(source, callback);\n    } else if (overwrite) {\n      fs.rename(source, dest, err => {\n        if (!err) return callback();\n\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST') {\n          remove(dest, err => {\n            if (err) return callback(err);\n            options.overwrite = false; // just overwriteed it, no need to do it again\n\n            move(source, dest, options, callback);\n          });\n          return;\n        } // weird Windows shit\n\n\n        if (err.code === 'EPERM') {\n          setTimeout(() => {\n            remove(dest, err => {\n              if (err) return callback(err);\n              options.overwrite = false;\n              move(source, dest, options, callback);\n            });\n          }, 200);\n          return;\n        }\n\n        if (err.code !== 'EXDEV') return callback(err);\n        moveAcrossDevice(source, dest, overwrite, callback);\n      });\n    } else {\n      fs.link(source, dest, err => {\n        if (err) {\n          if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {\n            moveAcrossDevice(source, dest, overwrite, callback);\n            return;\n          }\n\n          callback(err);\n          return;\n        }\n\n        fs.unlink(source, callback);\n      });\n    }\n  }\n}\n\nfunction moveAcrossDevice(source, dest, overwrite, callback) {\n  fs.stat(source, (err, stat) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (stat.isDirectory()) {\n      moveDirAcrossDevice(source, dest, overwrite, callback);\n    } else {\n      moveFileAcrossDevice(source, dest, overwrite, callback);\n    }\n  });\n}\n\nfunction moveFileAcrossDevice(source, dest, overwrite, callback) {\n  const flags = overwrite ? 'w' : 'wx';\n  const ins = fs.createReadStream(source);\n  const outs = fs.createWriteStream(dest, {\n    flags\n  });\n  ins.on('error', err => {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose); // may want to create a directory but `out` line above\n    // creates an empty file for us: See #108\n    // don't care about error here\n\n    fs.unlink(dest, () => {\n      // note: `err` here is from the input stream errror\n      if (err.code === 'EISDIR' || err.code === 'EPERM') {\n        moveDirAcrossDevice(source, dest, overwrite, callback);\n      } else {\n        callback(err);\n      }\n    });\n  });\n  outs.on('error', err => {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n    callback(err);\n  });\n  outs.once('close', onClose);\n  ins.pipe(outs);\n\n  function onClose() {\n    fs.unlink(source, callback);\n  }\n}\n\nfunction moveDirAcrossDevice(source, dest, overwrite, callback) {\n  const options = {\n    overwrite: false\n  };\n\n  if (overwrite) {\n    remove(dest, err => {\n      if (err) return callback(err);\n      startNcp();\n    });\n  } else {\n    startNcp();\n  }\n\n  function startNcp() {\n    ncp(source, dest, options, err => {\n      if (err) return callback(err);\n      remove(source, callback);\n    });\n  }\n}\n\nmodule.exports = {\n  move: u(move)\n};","map":{"version":3,"names":["u","require","fromCallback","fs","ncp","path","remove","mkdirp","mkdirs","move","source","dest","options","callback","shouldMkdirp","overwrite","clobber","doRename","dirname","err","resolve","access","rename","code","setTimeout","moveAcrossDevice","link","unlink","stat","isDirectory","moveDirAcrossDevice","moveFileAcrossDevice","flags","ins","createReadStream","outs","createWriteStream","on","destroy","removeListener","onClose","once","pipe","startNcp","module","exports"],"sources":["/Users/johnberetty/node_modules/fs-extra/lib/move/index.js"],"sourcesContent":["'use strict'\n\n// most of this code was written by Andrew Kelley\n// licensed under the BSD license: see\n// https://github.com/andrewrk/node-mv/blob/master/package.json\n\n// this needs a cleanup\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst ncp = require('../copy/ncp')\nconst path = require('path')\nconst remove = require('../remove').remove\nconst mkdirp = require('../mkdirs').mkdirs\n\nfunction move (source, dest, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  const shouldMkdirp = ('mkdirp' in options) ? options.mkdirp : true\n  const overwrite = options.overwrite || options.clobber || false\n\n  if (shouldMkdirp) {\n    mkdirs()\n  } else {\n    doRename()\n  }\n\n  function mkdirs () {\n    mkdirp(path.dirname(dest), err => {\n      if (err) return callback(err)\n      doRename()\n    })\n  }\n\n  function doRename () {\n    if (path.resolve(source) === path.resolve(dest)) {\n      fs.access(source, callback)\n    } else if (overwrite) {\n      fs.rename(source, dest, err => {\n        if (!err) return callback()\n\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST') {\n          remove(dest, err => {\n            if (err) return callback(err)\n            options.overwrite = false // just overwriteed it, no need to do it again\n            move(source, dest, options, callback)\n          })\n          return\n        }\n\n        // weird Windows shit\n        if (err.code === 'EPERM') {\n          setTimeout(() => {\n            remove(dest, err => {\n              if (err) return callback(err)\n              options.overwrite = false\n              move(source, dest, options, callback)\n            })\n          }, 200)\n          return\n        }\n\n        if (err.code !== 'EXDEV') return callback(err)\n        moveAcrossDevice(source, dest, overwrite, callback)\n      })\n    } else {\n      fs.link(source, dest, err => {\n        if (err) {\n          if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {\n            moveAcrossDevice(source, dest, overwrite, callback)\n            return\n          }\n          callback(err)\n          return\n        }\n        fs.unlink(source, callback)\n      })\n    }\n  }\n}\n\nfunction moveAcrossDevice (source, dest, overwrite, callback) {\n  fs.stat(source, (err, stat) => {\n    if (err) {\n      callback(err)\n      return\n    }\n\n    if (stat.isDirectory()) {\n      moveDirAcrossDevice(source, dest, overwrite, callback)\n    } else {\n      moveFileAcrossDevice(source, dest, overwrite, callback)\n    }\n  })\n}\n\nfunction moveFileAcrossDevice (source, dest, overwrite, callback) {\n  const flags = overwrite ? 'w' : 'wx'\n  const ins = fs.createReadStream(source)\n  const outs = fs.createWriteStream(dest, { flags })\n\n  ins.on('error', err => {\n    ins.destroy()\n    outs.destroy()\n    outs.removeListener('close', onClose)\n\n    // may want to create a directory but `out` line above\n    // creates an empty file for us: See #108\n    // don't care about error here\n    fs.unlink(dest, () => {\n      // note: `err` here is from the input stream errror\n      if (err.code === 'EISDIR' || err.code === 'EPERM') {\n        moveDirAcrossDevice(source, dest, overwrite, callback)\n      } else {\n        callback(err)\n      }\n    })\n  })\n\n  outs.on('error', err => {\n    ins.destroy()\n    outs.destroy()\n    outs.removeListener('close', onClose)\n    callback(err)\n  })\n\n  outs.once('close', onClose)\n  ins.pipe(outs)\n\n  function onClose () {\n    fs.unlink(source, callback)\n  }\n}\n\nfunction moveDirAcrossDevice (source, dest, overwrite, callback) {\n  const options = {\n    overwrite: false\n  }\n\n  if (overwrite) {\n    remove(dest, err => {\n      if (err) return callback(err)\n      startNcp()\n    })\n  } else {\n    startNcp()\n  }\n\n  function startNcp () {\n    ncp(source, dest, options, err => {\n      if (err) return callback(err)\n      remove(source, callback)\n    })\n  }\n}\n\nmodule.exports = {\n  move: u(move)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}