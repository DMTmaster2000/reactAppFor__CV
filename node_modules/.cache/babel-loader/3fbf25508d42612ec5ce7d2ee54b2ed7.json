{"ast":null,"code":"/**\n * Module requirements.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar zlib = require('zlib');\n\nvar accepts = require('accepts');\n\nvar util = require('util');\n\nvar debug = require('debug')('engine:polling');\n\nvar compressionMethods = {\n  gzip: zlib.createGzip,\n  deflate: zlib.createDeflate\n};\n/**\n * Exports the constructor.\n */\n\nmodule.exports = Polling;\n/**\n * HTTP polling constructor.\n *\n * @api public.\n */\n\nfunction Polling(req) {\n  Transport.call(this, req);\n  this.closeTimeout = 30 * 1000;\n  this.maxHttpBufferSize = null;\n  this.httpCompression = null;\n}\n/**\n * Inherits from Transport.\n *\n * @api public.\n */\n\n\nutil.inherits(Polling, Transport);\n/**\n * Transport name\n *\n * @api public\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Overrides onRequest.\n *\n * @param {http.IncomingMessage}\n * @api private\n */\n\nPolling.prototype.onRequest = function (req) {\n  var res = req.res;\n\n  if ('GET' === req.method) {\n    this.onPollRequest(req, res);\n  } else if ('POST' === req.method) {\n    this.onDataRequest(req, res);\n  } else {\n    res.writeHead(500);\n    res.end();\n  }\n};\n/**\n * The client sends a request awaiting for us to send data.\n *\n * @api private\n */\n\n\nPolling.prototype.onPollRequest = function (req, res) {\n  if (this.req) {\n    debug('request overlap'); // assert: this.res, '.req and .res should be (un)set together'\n\n    this.onError('overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  debug('setting request');\n  this.req = req;\n  this.res = res;\n  var self = this;\n\n  function onClose() {\n    self.onError('poll connection closed prematurely');\n  }\n\n  function cleanup() {\n    req.removeListener('close', onClose);\n    self.req = self.res = null;\n  }\n\n  req.cleanup = cleanup;\n  req.on('close', onClose);\n  this.writable = true;\n  this.emit('drain'); // if we're still writable but had a pending close, trigger an empty send\n\n  if (this.writable && this.shouldClose) {\n    debug('triggering empty send to append close packet');\n    this.send([{\n      type: 'noop'\n    }]);\n  }\n};\n/**\n * The client sends a request with data.\n *\n * @api private\n */\n\n\nPolling.prototype.onDataRequest = function (req, res) {\n  if (this.dataReq) {\n    // assert: this.dataRes, '.dataReq and .dataRes should be (un)set together'\n    this.onError('data request overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  var isBinary = 'application/octet-stream' === req.headers['content-type'];\n  this.dataReq = req;\n  this.dataRes = res;\n  var chunks = isBinary ? Buffer.concat([]) : '';\n  var self = this;\n\n  function cleanup() {\n    req.removeListener('data', onData);\n    req.removeListener('end', onEnd);\n    req.removeListener('close', onClose);\n    self.dataReq = self.dataRes = chunks = null;\n  }\n\n  function onClose() {\n    cleanup();\n    self.onError('data request connection closed prematurely');\n  }\n\n  function onData(data) {\n    var contentLength;\n\n    if (isBinary) {\n      chunks = Buffer.concat([chunks, data]);\n      contentLength = chunks.length;\n    } else {\n      chunks += data;\n      contentLength = Buffer.byteLength(chunks);\n    }\n\n    if (contentLength > self.maxHttpBufferSize) {\n      chunks = isBinary ? Buffer.concat([]) : '';\n      req.connection.destroy();\n    }\n  }\n\n  function onEnd() {\n    self.onData(chunks);\n    var headers = {\n      // text/html is required instead of text/plain to avoid an\n      // unwanted download dialog on certain user-agents (GH-43)\n      'Content-Type': 'text/html',\n      'Content-Length': 2\n    };\n    res.writeHead(200, self.headers(req, headers));\n    res.end('ok');\n    cleanup();\n  }\n\n  req.on('close', onClose);\n  if (!isBinary) req.setEncoding('utf8');\n  req.on('data', onData);\n  req.on('end', onEnd);\n};\n/**\n * Processes the incoming data payload.\n *\n * @param {String} encoded payload\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  debug('received \"%s\"', data);\n  var self = this;\n\n  var callback = function (packet) {\n    if ('close' === packet.type) {\n      debug('got xhr close packet');\n      self.onClose();\n      return false;\n    }\n\n    self.onPacket(packet);\n  };\n\n  parser.decodePayload(data, callback);\n};\n/**\n * Overrides onClose.\n *\n * @api private\n */\n\n\nPolling.prototype.onClose = function () {\n  if (this.writable) {\n    // close pending poll request\n    this.send([{\n      type: 'noop'\n    }]);\n  }\n\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Writes a packet payload.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nPolling.prototype.send = function (packets) {\n  this.writable = false;\n\n  if (this.shouldClose) {\n    debug('appending close packet to payload');\n    packets.push({\n      type: 'close'\n    });\n    this.shouldClose();\n    this.shouldClose = null;\n  }\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    var compress = packets.some(function (packet) {\n      return packet.options && packet.options.compress;\n    });\n    self.write(data, {\n      compress: compress\n    });\n  });\n};\n/**\n * Writes data as response to poll request.\n *\n * @param {String} data\n * @param {Object} options\n * @api private\n */\n\n\nPolling.prototype.write = function (data, options) {\n  debug('writing \"%s\"', data);\n  var self = this;\n  this.doWrite(data, options, function () {\n    self.req.cleanup();\n  });\n};\n/**\n * Performs the write.\n *\n * @api private\n */\n\n\nPolling.prototype.doWrite = function (data, options, callback) {\n  var self = this; // explicit UTF-8 is required for pages not served under utf\n\n  var isString = typeof data === 'string';\n  var contentType = isString ? 'text/plain; charset=UTF-8' : 'application/octet-stream';\n  var headers = {\n    'Content-Type': contentType\n  };\n\n  if (!this.httpCompression || !options.compress) {\n    respond(data);\n    return;\n  }\n\n  var len = isString ? Buffer.byteLength(data) : data.length;\n\n  if (len < this.httpCompression.threshold) {\n    respond(data);\n    return;\n  }\n\n  var encoding = accepts(this.req).encodings(['gzip', 'deflate']);\n\n  if (!encoding) {\n    respond(data);\n    return;\n  }\n\n  this.compress(data, encoding, function (err, data) {\n    if (err) {\n      self.res.writeHead(500);\n      self.res.end();\n      callback(err);\n      return;\n    }\n\n    headers['Content-Encoding'] = encoding;\n    respond(data);\n  });\n\n  function respond(data) {\n    headers['Content-Length'] = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n    self.res.writeHead(200, self.headers(self.req, headers));\n    self.res.end(data);\n    callback();\n  }\n};\n/**\n * Compresses data.\n *\n * @api private\n */\n\n\nPolling.prototype.compress = function (data, encoding, callback) {\n  debug('compressing');\n  var buffers = [];\n  var nread = 0;\n  compressionMethods[encoding](this.httpCompression).on('error', callback).on('data', function (chunk) {\n    buffers.push(chunk);\n    nread += chunk.length;\n  }).on('end', function () {\n    callback(null, Buffer.concat(buffers, nread));\n  }).end(data);\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function (fn) {\n  debug('closing');\n  var self = this;\n  var closeTimeoutTimer;\n\n  if (this.dataReq) {\n    debug('aborting ongoing data request');\n    this.dataReq.destroy();\n  }\n\n  if (this.writable) {\n    debug('transport writable - closing right away');\n    this.send([{\n      type: 'close'\n    }]);\n    onClose();\n  } else if (this.discarded) {\n    debug('transport discarded - closing right away');\n    onClose();\n  } else {\n    debug('transport not writable - buffering orderly close');\n    this.shouldClose = onClose;\n    closeTimeoutTimer = setTimeout(onClose, this.closeTimeout);\n  }\n\n  function onClose() {\n    clearTimeout(closeTimeoutTimer);\n    fn();\n    self.onClose();\n  }\n};\n/**\n * Returns headers for a response.\n *\n * @param {http.IncomingMessage} request\n * @param {Object} extra headers\n * @api private\n */\n\n\nPolling.prototype.headers = function (req, headers) {\n  headers = headers || {}; // prevent XSS warnings on IE\n  // https://github.com/LearnBoost/socket.io/pull/1333\n\n  var ua = req.headers['user-agent'];\n\n  if (ua && (~ua.indexOf(';MSIE') || ~ua.indexOf('Trident/'))) {\n    headers['X-XSS-Protection'] = '0';\n  }\n\n  this.emit('headers', headers);\n  return headers;\n};","map":{"version":3,"names":["Transport","require","parser","zlib","accepts","util","debug","compressionMethods","gzip","createGzip","deflate","createDeflate","module","exports","Polling","req","call","closeTimeout","maxHttpBufferSize","httpCompression","inherits","prototype","name","onRequest","res","method","onPollRequest","onDataRequest","writeHead","end","onError","self","onClose","cleanup","removeListener","on","writable","emit","shouldClose","send","type","dataReq","isBinary","headers","dataRes","chunks","Buffer","concat","onData","onEnd","data","contentLength","length","byteLength","connection","destroy","setEncoding","callback","packet","onPacket","decodePayload","packets","push","encodePayload","supportsBinary","compress","some","options","write","doWrite","isString","contentType","respond","len","threshold","encoding","encodings","err","buffers","nread","chunk","doClose","fn","closeTimeoutTimer","discarded","setTimeout","clearTimeout","ua","indexOf"],"sources":["/Users/johnberetty/node_modules/engine.io/lib/transports/polling.js"],"sourcesContent":["\n/**\n * Module requirements.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar zlib = require('zlib');\nvar accepts = require('accepts');\nvar util = require('util');\nvar debug = require('debug')('engine:polling');\n\nvar compressionMethods = {\n  gzip: zlib.createGzip,\n  deflate: zlib.createDeflate\n};\n\n/**\n * Exports the constructor.\n */\n\nmodule.exports = Polling;\n\n/**\n * HTTP polling constructor.\n *\n * @api public.\n */\n\nfunction Polling (req) {\n  Transport.call(this, req);\n\n  this.closeTimeout = 30 * 1000;\n  this.maxHttpBufferSize = null;\n  this.httpCompression = null;\n}\n\n/**\n * Inherits from Transport.\n *\n * @api public.\n */\n\nutil.inherits(Polling, Transport);\n\n/**\n * Transport name\n *\n * @api public\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Overrides onRequest.\n *\n * @param {http.IncomingMessage}\n * @api private\n */\n\nPolling.prototype.onRequest = function (req) {\n  var res = req.res;\n\n  if ('GET' === req.method) {\n    this.onPollRequest(req, res);\n  } else if ('POST' === req.method) {\n    this.onDataRequest(req, res);\n  } else {\n    res.writeHead(500);\n    res.end();\n  }\n};\n\n/**\n * The client sends a request awaiting for us to send data.\n *\n * @api private\n */\n\nPolling.prototype.onPollRequest = function (req, res) {\n  if (this.req) {\n    debug('request overlap');\n    // assert: this.res, '.req and .res should be (un)set together'\n    this.onError('overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  debug('setting request');\n\n  this.req = req;\n  this.res = res;\n\n  var self = this;\n\n  function onClose () {\n    self.onError('poll connection closed prematurely');\n  }\n\n  function cleanup () {\n    req.removeListener('close', onClose);\n    self.req = self.res = null;\n  }\n\n  req.cleanup = cleanup;\n  req.on('close', onClose);\n\n  this.writable = true;\n  this.emit('drain');\n\n  // if we're still writable but had a pending close, trigger an empty send\n  if (this.writable && this.shouldClose) {\n    debug('triggering empty send to append close packet');\n    this.send([{ type: 'noop' }]);\n  }\n};\n\n/**\n * The client sends a request with data.\n *\n * @api private\n */\n\nPolling.prototype.onDataRequest = function (req, res) {\n  if (this.dataReq) {\n    // assert: this.dataRes, '.dataReq and .dataRes should be (un)set together'\n    this.onError('data request overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  var isBinary = 'application/octet-stream' === req.headers['content-type'];\n\n  this.dataReq = req;\n  this.dataRes = res;\n\n  var chunks = isBinary ? Buffer.concat([]) : '';\n  var self = this;\n\n  function cleanup () {\n    req.removeListener('data', onData);\n    req.removeListener('end', onEnd);\n    req.removeListener('close', onClose);\n    self.dataReq = self.dataRes = chunks = null;\n  }\n\n  function onClose () {\n    cleanup();\n    self.onError('data request connection closed prematurely');\n  }\n\n  function onData (data) {\n    var contentLength;\n    if (isBinary) {\n      chunks = Buffer.concat([chunks, data]);\n      contentLength = chunks.length;\n    } else {\n      chunks += data;\n      contentLength = Buffer.byteLength(chunks);\n    }\n\n    if (contentLength > self.maxHttpBufferSize) {\n      chunks = isBinary ? Buffer.concat([]) : '';\n      req.connection.destroy();\n    }\n  }\n\n  function onEnd () {\n    self.onData(chunks);\n\n    var headers = {\n      // text/html is required instead of text/plain to avoid an\n      // unwanted download dialog on certain user-agents (GH-43)\n      'Content-Type': 'text/html',\n      'Content-Length': 2\n    };\n\n    res.writeHead(200, self.headers(req, headers));\n    res.end('ok');\n    cleanup();\n  }\n\n  req.on('close', onClose);\n  if (!isBinary) req.setEncoding('utf8');\n  req.on('data', onData);\n  req.on('end', onEnd);\n};\n\n/**\n * Processes the incoming data payload.\n *\n * @param {String} encoded payload\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  debug('received \"%s\"', data);\n  var self = this;\n  var callback = function (packet) {\n    if ('close' === packet.type) {\n      debug('got xhr close packet');\n      self.onClose();\n      return false;\n    }\n\n    self.onPacket(packet);\n  };\n\n  parser.decodePayload(data, callback);\n};\n\n/**\n * Overrides onClose.\n *\n * @api private\n */\n\nPolling.prototype.onClose = function () {\n  if (this.writable) {\n    // close pending poll request\n    this.send([{ type: 'noop' }]);\n  }\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Writes a packet payload.\n *\n * @param {Object} packet\n * @api private\n */\n\nPolling.prototype.send = function (packets) {\n  this.writable = false;\n\n  if (this.shouldClose) {\n    debug('appending close packet to payload');\n    packets.push({ type: 'close' });\n    this.shouldClose();\n    this.shouldClose = null;\n  }\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    var compress = packets.some(function (packet) {\n      return packet.options && packet.options.compress;\n    });\n    self.write(data, { compress: compress });\n  });\n};\n\n/**\n * Writes data as response to poll request.\n *\n * @param {String} data\n * @param {Object} options\n * @api private\n */\n\nPolling.prototype.write = function (data, options) {\n  debug('writing \"%s\"', data);\n  var self = this;\n  this.doWrite(data, options, function () {\n    self.req.cleanup();\n  });\n};\n\n/**\n * Performs the write.\n *\n * @api private\n */\n\nPolling.prototype.doWrite = function (data, options, callback) {\n  var self = this;\n\n  // explicit UTF-8 is required for pages not served under utf\n  var isString = typeof data === 'string';\n  var contentType = isString\n    ? 'text/plain; charset=UTF-8'\n    : 'application/octet-stream';\n\n  var headers = {\n    'Content-Type': contentType\n  };\n\n  if (!this.httpCompression || !options.compress) {\n    respond(data);\n    return;\n  }\n\n  var len = isString ? Buffer.byteLength(data) : data.length;\n  if (len < this.httpCompression.threshold) {\n    respond(data);\n    return;\n  }\n\n  var encoding = accepts(this.req).encodings(['gzip', 'deflate']);\n  if (!encoding) {\n    respond(data);\n    return;\n  }\n\n  this.compress(data, encoding, function (err, data) {\n    if (err) {\n      self.res.writeHead(500);\n      self.res.end();\n      callback(err);\n      return;\n    }\n\n    headers['Content-Encoding'] = encoding;\n    respond(data);\n  });\n\n  function respond (data) {\n    headers['Content-Length'] = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n    self.res.writeHead(200, self.headers(self.req, headers));\n    self.res.end(data);\n    callback();\n  }\n};\n\n/**\n * Compresses data.\n *\n * @api private\n */\n\nPolling.prototype.compress = function (data, encoding, callback) {\n  debug('compressing');\n\n  var buffers = [];\n  var nread = 0;\n\n  compressionMethods[encoding](this.httpCompression)\n    .on('error', callback)\n    .on('data', function (chunk) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    })\n    .on('end', function () {\n      callback(null, Buffer.concat(buffers, nread));\n    })\n    .end(data);\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function (fn) {\n  debug('closing');\n\n  var self = this;\n  var closeTimeoutTimer;\n\n  if (this.dataReq) {\n    debug('aborting ongoing data request');\n    this.dataReq.destroy();\n  }\n\n  if (this.writable) {\n    debug('transport writable - closing right away');\n    this.send([{ type: 'close' }]);\n    onClose();\n  } else if (this.discarded) {\n    debug('transport discarded - closing right away');\n    onClose();\n  } else {\n    debug('transport not writable - buffering orderly close');\n    this.shouldClose = onClose;\n    closeTimeoutTimer = setTimeout(onClose, this.closeTimeout);\n  }\n\n  function onClose () {\n    clearTimeout(closeTimeoutTimer);\n    fn();\n    self.onClose();\n  }\n};\n\n/**\n * Returns headers for a response.\n *\n * @param {http.IncomingMessage} request\n * @param {Object} extra headers\n * @api private\n */\n\nPolling.prototype.headers = function (req, headers) {\n  headers = headers || {};\n\n  // prevent XSS warnings on IE\n  // https://github.com/LearnBoost/socket.io/pull/1333\n  var ua = req.headers['user-agent'];\n  if (ua && (~ua.indexOf(';MSIE') || ~ua.indexOf('Trident/'))) {\n    headers['X-XSS-Protection'] = '0';\n  }\n\n  this.emit('headers', headers);\n  return headers;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}