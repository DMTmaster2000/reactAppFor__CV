{"ast":null,"code":"var _jsxFileName = \"/Users/johnberetty/Desktop/my-app/my-app/src/pages/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport PostFilter from '../components/PostFilter';\nimport PostForm from './components/PostForm';\nimport PostList from './components/PostList';\nimport MyButton from './components/UI/button/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { usePosts } from './hooks/usePosts';\nimport './styles/App.css';\nimport PostService from './API/PostService';\nimport Loader from './components/UI/loader/Loader';\nimport { useFetching } from './hooks/useFetching';\nimport { getPageCount, getPagesArray } from './components/utils/pages';\nimport Pagination from './components/UI/pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [fetchPosts, isPostLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    console.log(response.data);\n    setPosts(response.data);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const changePage = page => {\n    setPage(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: 30\n      },\n      onClick: () => setModal(true),\n      children: \"Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), isPostLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 50\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 82\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      changePage: changePage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Post, \"E6bzn4iY4wnhTabbV/QiYDlBoFo=\", false, function () {\n  return [usePosts, useFetching];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","PostFilter","PostForm","PostList","MyButton","MyModal","usePosts","PostService","Loader","useFetching","getPageCount","getPagesArray","Pagination","Post","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchedPosts","totalPages","setTotalPages","limit","setLimit","page","setPage","fetchPosts","isPostLoading","postError","response","getAll","console","log","data","totalCount","headers","createPost","newPost","removePost","post","p","id","changePage","marginTop","display","justifyContent"],"sources":["/Users/johnberetty/Desktop/my-app/my-app/src/pages/Post.jsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react'\nimport PostFilter from '../components/PostFilter';\nimport PostForm from './components/PostForm';\nimport PostList from './components/PostList';\nimport MyButton from './components/UI/button/MyButton'\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { usePosts } from './hooks/usePosts';\nimport './styles/App.css'\nimport PostService from './API/PostService';\nimport Loader from './components/UI/loader/Loader';\nimport { useFetching } from './hooks/useFetching';\nimport { getPageCount, getPagesArray } from './components/utils/pages';\nimport Pagination from './components/UI/pagination/Pagination';\n\n\nfunction Post() {\n\n\tconst [posts, setPosts] = useState([])\n\tconst [filter, setFilter] = useState({ sort: '', query: '' })\n\tconst [modal, setModal] = useState(false)\n\tconst sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\n\tconst [totalPages, setTotalPages] = useState(0)\n\tconst [limit, setLimit] = useState(10)\n\tconst [page, setPage] = useState(1)\n\tconst [fetchPosts, isPostLoading, postError] = useFetching(async () => {\n\t\tconst response = await PostService.getAll(limit, page)\n\t\tconsole.log(response.data)\n\t\tsetPosts(response.data);\n\t\tconst totalCount = response.headers['x-total-count']\n\t\tsetTotalPages(getPageCount(totalCount, limit))\n\t})\n\n\n\n\tuseEffect(() => {\n\t\tfetchPosts()\n\t}, [page])\n\n\tconst createPost = (newPost) => {\n\t\tsetPosts([...posts, newPost])\n\t\tsetModal(false)\n\t}\n\tconst removePost = (post) => {\n\t\tsetPosts(posts.filter(p => p.id !== post.id))\n\t}\n\n\tconst changePage = (page) => {\n\t\tsetPage(page)\n\t}\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<MyButton style={{ marginTop: 30 }} onClick={() => setModal(true)} >\n\t\t\t\tCreate User\n\t\t\t</MyButton>\n\t\t\t<MyModal\n\t\t\t\tvisible={modal}\n\t\t\t\tsetVisible={setModal}>\n\t\t\t\t<PostForm create={createPost} />\n\t\t\t</MyModal>\n\n\n\t\t\t<PostFilter filter={filter} setFilter={setFilter} />\n\t\t\t{isPostLoading\n\t\t\t\t? <div style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}> <Loader /></div>\n\t\t\t\t: <PostList remove={removePost} posts={sortedAndSearchedPosts} title='title' />\n\t\t\t}\n\t\t\t<Pagination\n\t\t\t\tchangePage={changePage}\n\t\t\t\ttotalPages={totalPages}\n\t\t\t/>\n\n\n\t\t</div>\n\t);\n}\n\nexport default Post;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}