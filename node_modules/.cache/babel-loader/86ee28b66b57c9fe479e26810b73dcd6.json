{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require(\"../lodash.custom\");\n\nvar cli_options_1 = require(\"../cli/cli-options\");\n/**\n * @param {BrowserSync} browserSync\n * @param {String} [name] - instance name\n * @param {Object} pjson\n * @returns {Function}\n */\n\n\nmodule.exports = function (browserSync, name, pjson) {\n  return function () {\n    /**\n     * Handle new + old signatures for init.\n     */\n    var args = require(\"../args\")(_.toArray(arguments));\n    /**\n     * If the current instance is already running, just return an error\n     */\n\n\n    if (browserSync.active) {\n      return args.cb(new Error(\"Instance: \" + name + \" is already running!\"));\n    } // Env specific items\n\n\n    args.config.version = pjson.version;\n    args.config.cwd = args.config.cwd || process.cwd();\n\n    var _a = cli_options_1.merge(args.config),\n        opts = _a[0],\n        errors = _a[1];\n\n    if (errors.length) {\n      return args.cb(new Error(cli_options_1.printErrors(errors)));\n    }\n\n    return browserSync.init(opts, args.cb);\n  };\n};","map":{"version":3,"mappings":";;;;;;AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,kBAAD,CAAf;;AACA;AAEA;;;;;;;;AAMAC,MAAM,CAACC,OAAP,GAAiB,UAASC,WAAT,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAiC;EAC9C,OAAO;IACH;;;IAGA,IAAIC,IAAI,GAAGN,OAAO,CAAC,SAAD,CAAP,CAAmBD,CAAC,CAACQ,OAAF,CAAUC,SAAV,CAAnB,CAAX;IAEA;;;;;IAGA,IAAIL,WAAW,CAACM,MAAhB,EAAwB;MACpB,OAAOH,IAAI,CAACI,EAAL,CAAQ,IAAIC,KAAJ,CAAU,eAAaP,IAAb,GAAiB,sBAA3B,CAAR,CAAP;IACH,CAXE,CAaH;;;IACAE,IAAI,CAACM,MAAL,CAAYC,OAAZ,GAAsBR,KAAK,CAACQ,OAA5B;IACAP,IAAI,CAACM,MAAL,CAAYE,GAAZ,GAAkBR,IAAI,CAACM,MAAL,CAAYE,GAAZ,IAAmBC,OAAO,CAACD,GAAR,EAArC;;IAEM;IAAA,IAACE,YAAD;IAAA,IAAOC,cAAP;;IAEN,IAAIA,MAAM,CAACC,MAAX,EAAmB;MACf,OAAOZ,IAAI,CAACI,EAAL,CAAQ,IAAIC,KAAJ,CAAUQ,0BAAYF,MAAZ,CAAV,CAAR,CAAP;IACH;;IAED,OAAOd,WAAW,CAACiB,IAAZ,CAAiBJ,IAAjB,EAAuBV,IAAI,CAACI,EAA5B,CAAP;EACH,CAxBD;AAyBH,CA1BD","names":["_","require","module","exports","browserSync","name","pjson","args","toArray","arguments","active","cb","Error","config","version","cwd","process","opts","errors","length","cli_options_1","init"],"sources":["../../lib/public/init.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}