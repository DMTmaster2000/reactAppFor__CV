{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bin_1 = require(\"../../bin\");\n\nfunction handleHostOption(incoming) {\n  var host = incoming.get(\"host\");\n  var listen = incoming.get(\"listen\");\n\n  if (host && listen) {\n    if (host !== listen) {\n      return [incoming, [{\n        errors: [{\n          error: new Error(\"Cannot specify both `host` and `listen` options\"),\n          meta: function () {\n            return [\"\", \"Tip:           Use just the `listen` option *only* if you want to bind only to a particular host.\"];\n          }\n        }],\n        level: bin_1.BsErrorLevels.Fatal,\n        type: bin_1.BsErrorTypes.HostAndListenIncompatible\n      }]];\n    } // whenever we have have both `host` + `listen` options,\n    // we remove the 'host' to prevent complication further down the line\n\n\n    return [incoming.delete(\"host\"), []];\n  }\n\n  return [incoming, []];\n}\n\nexports.handleHostOption = handleHostOption;","map":{"version":3,"mappings":";;;;;;AACA;;AAEA,SAAgBA,gBAAhB,CAAiCC,QAAjC,EAAwD;EACpD,IAAMC,IAAI,GAAkBD,QAAQ,CAACE,GAAT,CAAa,MAAb,CAA5B;EACA,IAAMC,MAAM,GAAkBH,QAAQ,CAACE,GAAT,CAAa,QAAb,CAA9B;;EAEA,IAAID,IAAI,IAAIE,MAAZ,EAAoB;IAChB,IAAIF,IAAI,KAAKE,MAAb,EAAqB;MACjB,OAAO,CACHH,QADG,EAEH,CACI;QACII,MAAM,EAAE,CACJ;UACIC,KAAK,EAAE,IAAIC,KAAJ,CACH,iDADG,CADX;UAIIC,IAAI;YACA,OAAO,CACH,EADG,EAEH,mGAFG,CAAP;UAIH;QATL,CADI,CADZ;QAcIC,KAAK,EAAEC,oBAAcC,KAdzB;QAeIC,IAAI,EAAEF,mBAAaG;MAfvB,CADJ,CAFG,CAAP;IAsBH,CAxBe,CA0BhB;IACA;;;IACA,OAAO,CAACZ,QAAQ,CAACa,MAAT,CAAgB,MAAhB,CAAD,EAA0B,EAA1B,CAAP;EACH;;EAED,OAAO,CAACb,QAAD,EAAW,EAAX,CAAP;AACH;;AApCDc","names":["handleHostOption","incoming","host","get","listen","errors","error","Error","meta","level","bin_1","Fatal","type","HostAndListenIncompatible","delete","exports"],"sources":["../../../lib/cli/transforms/handleHostOption.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}