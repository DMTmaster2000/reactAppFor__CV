{"ast":null,"code":"\"use strict\";\n\nvar utils = require(\"../utils\");\n\nvar publicUtils = require(\"./public-utils\");\n\nvar _ = require(\"../lodash.custom\");\n\nvar defaultConfig = require(\"../default-config\");\n\nvar stream = require(\"./stream\");\n/**\n * @param emitter\n * @returns {Function}\n */\n\n\nmodule.exports = function (emitter) {\n  /**\n   * Inform browsers about file changes.\n   *\n   * eg: reload(\"core.css\")\n   */\n  function browserSyncReload(opts) {\n    /**\n     * BACKWARDS COMPATIBILITY:\n     * Passing an object as the only arg to the `reload`\n     * method with at *least* the key-value pair of {stream: true},\n     * was only ever used for streams support - so it's safe to check\n     * for that signature here and defer to the\n     * dedicated `.stream()` method instead.\n     */\n    if (_.isObject(opts)) {\n      if (!Array.isArray(opts) && Object.keys(opts).length) {\n        if (opts.stream === true) {\n          return stream(emitter)(opts);\n        }\n      }\n    }\n    /**\n     * Handle single string paths such as\n     * reload(\"core.css\")\n     */\n\n\n    if (typeof opts === \"string\" && opts !== \"undefined\") {\n      return publicUtils.emitChangeEvent(emitter, opts, true);\n    }\n    /**\n     * Handle an array of file paths such as\n     * reload([\"core.css, \"ie.css\"])\n     */\n\n\n    if (Array.isArray(opts)) {\n      return opts.forEach(function (filepath) {\n        publicUtils.emitChangeEvent(emitter, filepath, true);\n      });\n    }\n    /**\n     * At this point the argument given was neither an object,\n     * array or string so we simply perform a reload. This is to\n     * allow the following syntax to work as expected\n     *\n     * reload();\n     */\n\n\n    return publicUtils.emitBrowserReload(emitter);\n  }\n\n  return browserSyncReload;\n};","map":{"version":3,"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIE,CAAC,GAAGF,OAAO,CAAC,kBAAD,CAAf;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,mBAAD,CAA3B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAApB;AAEA;;;;;;AAIAK,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAgB;EAC7B;;;;;EAKA,SAASC,iBAAT,CAA2BC,IAA3B,EAA+B;IAC3B;;;;;;;;IAQA,IAAIP,CAAC,CAACQ,QAAF,CAAWD,IAAX,CAAJ,EAAsB;MAClB,IAAI,CAACE,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAD,IAAwBI,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,MAA9C,EAAsD;QAClD,IAAIN,IAAI,CAACL,MAAL,KAAgB,IAApB,EAA0B;UACtB,OAAOA,MAAM,CAACG,OAAD,CAAN,CAAgBE,IAAhB,CAAP;QACH;MACJ;IACJ;IAED;;;;;;IAIA,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,WAAzC,EAAsD;MAClD,OAAOR,WAAW,CAACe,eAAZ,CAA4BT,OAA5B,EAAqCE,IAArC,EAA2C,IAA3C,CAAP;IACH;IAED;;;;;;IAIA,IAAIE,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAJ,EAAyB;MACrB,OAAOA,IAAI,CAACQ,OAAL,CAAa,UAASC,QAAT,EAAiB;QACjCjB,WAAW,CAACe,eAAZ,CAA4BT,OAA5B,EAAqCW,QAArC,EAA+C,IAA/C;MACH,CAFM,CAAP;IAGH;IAED;;;;;;;;;IAOA,OAAOjB,WAAW,CAACkB,iBAAZ,CAA8BZ,OAA9B,CAAP;EACH;;EAED,OAAOC,iBAAP;AACH,CApDD","names":["utils","require","publicUtils","_","defaultConfig","stream","module","exports","emitter","browserSyncReload","opts","isObject","Array","isArray","Object","keys","length","emitChangeEvent","forEach","filepath","emitBrowserReload"],"sources":["../../lib/public/reload.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}