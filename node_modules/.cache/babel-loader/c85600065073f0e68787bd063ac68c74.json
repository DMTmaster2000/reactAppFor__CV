{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require(\"./lodash.custom\");\n\nvar Immutable = require(\"immutable\");\n\nvar defaultConfig = require(\"./default-config\");\n/**\n * Move top-level ws options to proxy.ws\n * This is to allow it to be set from the CLI\n * @param incoming\n */\n\n\nfunction setProxyWs(incoming) {\n  if (incoming.get(\"ws\") && incoming.get(\"mode\") === \"proxy\") {\n    return [incoming.setIn([\"proxy\", \"ws\"], true), []];\n  }\n\n  return [incoming, []];\n}\n\nexports.setProxyWs = setProxyWs;\n/**\n * @param incoming\n */\n\nfunction setOpen(incoming) {\n  return [incoming.update(\"open\", function (open) {\n    if (incoming.get(\"mode\") === \"snippet\") {\n      if (open !== \"ui\" && open !== \"ui-external\") {\n        return false;\n      }\n    }\n\n    return open;\n  }), []];\n}\n\nexports.setOpen = setOpen;\n/**\n * Set the running mode\n * @param incoming\n */\n\nfunction setMode(incoming) {\n  var output = incoming.set(\"mode\", function () {\n    if (incoming.get(\"server\")) {\n      return \"server\";\n    }\n\n    if (incoming.get(\"proxy\")) {\n      return \"proxy\";\n    }\n\n    return \"snippet\";\n  }());\n  return [output, []];\n}\n\nexports.setMode = setMode;\n/**\n * @param incoming\n */\n\nfunction setScheme(incoming) {\n  var scheme = \"http\";\n\n  if (incoming.getIn([\"server\", \"https\"])) {\n    scheme = \"https\";\n  }\n\n  if (incoming.get(\"https\")) {\n    scheme = \"https\";\n  }\n\n  if (incoming.getIn([\"proxy\", \"url\", \"protocol\"])) {\n    if (incoming.getIn([\"proxy\", \"url\", \"protocol\"]) === \"https:\") {\n      scheme = \"https\";\n    }\n  }\n\n  return [incoming.set(\"scheme\", scheme), []];\n}\n\nexports.setScheme = setScheme;\n/**\n * @param incoming\n */\n\nfunction setStartPath(incoming) {\n  if (incoming.get(\"proxy\")) {\n    var path = incoming.getIn([\"proxy\", \"url\", \"path\"]);\n\n    if (path !== \"/\") {\n      return [incoming.set(\"startPath\", path), []];\n    }\n  }\n\n  return [incoming, []];\n}\n\nexports.setStartPath = setStartPath;\n/**\n * @param incoming\n */\n\nfunction setNamespace(incoming) {\n  var namespace = incoming.getIn([\"socket\", \"namespace\"]);\n\n  if (_.isFunction(namespace)) {\n    return [incoming.setIn([\"socket\", \"namespace\"], namespace(defaultConfig.socket.namespace)), []];\n  }\n\n  return [incoming, []];\n}\n\nexports.setNamespace = setNamespace;\n/**\n * @param incoming\n */\n\nfunction setServerOpts(incoming) {\n  if (!incoming.get(\"server\")) {\n    return [incoming, []];\n  }\n\n  var indexarg = incoming.getIn([\"server\", \"index\"]) || \"index.html\";\n  var optPath = [\"server\", \"serveStaticOptions\"];\n\n  if (!incoming.getIn(optPath)) {\n    return [incoming.setIn(optPath, Immutable.Map({\n      index: indexarg\n    })), []];\n  }\n\n  if (!incoming.hasIn(optPath.concat([\"index\"]))) {\n    return [incoming.setIn(optPath.concat([\"index\"]), indexarg), []];\n  }\n\n  return [incoming, []];\n}\n\nexports.setServerOpts = setServerOpts;\n\nfunction liftExtensionsOptionFromCli(incoming) {\n  // cli extensions\n  var optPath = [\"server\", \"serveStaticOptions\"];\n\n  if (incoming.get(\"extensions\")) {\n    return [incoming.setIn(optPath.concat([\"extensions\"]), incoming.get(\"extensions\")), []];\n  }\n\n  return [incoming, []];\n}\n\nexports.liftExtensionsOptionFromCli = liftExtensionsOptionFromCli;\n/**\n * Back-compat fixes for rewriteRules being set to a boolean\n */\n\nfunction fixRewriteRules(incoming) {\n  return [incoming.update(\"rewriteRules\", function (rr) {\n    return Immutable.List([]).concat(rr).filter(Boolean);\n  }), []];\n}\n\nexports.fixRewriteRules = fixRewriteRules;\n\nfunction fixSnippetIgnorePaths(incoming) {\n  var ignorePaths = incoming.getIn([\"snippetOptions\", \"ignorePaths\"]);\n\n  if (ignorePaths) {\n    if (_.isString(ignorePaths)) {\n      ignorePaths = [ignorePaths];\n    }\n\n    ignorePaths = ignorePaths.map(ensureSlash);\n    return [incoming.setIn([\"snippetOptions\", \"blacklist\"], Immutable.List(ignorePaths)), []];\n  }\n\n  return [incoming, []];\n}\n\nexports.fixSnippetIgnorePaths = fixSnippetIgnorePaths;\n\nfunction fixSnippetIncludePaths(incoming) {\n  var includePaths = incoming.getIn([\"snippetOptions\", \"whitelist\"]);\n\n  if (includePaths) {\n    includePaths = includePaths.map(ensureSlash);\n    return [incoming.setIn([\"snippetOptions\", \"whitelist\"], Immutable.List(includePaths)), []];\n  }\n\n  return [incoming, []];\n}\n\nexports.fixSnippetIncludePaths = fixSnippetIncludePaths;\n/**\n * Enforce paths to begin with a forward slash\n */\n\nfunction ensureSlash(item) {\n  if (item[0] !== \"/\") {\n    return \"/\" + item;\n  }\n\n  return item;\n}\n/**\n *\n */\n\n\nfunction setMiddleware(incoming) {\n  var mw = getMiddlwares(incoming);\n  return [incoming.set(\"middleware\", mw), []];\n}\n\nexports.setMiddleware = setMiddleware;\n/**\n * top-level option, or given as part of the proxy/server option\n * @param item\n * @returns {*}\n */\n\nfunction getMiddlwares(item) {\n  var mw = item.get(\"middleware\");\n  var serverMw = item.getIn([\"server\", \"middleware\"]);\n  var proxyMw = item.getIn([\"proxy\", \"middleware\"]);\n  var list = Immutable.List([]);\n\n  if (mw) {\n    return listMerge(list, mw);\n  }\n\n  if (serverMw) {\n    return listMerge(list, serverMw);\n  }\n\n  if (proxyMw) {\n    return listMerge(list, proxyMw);\n  }\n\n  return list;\n}\n/**\n * @param item\n * @returns {*}\n */\n\n\nfunction isList(item) {\n  return Immutable.List.isList(item);\n}\n/**\n * @param list\n * @param item\n * @returns {*}\n */\n\n\nfunction listMerge(list, item) {\n  if (_.isFunction(item)) {\n    list = list.push(item);\n  }\n\n  if (isList(item) && item.size) {\n    list = list.merge(item);\n  }\n\n  return list;\n}\n/**\n * @param incoming\n * @returns {*}\n */\n\n\nfunction setUiPort(incoming) {\n  if (incoming.get(\"uiPort\")) {\n    return [incoming.setIn([\"ui\", \"port\"], incoming.get(\"uiPort\")), []];\n  }\n\n  return [incoming, []];\n}\n\nexports.setUiPort = setUiPort;","map":{"version":3,"mappings":"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","names":["_","require","setProxyWs","incoming","get","setIn","exports","setOpen","update","open","setMode","output","set","setScheme","scheme","getIn","setStartPath","path","setNamespace","namespace","isFunction","defaultConfig","socket","setServerOpts","indexarg","optPath","Immutable","Map","index","hasIn","concat","liftExtensionsOptionFromCli","fixRewriteRules","rr","List","filter","Boolean","fixSnippetIgnorePaths","ignorePaths","isString","map","ensureSlash","fixSnippetIncludePaths","includePaths","item","setMiddleware","mw","getMiddlwares","serverMw","proxyMw","list","listMerge","isList","push","size","merge","setUiPort"],"sources":["../lib/options.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}