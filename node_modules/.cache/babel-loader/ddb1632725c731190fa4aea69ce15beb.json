{"ast":null,"code":"#! /usr/bin/env node\n\"use strict\";\n/**\n * @module BrowserSync\n */\n\nvar pjson = require(\"../package.json\");\n\nvar BrowserSync = require(\"./browser-sync\");\n\nvar publicUtils = require(\"./public/public-utils\");\n\nvar events = require(\"events\");\n\nvar PassThrough = require(\"stream\").PassThrough;\n\nvar logger = require(\"eazy-logger\").Logger({\n  useLevelPrefixes: true\n});\n\nvar singleton = false;\nvar singletonPlugins = [];\nvar instances = [];\n/**\n * @type {boolean|EventEmitter}\n */\n\nvar singletonEmitter = false;\nmodule.exports = initSingleton;\n/**\n * Create a Browsersync instance\n * @method create\n * @param {String} name an identifier that can used for retrieval later\n */\n\n/**\n * Get a single instance by name. This is useful if you have your\n * build scripts in separate files\n * @method get\n * @param {String} name\n * @returns {Object|Boolean}\n */\n\nmodule.exports.get = function (name) {\n  var instance = getSingle(name);\n\n  if (instance) {\n    return instance;\n  }\n\n  throw new Error(\"An instance with the name `%s` was not found.\".replace(\"%s\", name));\n};\n/**\n * Check if an instance has been created.\n * @method has\n * @param {String} name\n * @returns {Boolean}\n */\n\n\nmodule.exports.has = function (name) {\n  var instance = getSingle(name);\n\n  if (instance) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * Start the Browsersync service. This will launch a server, proxy or start the snippet\n * mode depending on your use-case.\n * @method init\n * @param {Object} [config] This is the main configuration for your Browsersync instance and can contain any of the [available options]({{site.links.options}})\n *  If you do not pass a config an argument for configuration, Browsersync will still run; but it will be in the `snippet` mode\n * @param {Function} [cb] If you pass a callback function, it will be called when Browsersync has completed all setup tasks and is ready to use. This\n * is useful when you need to wait for information (for example: urls, port etc) or perform other tasks synchronously.\n * @returns {BrowserSync}\n */\n\n\nmodule.exports.init = initSingleton;\n/**\n * Register a plugin. Must implement at least a 'plugin' method that returns a\n * callable function.\n *\n * @method use\n * @param {String} name The name of the plugin\n * @param {Object} module The object to be `required`.\n * @param {Function} [cb] A callback function that will return any errors.\n */\n\nmodule.exports.use = function () {\n  var args = Array.prototype.slice.call(arguments);\n  singletonPlugins.push({\n    args: args\n  });\n};\n/**\n * The `reload` method will inform all browsers about changed files and will either cause the browser to refresh, or inject the files where possible.\n *\n * @method reload\n * @param {String|Array|Object} [arg] The file or files to be reloaded.\n * @returns {*}\n */\n\n\nmodule.exports.reload = noop(\"reload\");\n/**\n * The `stream` method returns a transform stream and can act once or on many files.\n *\n * @method stream\n * @param {Object} [opts] Configuration for the stream method\n * @param {Object} [opts.match] Resulting files to reload. The path is from the\n * root of the site (not the root of your project).  You can use '**' to recurse\n * directories.\n * @param {Object} [opts.once] Only reload on the first changed file in the stream.\n * @since 2.6.0\n * @returns {*}\n */\n\nmodule.exports.stream = noop(\"stream\");\n/**\n * Helper method for browser notifications\n *\n * @method notify\n * @param {String|HTML} msg Can be a simple message such as 'Connected' or HTML\n * @param {Number} [timeout] How long the message will remain in the browser. @since 1.3.0\n */\n\nmodule.exports.notify = noop(\"notify\");\n/**\n * This method will close any running server, stop file watching & exit the current process.\n *\n * @method exit\n */\n\nmodule.exports.exit = noop(\"exit\");\n/**\n * Stand alone file-watcher. Use this along with Browsersync to create your own, minimal build system\n * @method watch\n * @param {string} patterns Glob patterns for files to watch\n * @param {object} [opts] Options to be passed to Chokidar - check what's available in [their docs](https://github.com/paulmillr/chokidar#getting-started)\n * @param {function} [fn] Callback function for each event.\n * @since 2.6.0\n */\n\nmodule.exports.watch = noop(\"watch\");\n/**\n * Method to pause file change events\n *\n * @method pause\n */\n\nmodule.exports.pause = noop(\"pause\");\n/**\n * Method to resume paused watchers\n *\n * @method resume\n */\n\nmodule.exports.resume = noop(\"resume\");\n/**\n * Add properties fo\n */\n\nObject.defineProperties(module.exports, {\n  /**\n   * The internal Event Emitter used by the running Browsersync instance (if there is one).\n   * You can use this to emit your own events, such as changed files, logging etc.\n   *\n   * @property emitter\n   */\n  emitter: {\n    get: function () {\n      if (!singletonEmitter) {\n        singletonEmitter = newEmitter();\n        return singletonEmitter;\n      }\n\n      return singletonEmitter;\n    }\n  },\n\n  /**\n   * A simple true/false flag that you can use to determine if there's a currently-running Browsersync instance.\n   *\n   * @property active\n   */\n  active: {\n    get: getSingletonValue.bind(null, \"active\")\n  },\n\n  /**\n   * A simple true/false flag to determine if the current instance is paused\n   *\n   * @property paused\n   */\n  paused: {\n    get: getSingletonValue.bind(null, \"paused\")\n  }\n});\n/**\n * Event emitter factory\n * @returns {EventEmitter}\n */\n\nfunction newEmitter() {\n  var emitter = new events.EventEmitter();\n  emitter.setMaxListeners(20);\n  return emitter;\n}\n/**\n * Get the singleton's emitter, or a new one.\n * @returns {EventEmitter}\n */\n\n\nfunction getSingletonEmitter() {\n  if (singletonEmitter) {\n    return singletonEmitter;\n  }\n\n  singletonEmitter = newEmitter();\n  return singletonEmitter;\n}\n/**\n * Helper to allow methods to be called on the module export\n * before there's a running instance\n * @param {String} name\n * @returns {Function}\n */\n\n\nfunction noop(name) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    if (singleton) {\n      return singleton[name].apply(singleton, args);\n    } else {\n      if (publicUtils.isStreamArg(name, args)) {\n        return new PassThrough({\n          objectMode: true\n        });\n      }\n    }\n  };\n}\n/**\n * Create a single instance when module export is used directly via browserSync({});\n * This is mostly for back-compatibility, for also for the nicer api.\n * This will never be removed to ensure we never break user-land, but\n * we should discourage it's use.\n * @returns {*}\n */\n\n\nfunction initSingleton() {\n  var instance;\n\n  if (instances.length) {\n    instance = instances.filter(function (item) {\n      return item.name === \"singleton\";\n    });\n\n    if (instance.length) {\n      logger.error(\"{yellow:You tried to start Browsersync twice!} To create multiple instances, use {cyan:browserSync.create().init()\");\n      return instance;\n    }\n  }\n\n  var args = Array.prototype.slice.call(arguments);\n  singleton = create(\"singleton\", getSingletonEmitter());\n\n  if (singletonPlugins.length) {\n    singletonPlugins.forEach(function (obj) {\n      singleton.instance.registerPlugin.apply(singleton.instance, obj.args);\n    });\n  }\n\n  singleton.init.apply(null, args);\n  return singleton;\n}\n/**\n * @param {String} prop\n * @returns {Object|Boolean}\n */\n\n\nfunction getSingletonValue(prop) {\n  var single = getSingle(\"singleton\");\n\n  if (single) {\n    return single[prop];\n  }\n\n  return false;\n}\n/**\n * Get a single instance by name\n * @param {String} name\n * @returns {Object|Boolean}\n */\n\n\nfunction getSingle(name) {\n  if (instances.length) {\n    var match = instances.filter(function (item) {\n      return item.name === name;\n    });\n\n    if (match.length) {\n      return match[0];\n    }\n  }\n\n  return false;\n}\n/**\n * Create an instance of Browsersync\n * @param {String} [name]\n * @param {EventEmitter} [emitter]\n * @returns {{init: *, exit: (exit|exports), notify: *, reload: *, cleanup: *, emitter: (Browsersync.events|*), use: *}}\n */\n\n/**\n * Reset the state of the module.\n * (should only be needed for test environments)\n */\n\n\nmodule.exports.reset = function () {\n  instances.forEach(function (item) {\n    item.cleanup();\n  });\n  instances = [];\n  singletonPlugins = [];\n  singletonEmitter = false;\n  singleton = false;\n};\n/**\n * @type {Array}\n */\n\n\nmodule.exports.instances = instances;\n/**\n * Create an instance of Browsersync\n * @param {String} [name]\n * @param {EventEmitter} [emitter]\n * @returns {{init: *, exit: (exit|exports), notify: *, reload: *, cleanup: *, emitter: (Browsersync.events|*), use: *}}\n */\n\nmodule.exports.create = create;\n\nfunction create(name, emitter) {\n  name = name || new Date().getTime();\n  emitter = emitter || newEmitter();\n  var browserSync = new BrowserSync(emitter);\n  var instance = {\n    name: name,\n    instance: browserSync,\n    exit: require(\"./public/exit\")(browserSync),\n    notify: require(\"./public/notify\")(browserSync),\n    pause: require(\"./public/pause\")(browserSync),\n    resume: require(\"./public/resume\")(browserSync),\n    reload: require(\"./public/reload\")(emitter),\n    stream: require(\"./public/stream\")(emitter),\n    cleanup: browserSync.cleanup.bind(browserSync),\n    use: browserSync.registerPlugin.bind(browserSync),\n    getOption: browserSync.getOption.bind(browserSync),\n    emitter: browserSync.events,\n    watch: require(\"./file-watcher\").watch\n  };\n  browserSync.publicInstance = instance;\n  instance.init = require(\"./public/init\")(browserSync, name, pjson);\n  Object.defineProperty(instance, \"active\", {\n    get: function () {\n      return browserSync.active;\n    }\n  });\n  Object.defineProperty(instance, \"paused\", {\n    get: function () {\n      return browserSync.paused;\n    }\n  });\n  /**\n   * Access to client-side socket for emitting events\n   *\n   * @property sockets\n   */\n\n  Object.defineProperty(instance, \"sockets\", {\n    get: function () {\n      if (!browserSync.active) {\n        return {\n          emit: function () {},\n          on: function () {}\n        };\n      } else {\n        return browserSync.io.sockets;\n      }\n    }\n  });\n  instances.push(instance);\n  return instance;\n}","map":{"version":3,"mappings":"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","names":["pjson","require","BrowserSync","publicUtils","events","PassThrough","logger","Logger","useLevelPrefixes","singleton","singletonPlugins","instances","singletonEmitter","module","exports","initSingleton","get","name","instance","getSingle","Error","replace","has","init","use","args","Array","prototype","slice","call","arguments","push","reload","noop","stream","notify","exit","watch","pause","resume","Object","defineProperties","emitter","newEmitter","active","getSingletonValue","bind","paused","EventEmitter","setMaxListeners","getSingletonEmitter","apply","isStreamArg","objectMode","length","filter","item","error","create","forEach","obj","registerPlugin","prop","single","match","reset","cleanup","Date","getTime","browserSync","getOption","publicInstance","defineProperty","emit","on","io","sockets"],"sources":["../lib/index.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}