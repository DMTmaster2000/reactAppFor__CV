{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./lodash.custom\");\n\nvar utils = require(\"util\");\n/**\n * @param {BrowserSync} bs\n * @param {Function} cb\n */\n\n\nmodule.exports = function (bs, cb) {\n  var opts = {};\n  var options = bs.options;\n  var port = options.get(\"port\");\n\n  if (_.isString(options.get(\"tunnel\"))) {\n    opts.subdomain = options.get(\"tunnel\");\n  }\n\n  bs.debug(\"Requesting a tunnel connection on port: {magenta:%s}\", port);\n  bs.debug(\"Requesting a tunnel connection with options: {magenta:%s}\", utils.inspect(opts));\n\n  require(\"localtunnel\")(port, opts, function (err, tunnel) {\n    if (err) {\n      return cb(err);\n    }\n\n    tunnel.on(\"error\", function (err) {\n      bs.logger.info(\"Localtunnel issue: \" + err.message);\n      bs.logger.info(\"Oops! The localtunnel appears to have disconnected. Reconnecting...\");\n    });\n    return cb(null, tunnel);\n  });\n};","map":{"version":3,"mappings":"AAAA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,iBAAD,CAAf;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,MAAD,CAAnB;AAEA;;;;;;AAIAE,MAAM,CAACC,OAAP,GAAiB,UAASC,EAAT,EAAaC,EAAb,EAAe;EAC5B,IAAIC,IAAI,GAAG,EAAX;EACA,IAAIC,OAAO,GAAGH,EAAE,CAACG,OAAjB;EACA,IAAIC,IAAI,GAAGD,OAAO,CAACE,GAAR,CAAY,MAAZ,CAAX;;EAEA,IAAIV,CAAC,CAACW,QAAF,CAAWH,OAAO,CAACE,GAAR,CAAY,QAAZ,CAAX,CAAJ,EAAuC;IACnCH,IAAI,CAACK,SAAL,GAAiBJ,OAAO,CAACE,GAAR,CAAY,QAAZ,CAAjB;EACH;;EAEDL,EAAE,CAACQ,KAAH,CAAS,sDAAT,EAAiEJ,IAAjE;EACAJ,EAAE,CAACQ,KAAH,CACI,2DADJ,EAEIX,KAAK,CAACY,OAAN,CAAcP,IAAd,CAFJ;;EAKAN,OAAO,CAAC,aAAD,CAAP,CAAuBQ,IAAvB,EAA6BF,IAA7B,EAAmC,UAASQ,GAAT,EAAcC,MAAd,EAAoB;IACnD,IAAID,GAAJ,EAAS;MACL,OAAOT,EAAE,CAACS,GAAD,CAAT;IACH;;IAEDC,MAAM,CAACC,EAAP,CAAU,OAAV,EAAmB,UAASF,GAAT,EAAY;MAC3BV,EAAE,CAACa,MAAH,CAAUC,IAAV,CAAe,wBAAwBJ,GAAG,CAACK,OAA3C;MACAf,EAAE,CAACa,MAAH,CAAUC,IAAV,CACI,qEADJ;IAGH,CALD;IAOA,OAAOb,EAAE,CAAC,IAAD,EAAOU,MAAP,CAAT;EACH,CAbD;AAcH,CA7BD","names":["_","require","utils","module","exports","bs","cb","opts","options","port","get","isString","subdomain","debug","inspect","err","tunnel","on","logger","info","message"],"sources":["../lib/tunnel.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}