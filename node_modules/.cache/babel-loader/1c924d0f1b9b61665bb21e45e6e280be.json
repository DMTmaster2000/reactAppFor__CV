{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Emitter = require('events').EventEmitter;\n\nvar parser = require('socket.io-parser');\n\nvar hasBin = require('has-binary2');\n\nvar url = require('url');\n\nvar debug = require('debug')('socket.io:socket');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Blacklisted events.\n *\n * @api public\n */\n\nexports.events = ['error', 'connect', 'disconnect', 'disconnecting', 'newListener', 'removeListener'];\n/**\n * Flags.\n *\n * @api private\n */\n\nvar flags = ['json', 'volatile', 'broadcast', 'local'];\n/**\n * `EventEmitter#emit` reference.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * Interface to a `Client` for a given `Namespace`.\n *\n * @param {Namespace} nsp\n * @param {Client} client\n * @api public\n */\n\nfunction Socket(nsp, client, query) {\n  this.nsp = nsp;\n  this.server = nsp.server;\n  this.adapter = this.nsp.adapter;\n  this.id = nsp.name !== '/' ? nsp.name + '#' + client.id : client.id;\n  this.client = client;\n  this.conn = client.conn;\n  this.rooms = {};\n  this.acks = {};\n  this.connected = true;\n  this.disconnected = false;\n  this.handshake = this.buildHandshake(query);\n  this.fns = [];\n  this.flags = {};\n  this._rooms = [];\n}\n/**\n * Inherits from `EventEmitter`.\n */\n\n\nSocket.prototype.__proto__ = Emitter.prototype;\n/**\n * Apply flags from `Socket`.\n */\n\nflags.forEach(function (flag) {\n  Object.defineProperty(Socket.prototype, flag, {\n    get: function () {\n      this.flags[flag] = true;\n      return this;\n    }\n  });\n});\n/**\n * `request` engine.io shortcut.\n *\n * @api public\n */\n\nObject.defineProperty(Socket.prototype, 'request', {\n  get: function () {\n    return this.conn.request;\n  }\n});\n/**\n * Builds the `handshake` BC object\n *\n * @api private\n */\n\nSocket.prototype.buildHandshake = function (query) {\n  var self = this;\n\n  function buildQuery() {\n    var requestQuery = url.parse(self.request.url, true).query; //if socket-specific query exist, replace query strings in requestQuery\n\n    return Object.assign({}, requestQuery, query);\n  }\n\n  return {\n    headers: this.request.headers,\n    time: new Date() + '',\n    address: this.conn.remoteAddress,\n    xdomain: !!this.request.headers.origin,\n    secure: !!this.request.connection.encrypted,\n    issued: +new Date(),\n    url: this.request.url,\n    query: buildQuery()\n  };\n};\n/**\n * Emits to this client.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (~exports.events.indexOf(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = Array.prototype.slice.call(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  }; // access last argument to see if it's an ACK callback\n\n  if (typeof args[args.length - 1] === 'function') {\n    if (this._rooms.length || this.flags.broadcast) {\n      throw new Error('Callbacks are not supported when broadcasting');\n    }\n\n    debug('emitting packet with ack id %d', this.nsp.ids);\n    this.acks[this.nsp.ids] = args.pop();\n    packet.id = this.nsp.ids++;\n  }\n\n  var rooms = this._rooms.slice(0);\n\n  var flags = Object.assign({}, this.flags); // reset flags\n\n  this._rooms = [];\n  this.flags = {};\n\n  if (rooms.length || flags.broadcast) {\n    this.adapter.broadcast(packet, {\n      except: [this.id],\n      rooms: rooms,\n      flags: flags\n    });\n  } else {\n    // dispatch packet\n    this.packet(packet, flags);\n  }\n\n  return this;\n};\n/**\n * Targets a room when broadcasting.\n *\n * @param {String} name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.to = Socket.prototype.in = function (name) {\n  if (!~this._rooms.indexOf(name)) this._rooms.push(name);\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = Socket.prototype.write = function () {\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet object\n * @param {Object} opts options\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet, opts) {\n  packet.nsp = this.nsp.name;\n  opts = opts || {};\n  opts.compress = false !== opts.compress;\n  this.client.packet(packet, opts);\n};\n/**\n * Joins a room.\n *\n * @param {String|Array} room or array of rooms\n * @param {Function} fn optional, callback\n * @return {Socket} self\n * @api private\n */\n\n\nSocket.prototype.join = function (rooms, fn) {\n  debug('joining room %s', rooms);\n  var self = this;\n\n  if (!Array.isArray(rooms)) {\n    rooms = [rooms];\n  }\n\n  rooms = rooms.filter(function (room) {\n    return !self.rooms.hasOwnProperty(room);\n  });\n\n  if (!rooms.length) {\n    fn && fn(null);\n    return this;\n  }\n\n  this.adapter.addAll(this.id, rooms, function (err) {\n    if (err) return fn && fn(err);\n    debug('joined room %s', rooms);\n    rooms.forEach(function (room) {\n      self.rooms[room] = room;\n    });\n    fn && fn(null);\n  });\n  return this;\n};\n/**\n * Leaves a room.\n *\n * @param {String} room\n * @param {Function} fn optional, callback\n * @return {Socket} self\n * @api private\n */\n\n\nSocket.prototype.leave = function (room, fn) {\n  debug('leave room %s', room);\n  var self = this;\n  this.adapter.del(this.id, room, function (err) {\n    if (err) return fn && fn(err);\n    debug('left room %s', room);\n    delete self.rooms[room];\n    fn && fn(null);\n  });\n  return this;\n};\n/**\n * Leave all rooms.\n *\n * @api private\n */\n\n\nSocket.prototype.leaveAll = function () {\n  this.adapter.delAll(this.id);\n  this.rooms = {};\n};\n/**\n * Called by `Namespace` upon successful\n * middleware execution (ie: authorization).\n * Socket is added to namespace array before\n * call to join, so adapters can access it.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  debug('socket connected - writing packet');\n  this.nsp.connected[this.id] = this;\n  this.join(this.id);\n  var skip = this.nsp.name === '/' && this.nsp.fns.length === 0;\n\n  if (skip) {\n    debug('packet already sent in initial handshake');\n  } else {\n    this.packet({\n      type: parser.CONNECT\n    });\n  }\n};\n/**\n * Called with each packet. Called by `Client`.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  debug('got packet %j', packet);\n\n  switch (packet.type) {\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.onerror(new Error(packet.data));\n  }\n};\n/**\n * Called upon event packet.\n *\n * @param {Object} packet object\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  this.dispatch(args);\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @param {Number} id packet id\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    var args = Array.prototype.slice.call(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      id: id,\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      data: args\n    });\n    sent = true;\n  };\n};\n/**\n * Called upon ack packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon client disconnect packet.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('got disconnect packet');\n  this.onclose('client namespace disconnect');\n};\n/**\n * Handles a client error.\n *\n * @api private\n */\n\n\nSocket.prototype.onerror = function (err) {\n  if (this.listeners('error').length) {\n    this.emit('error', err);\n  } else {\n    console.error('Missing error handler on `socket`.');\n    console.error(err.stack);\n  }\n};\n/**\n * Called upon closing. Called by `Client`.\n *\n * @param {String} reason\n * @throw {Error} optional error object\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  if (!this.connected) return this;\n  debug('closing socket - reason %s', reason);\n  this.emit('disconnecting', reason);\n  this.leaveAll();\n  this.nsp.remove(this);\n  this.client.remove(this);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.nsp.connected[this.id];\n  this.emit('disconnect', reason);\n};\n/**\n * Produces an `error` packet.\n *\n * @param {Object} err error object\n * @api private\n */\n\n\nSocket.prototype.error = function (err) {\n  this.packet({\n    type: parser.ERROR,\n    data: err\n  });\n};\n/**\n * Disconnects this client.\n *\n * @param {Boolean} close if `true`, closes the underlying connection\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.disconnect = function (close) {\n  if (!this.connected) return this;\n\n  if (close) {\n    this.client.disconnect();\n  } else {\n    this.packet({\n      type: parser.DISCONNECT\n    });\n    this.onclose('server namespace disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} compress if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} Encode as if it has binary data if `true`, Encode as if it doesnt have binary data if `false`\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n/**\n * Dispatch incoming event to socket listeners.\n *\n * @param {Array} event that will get emitted\n * @api private\n */\n\n\nSocket.prototype.dispatch = function (event) {\n  debug('dispatching an event %j', event);\n  var self = this;\n\n  function dispatchSocket(err) {\n    process.nextTick(function () {\n      if (err) {\n        return self.error(err.data || err.message);\n      }\n\n      emit.apply(self, event);\n    });\n  }\n\n  this.run(event, dispatchSocket);\n};\n/**\n * Sets up socket middleware.\n *\n * @param {Function} middleware function (event, next)\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.use = function (fn) {\n  this.fns.push(fn);\n  return this;\n};\n/**\n * Executes the middleware for an incoming event.\n *\n * @param {Array} event that will get emitted\n * @param {Function} last fn call in the middleware\n * @api private\n */\n\n\nSocket.prototype.run = function (event, fn) {\n  var fns = this.fns.slice(0);\n  if (!fns.length) return fn(null);\n\n  function run(i) {\n    fns[i](event, function (err) {\n      // upon error, short-circuit\n      if (err) return fn(err); // if no middleware left, summon callback\n\n      if (!fns[i + 1]) return fn(null); // go on to next\n\n      run(i + 1);\n    });\n  }\n\n  run(0);\n};","map":{"version":3,"names":["Emitter","require","EventEmitter","parser","hasBin","url","debug","module","exports","Socket","events","flags","emit","prototype","nsp","client","query","server","adapter","id","name","conn","rooms","acks","connected","disconnected","handshake","buildHandshake","fns","_rooms","__proto__","forEach","flag","Object","defineProperty","get","request","self","buildQuery","requestQuery","parse","assign","headers","time","Date","address","remoteAddress","xdomain","origin","secure","connection","encrypted","issued","ev","indexOf","apply","arguments","args","Array","slice","call","packet","type","binary","undefined","BINARY_EVENT","EVENT","data","length","broadcast","Error","ids","pop","except","to","in","push","send","write","unshift","opts","compress","join","fn","isArray","filter","room","hasOwnProperty","addAll","err","leave","del","leaveAll","delAll","onconnect","skip","CONNECT","onpacket","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ERROR","onerror","ack","dispatch","sent","onclose","listeners","console","error","stack","reason","remove","disconnect","close","event","dispatchSocket","process","nextTick","message","run","use","i"],"sources":["/Users/johnberetty/node_modules/socket.io/lib/socket.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('events').EventEmitter;\nvar parser = require('socket.io-parser');\nvar hasBin = require('has-binary2');\nvar url = require('url');\nvar debug = require('debug')('socket.io:socket');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Blacklisted events.\n *\n * @api public\n */\n\nexports.events = [\n  'error',\n  'connect',\n  'disconnect',\n  'disconnecting',\n  'newListener',\n  'removeListener'\n];\n\n/**\n * Flags.\n *\n * @api private\n */\n\nvar flags = [\n  'json',\n  'volatile',\n  'broadcast',\n  'local'\n];\n\n/**\n * `EventEmitter#emit` reference.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * Interface to a `Client` for a given `Namespace`.\n *\n * @param {Namespace} nsp\n * @param {Client} client\n * @api public\n */\n\nfunction Socket(nsp, client, query){\n  this.nsp = nsp;\n  this.server = nsp.server;\n  this.adapter = this.nsp.adapter;\n  this.id = nsp.name !== '/' ? nsp.name + '#' + client.id : client.id;\n  this.client = client;\n  this.conn = client.conn;\n  this.rooms = {};\n  this.acks = {};\n  this.connected = true;\n  this.disconnected = false;\n  this.handshake = this.buildHandshake(query);\n  this.fns = [];\n  this.flags = {};\n  this._rooms = [];\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nSocket.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Apply flags from `Socket`.\n */\n\nflags.forEach(function(flag){\n  Object.defineProperty(Socket.prototype, flag, {\n    get: function() {\n      this.flags[flag] = true;\n      return this;\n    }\n  });\n});\n\n/**\n * `request` engine.io shortcut.\n *\n * @api public\n */\n\nObject.defineProperty(Socket.prototype, 'request', {\n  get: function() {\n    return this.conn.request;\n  }\n});\n\n/**\n * Builds the `handshake` BC object\n *\n * @api private\n */\n\nSocket.prototype.buildHandshake = function(query){\n  var self = this;\n  function buildQuery(){\n    var requestQuery = url.parse(self.request.url, true).query;\n    //if socket-specific query exist, replace query strings in requestQuery\n    return Object.assign({}, requestQuery, query);\n  }\n  return {\n    headers: this.request.headers,\n    time: (new Date) + '',\n    address: this.conn.remoteAddress,\n    xdomain: !!this.request.headers.origin,\n    secure: !!this.request.connection.encrypted,\n    issued: +(new Date),\n    url: this.request.url,\n    query: buildQuery()\n  };\n};\n\n/**\n * Emits to this client.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (~exports.events.indexOf(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = Array.prototype.slice.call(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  // access last argument to see if it's an ACK callback\n  if (typeof args[args.length - 1] === 'function') {\n    if (this._rooms.length || this.flags.broadcast) {\n      throw new Error('Callbacks are not supported when broadcasting');\n    }\n\n    debug('emitting packet with ack id %d', this.nsp.ids);\n    this.acks[this.nsp.ids] = args.pop();\n    packet.id = this.nsp.ids++;\n  }\n\n  var rooms = this._rooms.slice(0);\n  var flags = Object.assign({}, this.flags);\n\n  // reset flags\n  this._rooms = [];\n  this.flags = {};\n\n  if (rooms.length || flags.broadcast) {\n    this.adapter.broadcast(packet, {\n      except: [this.id],\n      rooms: rooms,\n      flags: flags\n    });\n  } else {\n    // dispatch packet\n    this.packet(packet, flags);\n  }\n  return this;\n};\n\n/**\n * Targets a room when broadcasting.\n *\n * @param {String} name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.to =\nSocket.prototype.in = function(name){\n  if (!~this._rooms.indexOf(name)) this._rooms.push(name);\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send =\nSocket.prototype.write = function(){\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet object\n * @param {Object} opts options\n * @api private\n */\n\nSocket.prototype.packet = function(packet, opts){\n  packet.nsp = this.nsp.name;\n  opts = opts || {};\n  opts.compress = false !== opts.compress;\n  this.client.packet(packet, opts);\n};\n\n/**\n * Joins a room.\n *\n * @param {String|Array} room or array of rooms\n * @param {Function} fn optional, callback\n * @return {Socket} self\n * @api private\n */\n\nSocket.prototype.join = function(rooms, fn){\n  debug('joining room %s', rooms);\n  var self = this;\n  if (!Array.isArray(rooms)) {\n    rooms = [rooms];\n  }\n  rooms = rooms.filter(function (room) {\n    return !self.rooms.hasOwnProperty(room);\n  });\n  if (!rooms.length) {\n    fn && fn(null);\n    return this;\n  }\n  this.adapter.addAll(this.id, rooms, function(err){\n    if (err) return fn && fn(err);\n    debug('joined room %s', rooms);\n    rooms.forEach(function (room) {\n      self.rooms[room] = room;\n    });\n    fn && fn(null);\n  });\n  return this;\n};\n\n/**\n * Leaves a room.\n *\n * @param {String} room\n * @param {Function} fn optional, callback\n * @return {Socket} self\n * @api private\n */\n\nSocket.prototype.leave = function(room, fn){\n  debug('leave room %s', room);\n  var self = this;\n  this.adapter.del(this.id, room, function(err){\n    if (err) return fn && fn(err);\n    debug('left room %s', room);\n    delete self.rooms[room];\n    fn && fn(null);\n  });\n  return this;\n};\n\n/**\n * Leave all rooms.\n *\n * @api private\n */\n\nSocket.prototype.leaveAll = function(){\n  this.adapter.delAll(this.id);\n  this.rooms = {};\n};\n\n/**\n * Called by `Namespace` upon successful\n * middleware execution (ie: authorization).\n * Socket is added to namespace array before\n * call to join, so adapters can access it.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  debug('socket connected - writing packet');\n  this.nsp.connected[this.id] = this;\n  this.join(this.id);\n  var skip = this.nsp.name === '/' && this.nsp.fns.length === 0;\n  if (skip) {\n    debug('packet already sent in initial handshake');\n  } else {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called with each packet. Called by `Client`.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  debug('got packet %j', packet);\n  switch (packet.type) {\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.onerror(new Error(packet.data));\n  }\n};\n\n/**\n * Called upon event packet.\n *\n * @param {Object} packet object\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  this.dispatch(args);\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @param {Number} id packet id\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    var args = Array.prototype.slice.call(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      id: id,\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      data: args\n    });\n\n    sent = true;\n  };\n};\n\n/**\n * Called upon ack packet.\n *\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  var ack = this.acks[packet.id];\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon client disconnect packet.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('got disconnect packet');\n  this.onclose('client namespace disconnect');\n};\n\n/**\n * Handles a client error.\n *\n * @api private\n */\n\nSocket.prototype.onerror = function(err){\n  if (this.listeners('error').length) {\n    this.emit('error', err);\n  } else {\n    console.error('Missing error handler on `socket`.');\n    console.error(err.stack);\n  }\n};\n\n/**\n * Called upon closing. Called by `Client`.\n *\n * @param {String} reason\n * @throw {Error} optional error object\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  if (!this.connected) return this;\n  debug('closing socket - reason %s', reason);\n  this.emit('disconnecting', reason);\n  this.leaveAll();\n  this.nsp.remove(this);\n  this.client.remove(this);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.nsp.connected[this.id];\n  this.emit('disconnect', reason);\n};\n\n/**\n * Produces an `error` packet.\n *\n * @param {Object} err error object\n * @api private\n */\n\nSocket.prototype.error = function(err){\n  this.packet({ type: parser.ERROR, data: err });\n};\n\n/**\n * Disconnects this client.\n *\n * @param {Boolean} close if `true`, closes the underlying connection\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.disconnect = function(close){\n  if (!this.connected) return this;\n  if (close) {\n    this.client.disconnect();\n  } else {\n    this.packet({ type: parser.DISCONNECT });\n    this.onclose('server namespace disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} compress if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function(compress){\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} Encode as if it has binary data if `true`, Encode as if it doesnt have binary data if `false`\n * @return {Socket} self\n * @api public\n */\n\n Socket.prototype.binary = function (binary) {\n   this.flags.binary = binary;\n   return this;\n };\n\n/**\n * Dispatch incoming event to socket listeners.\n *\n * @param {Array} event that will get emitted\n * @api private\n */\n\nSocket.prototype.dispatch = function(event){\n  debug('dispatching an event %j', event);\n  var self = this;\n  function dispatchSocket(err) {\n    process.nextTick(function(){\n      if (err) {\n        return self.error(err.data || err.message);\n      }\n      emit.apply(self, event);\n    });\n  }\n  this.run(event, dispatchSocket);\n};\n\n/**\n * Sets up socket middleware.\n *\n * @param {Function} middleware function (event, next)\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.use = function(fn){\n  this.fns.push(fn);\n  return this;\n};\n\n/**\n * Executes the middleware for an incoming event.\n *\n * @param {Array} event that will get emitted\n * @param {Function} last fn call in the middleware\n * @api private\n */\nSocket.prototype.run = function(event, fn){\n  var fns = this.fns.slice(0);\n  if (!fns.length) return fn(null);\n\n  function run(i){\n    fns[i](event, function(err){\n      // upon error, short-circuit\n      if (err) return fn(err);\n\n      // if no middleware left, summon callback\n      if (!fns[i + 1]) return fn(null);\n\n      // go on to next\n      run(i + 1);\n    });\n  }\n\n  run(0);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}