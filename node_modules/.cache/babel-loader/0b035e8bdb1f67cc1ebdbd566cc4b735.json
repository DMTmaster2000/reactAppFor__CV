{"ast":null,"code":"\"use strict\";\n\nvar chalk = require(\"chalk\");\n\nvar parser = require(\"./lib/parser\");\n\nvar dlv = require(\"dlv\");\n/**\n * Stateless compiler.\n * @param {String} string\n * @param {Object} [custom] - Any custom methods\n * @param {Object} [opts] - Options\n * @returns {String}\n */\n\n\nfunction compile(string, custom, opts) {\n  opts = opts || {};\n  return parseAst(createAst(parser, string), custom, function (err) {\n    if (err) {\n      if (opts.logErrors) {\n        console.log(err.msg);\n      }\n\n      if (opts.failOnError) {\n        throw Error(err.msg);\n      }\n    }\n  });\n}\n/**\n * @param parser\n * @param string\n * @returns {*}\n */\n\n\nfunction createAst(parser, string) {\n  return parser.parse(string);\n}\n/**\n * @param ast\n * @param custom\n * @param {Function} cb\n */\n\n\nfunction parseAst(ast, custom, cb) {\n  var colors = [];\n  return ast.reduce(function (joined, item) {\n    var fn;\n\n    if (item.color) {\n      if (item.text) {\n        if (fn = resolveFun(item.color, custom)) {\n          colors.push(fn);\n          return joined + fn(item.text);\n        } else {\n          cb({\n            msg: \"Method does not exist: \" + item.color\n          });\n          return joined + item.text;\n        }\n      }\n    }\n\n    if (item.buffer) {\n      return colors.length ? joined + colors[colors.length - 1](item.buffer) : joined + item.buffer;\n    }\n\n    if (item.reset) {\n      colors.pop();\n\n      if (item.text) {\n        return colors.length ? joined + colors[colors.length - 1](item.text) : joined + item.text;\n      }\n    }\n\n    return joined;\n  }, \"\");\n}\n/**\n * @param path\n * @param custom\n * @returns {*}\n */\n\n\nfunction resolveFun(path, custom) {\n  var fn;\n\n  if (fn = getFun(custom, path)) {\n    return fn.bind({\n      compile: compile\n    });\n  }\n\n  return getFun(chalk, path);\n}\n/**\n * Get a function from an object\n */\n\n\nfunction getFun(obj, path) {\n  if (!obj) {\n    return false;\n  }\n\n  return dlv(obj, path);\n}\n/**\n * @param {Object} [opts]\n * @param {Object} custom\n * @returns {Compiler}\n */\n\n\nfunction Compiler(custom, opts) {\n  opts = opts || {};\n  custom = custom || {};\n  this.prefix = \"\";\n\n  if (typeof opts.prefix === \"string\") {\n    this.prefix = compile(opts.prefix, custom, opts);\n  }\n\n  if (typeof opts.prefix === \"function\") {\n    this.prefix = opts.prefix;\n  }\n\n  this.compile = function (string, noPrefix) {\n    var out = \"\";\n\n    if (!noPrefix) {\n      if (typeof this.prefix === \"function\") {\n        out = this.prefix.apply({\n          compile: compile\n        }, [string, opts]);\n      } else {\n        out = this.prefix;\n      }\n    }\n\n    return out + compile(string, custom, opts);\n  };\n\n  return this;\n}\n\nmodule.exports = compile;\n\nmodule.exports.parse = function (string) {\n  return createAst(parser, string);\n};\n\nmodule.exports.clean = function (string) {\n  var ast = createAst(parser, string);\n  return ast.reduce(function (joined, item) {\n    if (item.color) {\n      if (item.text) {\n        return joined + item.text;\n      }\n    }\n\n    if (item.buffer) {\n      return joined + item.buffer;\n    }\n\n    if (item.reset) {\n      return joined + item.text;\n    }\n\n    return joined;\n  }, \"\");\n};\n\nmodule.exports.Compiler = Compiler;","map":{"version":3,"names":["chalk","require","parser","dlv","compile","string","custom","opts","parseAst","createAst","err","logErrors","console","log","msg","failOnError","Error","parse","ast","cb","colors","reduce","joined","item","fn","color","text","resolveFun","push","buffer","length","reset","pop","path","getFun","bind","obj","Compiler","prefix","noPrefix","out","apply","module","exports","clean"],"sources":["/Users/johnberetty/node_modules/tfunk/index.js"],"sourcesContent":["\"use strict\";\n\nvar chalk   = require(\"chalk\");\nvar parser  = require(\"./lib/parser\");\nvar dlv     = require(\"dlv\");\n\n/**\n * Stateless compiler.\n * @param {String} string\n * @param {Object} [custom] - Any custom methods\n * @param {Object} [opts] - Options\n * @returns {String}\n */\nfunction compile(string, custom, opts) {\n    opts = opts || {};\n    return parseAst(createAst(parser, string), custom, function (err) {\n        if (err) {\n            if (opts.logErrors) {\n                console.log(err.msg);\n            }\n            if (opts.failOnError) {\n                throw Error(err.msg);\n            }\n        }\n    });\n}\n\n/**\n * @param parser\n * @param string\n * @returns {*}\n */\nfunction createAst(parser, string) {\n    return parser.parse(string);\n}\n\n/**\n * @param ast\n * @param custom\n * @param {Function} cb\n */\nfunction parseAst(ast, custom, cb) {\n\n    var colors = [];\n\n    return ast.reduce(function (joined, item) {\n\n        var fn;\n\n        if (item.color) {\n            if (item.text) {\n                if (fn = resolveFun(item.color, custom)) {\n                    colors.push(fn);\n                    return joined + fn(item.text);\n                } else {\n                    cb({\n                        msg: \"Method does not exist: \" + item.color\n                    });\n                    return joined + item.text;\n                }\n            }\n        }\n\n        if (item.buffer) {\n            return colors.length\n                ? joined + colors[colors.length-1](item.buffer)\n                : joined + item.buffer;\n        }\n\n        if (item.reset) {\n            colors.pop();\n            if (item.text) {\n                return colors.length\n                    ? joined + colors[colors.length-1](item.text)\n                    : joined + item.text;\n            }\n        }\n\n        return joined;\n\n    }, \"\");\n}\n\n/**\n * @param path\n * @param custom\n * @returns {*}\n */\nfunction resolveFun(path, custom) {\n\n    var fn;\n    if (fn = getFun(custom, path)) {\n        return fn.bind({compile:compile});\n    }\n\n    return  getFun(chalk, path);\n}\n\n/**\n * Get a function from an object\n */\nfunction getFun(obj, path) {\n\n    if (!obj) {\n        return false;\n    }\n\n    return dlv(obj, path);\n}\n\n/**\n * @param {Object} [opts]\n * @param {Object} custom\n * @returns {Compiler}\n */\nfunction Compiler(custom, opts) {\n\n    opts = opts || {};\n    custom = custom || {};\n\n    this.prefix = \"\";\n\n    if (typeof opts.prefix === \"string\") {\n        this.prefix = compile(opts.prefix, custom, opts);\n    }\n\n    if (typeof opts.prefix === \"function\") {\n        this.prefix = opts.prefix;\n    }\n\n    this.compile = function (string, noPrefix) {\n\n        var out = \"\";\n\n        if (!noPrefix) {\n\n            if (typeof this.prefix === \"function\") {\n                out = this.prefix.apply({compile: compile}, [string, opts]);\n            } else {\n                out = this.prefix;\n            }\n        }\n\n        return out + compile(string, custom, opts);\n\n    };\n\n    return this;\n}\n\nmodule.exports = compile;\nmodule.exports.parse = function (string) {\n    return createAst(parser, string);\n};\nmodule.exports.clean = function (string) {\n    var ast = createAst(parser, string);\n    return ast.reduce(function (joined, item) {\n        if (item.color) {\n            if (item.text) {\n                return joined + item.text;\n            }\n        }\n        if (item.buffer) {\n            return joined + item.buffer;\n        }\n        if (item.reset) {\n            return joined + item.text;\n        }\n        return joined;\n    }, \"\");\n};\nmodule.exports.Compiler = Compiler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}