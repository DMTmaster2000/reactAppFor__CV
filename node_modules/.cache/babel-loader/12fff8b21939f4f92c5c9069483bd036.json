{"ast":null,"code":"var _jsxFileName = \"/Users/johnberetty/Desktop/gitHub/my-app/my-app/src/pages/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport PostFilter from '../components/PostFilter';\nimport PostForm from '../components/PostForm';\nimport PostList from '../components/PostList';\nimport MyButton from '../components/UI/button/MyButton';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport { usePosts } from '../hooks/usePosts';\nimport '../styles/App.css';\nimport PostService from '../API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport { useFetching } from '../hooks/useFetching';\nimport { getPageCount, getPagesArray } from '../components/utils/pages';\nimport Pagination from '../components/UI/pagination/Pagination';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit] = useState(10);\n  const [page, setPage] = useState(1);\n  const lastElement = useRef();\n  const observer = useRef();\n  const [fetchPosts, isPostLoading] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {\n    if (isPostLoading) return;\n    if (observer.current) observer.current.disconnect();\n\n    var callback = function (entries, observer) {\n      if (entries[0].isIntersecting && page < totalPages) {\n        console.log(page);\n        setPage(page + 1);\n      }\n    };\n\n    observer.current = new IntersectionObserver(callback); //console.log(observer.current);\n\n    observer.current.observe(lastElement.current);\n  }, [isPostLoading]);\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [page]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const changePage = page => {\n    setPage(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: 30\n      },\n      onClick: () => setModal(true),\n      children: \"Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      style: {\n        height: 30\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), isPostLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 50\n      },\n      children: [' ', /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"gSe/5YExHOKcRFC+l5jgeFB6w3o=\", false, function () {\n  return [usePosts, useFetching];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","PostFilter","PostForm","PostList","MyButton","MyModal","usePosts","PostService","Loader","useFetching","getPageCount","getPagesArray","Pagination","useRef","Post","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchedPosts","totalPages","setTotalPages","limit","page","setPage","lastElement","observer","fetchPosts","isPostLoading","response","getAll","data","totalCount","headers","current","disconnect","callback","entries","isIntersecting","console","log","IntersectionObserver","observe","createPost","newPost","removePost","post","p","id","changePage","marginTop","height","display","justifyContent"],"sources":["/Users/johnberetty/Desktop/gitHub/my-app/my-app/src/pages/Post.jsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport PostFilter from '../components/PostFilter';\nimport PostForm from '../components/PostForm';\nimport PostList from '../components/PostList';\nimport MyButton from '../components/UI/button/MyButton';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport { usePosts } from '../hooks/usePosts';\nimport '../styles/App.css';\nimport PostService from '../API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport { useFetching } from '../hooks/useFetching';\nimport { getPageCount, getPagesArray } from '../components/utils/pages';\nimport Pagination from '../components/UI/pagination/Pagination';\nimport { useRef } from 'react';\n\nfunction Post() {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({ sort: '', query: '' });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit] = useState(10);\n  const [page, setPage] = useState(1);\n  const lastElement = useRef();\n  const observer = useRef();\n\n  const [fetchPosts, isPostLoading] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n\n  useEffect(() => {\n    if (isPostLoading) return;\n    if (observer.current) observer.current.disconnect();\n    var callback = function (entries, observer) {\n      if (entries[0].isIntersecting && page < totalPages) {\n        console.log(page);\n        setPage(page + 1);\n      }\n    };\n    observer.current = new IntersectionObserver(callback);\n    //console.log(observer.current);\n    observer.current.observe(lastElement.current);\n  }, [isPostLoading]);\n\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [page]);\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const removePost = (post) => {\n    setPosts(posts.filter((p) => p.id !== post.id));\n  };\n\n  const changePage = (page) => {\n    setPage(page);\n  };\n\n  return (\n    <div className=\"App\">\n      <MyButton style={{ marginTop: 30 }} onClick={() => setModal(true)}>\n        Create User\n      </MyButton>\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost} />\n      </MyModal>\n      <PostFilter filter={filter} setFilter={setFilter} />\n\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"title\" />\n      <div ref={lastElement} style={{ height: 30 }}></div>\n      {isPostLoading && (\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n          {' '}\n          <Loader />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Post;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,2BAA5C;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,MAAT,QAAuB,OAAvB;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC;IAAEqB,IAAI,EAAE,EAAR;IAAYC,KAAK,EAAE;EAAnB,CAAD,CAApC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAMyB,sBAAsB,GAAGjB,QAAQ,CAACS,KAAD,EAAQE,MAAM,CAACE,IAAf,EAAqBF,MAAM,CAACG,KAA5B,CAAvC;EACA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAAC4B,KAAD,IAAU5B,QAAQ,CAAC,EAAD,CAAxB;EACA,MAAM,CAAC6B,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM+B,WAAW,GAAGhB,MAAM,EAA1B;EACA,MAAMiB,QAAQ,GAAGjB,MAAM,EAAvB;EAEA,MAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BvB,WAAW,CAAC,YAAY;IAC1D,MAAMwB,QAAQ,GAAG,MAAM1B,WAAW,CAAC2B,MAAZ,CAAmBR,KAAnB,EAA0BC,IAA1B,CAAvB;IACAX,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGkB,QAAQ,CAACE,IAAvB,CAAD,CAAR;IACA,MAAMC,UAAU,GAAGH,QAAQ,CAACI,OAAT,CAAiB,eAAjB,CAAnB;IACAZ,aAAa,CAACf,YAAY,CAAC0B,UAAD,EAAaV,KAAb,CAAb,CAAb;EACD,CAL8C,CAA/C;EAOA1B,SAAS,CAAC,MAAM;IACd,IAAIgC,aAAJ,EAAmB;IACnB,IAAIF,QAAQ,CAACQ,OAAb,EAAsBR,QAAQ,CAACQ,OAAT,CAAiBC,UAAjB;;IACtB,IAAIC,QAAQ,GAAG,UAAUC,OAAV,EAAmBX,QAAnB,EAA6B;MAC1C,IAAIW,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6Bf,IAAI,GAAGH,UAAxC,EAAoD;QAClDmB,OAAO,CAACC,GAAR,CAAYjB,IAAZ;QACAC,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;MACD;IACF,CALD;;IAMAG,QAAQ,CAACQ,OAAT,GAAmB,IAAIO,oBAAJ,CAAyBL,QAAzB,CAAnB,CATc,CAUd;;IACAV,QAAQ,CAACQ,OAAT,CAAiBQ,OAAjB,CAAyBjB,WAAW,CAACS,OAArC;EACD,CAZQ,EAYN,CAACN,aAAD,CAZM,CAAT;EAcAhC,SAAS,CAAC,MAAM;IACd+B,UAAU,CAACL,KAAD,EAAQC,IAAR,CAAV;EACD,CAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;EAIA,MAAMoB,UAAU,GAAIC,OAAD,IAAa;IAC9BhC,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWiC,OAAX,CAAD,CAAR;IACA1B,QAAQ,CAAC,KAAD,CAAR;EACD,CAHD;;EAIA,MAAM2B,UAAU,GAAIC,IAAD,IAAU;IAC3BlC,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAckC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASF,IAAI,CAACE,EAAlC,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMC,UAAU,GAAI1B,IAAD,IAAU;IAC3BC,OAAO,CAACD,IAAD,CAAP;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,QAAD;MAAU,KAAK,EAAE;QAAE2B,SAAS,EAAE;MAAb,CAAjB;MAAoC,OAAO,EAAE,MAAMhC,QAAQ,CAAC,IAAD,CAA3D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,OAAD;MAAS,OAAO,EAAED,KAAlB;MAAyB,UAAU,EAAEC,QAArC;MAAA,uBACE,QAAC,QAAD;QAAU,MAAM,EAAEyB;MAAlB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE,QAAC,UAAD;MAAY,MAAM,EAAE9B,MAApB;MAA4B,SAAS,EAAEC;IAAvC;MAAA;MAAA;MAAA;IAAA,QAPF,eASE,QAAC,QAAD;MAAU,MAAM,EAAE+B,UAAlB;MAA8B,KAAK,EAAE1B,sBAArC;MAA6D,KAAK,EAAC;IAAnE;MAAA;MAAA;MAAA;IAAA,QATF,eAUE;MAAK,GAAG,EAAEM,WAAV;MAAuB,KAAK,EAAE;QAAE0B,MAAM,EAAE;MAAV;IAA9B;MAAA;MAAA;MAAA;IAAA,QAVF,EAWGvB,aAAa,iBACZ;MAAK,KAAK,EAAE;QAAEwB,OAAO,EAAE,MAAX;QAAmBC,cAAc,EAAE,QAAnC;QAA6CH,SAAS,EAAE;MAAxD,CAAZ;MAAA,WACG,GADH,eAEE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GApEQxC,I;UAIwBR,Q,EAOKG,W;;;KAX7BK,I;AAsET,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}