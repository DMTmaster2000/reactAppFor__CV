{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar parser = require('socket.io-parser');\n\nvar debug = require('debug')('socket.io:client');\n\nvar url = require('url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Client;\n/**\n * Client constructor.\n *\n * @param {Server} server instance\n * @param {Socket} conn\n * @api private\n */\n\nfunction Client(server, conn) {\n  this.server = server;\n  this.conn = conn;\n  this.encoder = server.encoder;\n  this.decoder = new server.parser.Decoder();\n  this.id = conn.id;\n  this.request = conn.request;\n  this.setup();\n  this.sockets = {};\n  this.nsps = {};\n  this.connectBuffer = [];\n}\n/**\n * Sets up event listeners.\n *\n * @api private\n */\n\n\nClient.prototype.setup = function () {\n  this.onclose = this.onclose.bind(this);\n  this.ondata = this.ondata.bind(this);\n  this.onerror = this.onerror.bind(this);\n  this.ondecoded = this.ondecoded.bind(this);\n  this.decoder.on('decoded', this.ondecoded);\n  this.conn.on('data', this.ondata);\n  this.conn.on('error', this.onerror);\n  this.conn.on('close', this.onclose);\n};\n/**\n * Connects a client to a namespace.\n *\n * @param {String} name namespace\n * @param {Object} query the query parameters\n * @api private\n */\n\n\nClient.prototype.connect = function (name, query) {\n  if (this.server.nsps[name]) {\n    debug('connecting to namespace %s', name);\n    return this.doConnect(name, query);\n  }\n\n  this.server.checkNamespace(name, query, dynamicNsp => {\n    if (dynamicNsp) {\n      debug('dynamic namespace %s was created', dynamicNsp.name);\n      this.doConnect(name, query);\n    } else {\n      debug('creation of namespace %s was denied', name);\n      this.packet({\n        type: parser.ERROR,\n        nsp: name,\n        data: 'Invalid namespace'\n      });\n    }\n  });\n};\n/**\n * Connects a client to a namespace.\n *\n * @param {String} name namespace\n * @param {String} query the query parameters\n * @api private\n */\n\n\nClient.prototype.doConnect = function (name, query) {\n  var nsp = this.server.of(name);\n\n  if ('/' != name && !this.nsps['/']) {\n    this.connectBuffer.push(name);\n    return;\n  }\n\n  var self = this;\n  var socket = nsp.add(this, query, function () {\n    self.sockets[socket.id] = socket;\n    self.nsps[nsp.name] = socket;\n\n    if ('/' == nsp.name && self.connectBuffer.length > 0) {\n      self.connectBuffer.forEach(self.connect, self);\n      self.connectBuffer = [];\n    }\n  });\n};\n/**\n * Disconnects from all namespaces and closes transport.\n *\n * @api private\n */\n\n\nClient.prototype.disconnect = function () {\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].disconnect();\n    }\n  }\n\n  this.sockets = {};\n  this.close();\n};\n/**\n * Removes a socket. Called by each `Socket`.\n *\n * @api private\n */\n\n\nClient.prototype.remove = function (socket) {\n  if (this.sockets.hasOwnProperty(socket.id)) {\n    var nsp = this.sockets[socket.id].nsp.name;\n    delete this.sockets[socket.id];\n    delete this.nsps[nsp];\n  } else {\n    debug('ignoring remove for %s', socket.id);\n  }\n};\n/**\n * Closes the underlying connection.\n *\n * @api private\n */\n\n\nClient.prototype.close = function () {\n  if ('open' == this.conn.readyState) {\n    debug('forcing transport close');\n    this.conn.close();\n    this.onclose('forced server close');\n  }\n};\n/**\n * Writes a packet to the transport.\n *\n * @param {Object} packet object\n * @param {Object} opts\n * @api private\n */\n\n\nClient.prototype.packet = function (packet, opts) {\n  opts = opts || {};\n  var self = this; // this writes to the actual connection\n\n  function writeToEngine(encodedPackets) {\n    if (opts.volatile && !self.conn.transport.writable) return;\n\n    for (var i = 0; i < encodedPackets.length; i++) {\n      self.conn.write(encodedPackets[i], {\n        compress: opts.compress\n      });\n    }\n  }\n\n  if ('open' == this.conn.readyState) {\n    debug('writing packet %j', packet);\n\n    if (!opts.preEncoded) {\n      // not broadcasting, need to encode\n      this.encoder.encode(packet, writeToEngine); // encode, then write results to engine\n    } else {\n      // a broadcast pre-encodes a packet\n      writeToEngine(packet);\n    }\n  } else {\n    debug('ignoring packet write %j', packet);\n  }\n};\n/**\n * Called with incoming transport data.\n *\n * @api private\n */\n\n\nClient.prototype.ondata = function (data) {\n  // try/catch is needed for protocol violations (GH-1880)\n  try {\n    this.decoder.add(data);\n  } catch (e) {\n    this.onerror(e);\n  }\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\n\nClient.prototype.ondecoded = function (packet) {\n  if (parser.CONNECT == packet.type) {\n    this.connect(url.parse(packet.nsp).pathname, url.parse(packet.nsp, true).query);\n  } else {\n    var socket = this.nsps[packet.nsp];\n\n    if (socket) {\n      process.nextTick(function () {\n        socket.onpacket(packet);\n      });\n    } else {\n      debug('no socket for namespace %s', packet.nsp);\n    }\n  }\n};\n/**\n * Handles an error.\n *\n * @param {Object} err object\n * @api private\n */\n\n\nClient.prototype.onerror = function (err) {\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].onerror(err);\n    }\n  }\n\n  this.conn.close();\n};\n/**\n * Called upon transport close.\n *\n * @param {String} reason\n * @api private\n */\n\n\nClient.prototype.onclose = function (reason) {\n  debug('client close with reason %s', reason); // ignore a potential subsequent `close` event\n\n  this.destroy(); // `nsps` and `sockets` are cleaned up seamlessly\n\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].onclose(reason);\n    }\n  }\n\n  this.sockets = {};\n  this.decoder.destroy(); // clean up decoder\n};\n/**\n * Cleans up event listeners.\n *\n * @api private\n */\n\n\nClient.prototype.destroy = function () {\n  this.conn.removeListener('data', this.ondata);\n  this.conn.removeListener('error', this.onerror);\n  this.conn.removeListener('close', this.onclose);\n  this.decoder.removeListener('decoded', this.ondecoded);\n};","map":{"version":3,"names":["parser","require","debug","url","module","exports","Client","server","conn","encoder","decoder","Decoder","id","request","setup","sockets","nsps","connectBuffer","prototype","onclose","bind","ondata","onerror","ondecoded","on","connect","name","query","doConnect","checkNamespace","dynamicNsp","packet","type","ERROR","nsp","data","of","push","self","socket","add","length","forEach","disconnect","hasOwnProperty","close","remove","readyState","opts","writeToEngine","encodedPackets","volatile","transport","writable","i","write","compress","preEncoded","encode","e","CONNECT","parse","pathname","process","nextTick","onpacket","err","reason","destroy","removeListener"],"sources":["/Users/johnberetty/node_modules/socket.io/lib/client.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar debug = require('debug')('socket.io:client');\nvar url = require('url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Client;\n\n/**\n * Client constructor.\n *\n * @param {Server} server instance\n * @param {Socket} conn\n * @api private\n */\n\nfunction Client(server, conn){\n  this.server = server;\n  this.conn = conn;\n  this.encoder = server.encoder;\n  this.decoder = new server.parser.Decoder();\n  this.id = conn.id;\n  this.request = conn.request;\n  this.setup();\n  this.sockets = {};\n  this.nsps = {};\n  this.connectBuffer = [];\n}\n\n/**\n * Sets up event listeners.\n *\n * @api private\n */\n\nClient.prototype.setup = function(){\n  this.onclose = this.onclose.bind(this);\n  this.ondata = this.ondata.bind(this);\n  this.onerror = this.onerror.bind(this);\n  this.ondecoded = this.ondecoded.bind(this);\n\n  this.decoder.on('decoded', this.ondecoded);\n  this.conn.on('data', this.ondata);\n  this.conn.on('error', this.onerror);\n  this.conn.on('close', this.onclose);\n};\n\n/**\n * Connects a client to a namespace.\n *\n * @param {String} name namespace\n * @param {Object} query the query parameters\n * @api private\n */\n\nClient.prototype.connect = function(name, query){\n  if (this.server.nsps[name]) {\n    debug('connecting to namespace %s', name);\n    return this.doConnect(name, query);\n  }\n\n  this.server.checkNamespace(name, query, (dynamicNsp) => {\n    if (dynamicNsp) {\n      debug('dynamic namespace %s was created', dynamicNsp.name);\n      this.doConnect(name, query);\n    } else {\n      debug('creation of namespace %s was denied', name);\n      this.packet({ type: parser.ERROR, nsp: name, data: 'Invalid namespace' });\n    }\n  });\n};\n\n/**\n * Connects a client to a namespace.\n *\n * @param {String} name namespace\n * @param {String} query the query parameters\n * @api private\n */\n\nClient.prototype.doConnect = function(name, query){\n  var nsp = this.server.of(name);\n\n  if ('/' != name && !this.nsps['/']) {\n    this.connectBuffer.push(name);\n    return;\n  }\n\n  var self = this;\n  var socket = nsp.add(this, query, function(){\n    self.sockets[socket.id] = socket;\n    self.nsps[nsp.name] = socket;\n\n    if ('/' == nsp.name && self.connectBuffer.length > 0) {\n      self.connectBuffer.forEach(self.connect, self);\n      self.connectBuffer = [];\n    }\n  });\n};\n\n/**\n * Disconnects from all namespaces and closes transport.\n *\n * @api private\n */\n\nClient.prototype.disconnect = function(){\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].disconnect();\n    }\n  }\n  this.sockets = {};\n  this.close();\n};\n\n/**\n * Removes a socket. Called by each `Socket`.\n *\n * @api private\n */\n\nClient.prototype.remove = function(socket){\n  if (this.sockets.hasOwnProperty(socket.id)) {\n    var nsp = this.sockets[socket.id].nsp.name;\n    delete this.sockets[socket.id];\n    delete this.nsps[nsp];\n  } else {\n    debug('ignoring remove for %s', socket.id);\n  }\n};\n\n/**\n * Closes the underlying connection.\n *\n * @api private\n */\n\nClient.prototype.close = function(){\n  if ('open' == this.conn.readyState) {\n    debug('forcing transport close');\n    this.conn.close();\n    this.onclose('forced server close');\n  }\n};\n\n/**\n * Writes a packet to the transport.\n *\n * @param {Object} packet object\n * @param {Object} opts\n * @api private\n */\n\nClient.prototype.packet = function(packet, opts){\n  opts = opts || {};\n  var self = this;\n\n  // this writes to the actual connection\n  function writeToEngine(encodedPackets) {\n    if (opts.volatile && !self.conn.transport.writable) return;\n    for (var i = 0; i < encodedPackets.length; i++) {\n      self.conn.write(encodedPackets[i], { compress: opts.compress });\n    }\n  }\n\n  if ('open' == this.conn.readyState) {\n    debug('writing packet %j', packet);\n    if (!opts.preEncoded) { // not broadcasting, need to encode\n      this.encoder.encode(packet, writeToEngine); // encode, then write results to engine\n    } else { // a broadcast pre-encodes a packet\n      writeToEngine(packet);\n    }\n  } else {\n    debug('ignoring packet write %j', packet);\n  }\n};\n\n/**\n * Called with incoming transport data.\n *\n * @api private\n */\n\nClient.prototype.ondata = function(data){\n  // try/catch is needed for protocol violations (GH-1880)\n  try {\n    this.decoder.add(data);\n  } catch(e) {\n    this.onerror(e);\n  }\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nClient.prototype.ondecoded = function(packet) {\n  if (parser.CONNECT == packet.type) {\n    this.connect(url.parse(packet.nsp).pathname, url.parse(packet.nsp, true).query);\n  } else {\n    var socket = this.nsps[packet.nsp];\n    if (socket) {\n      process.nextTick(function() {\n        socket.onpacket(packet);\n      });\n    } else {\n      debug('no socket for namespace %s', packet.nsp);\n    }\n  }\n};\n\n/**\n * Handles an error.\n *\n * @param {Object} err object\n * @api private\n */\n\nClient.prototype.onerror = function(err){\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].onerror(err);\n    }\n  }\n  this.conn.close();\n};\n\n/**\n * Called upon transport close.\n *\n * @param {String} reason\n * @api private\n */\n\nClient.prototype.onclose = function(reason){\n  debug('client close with reason %s', reason);\n\n  // ignore a potential subsequent `close` event\n  this.destroy();\n\n  // `nsps` and `sockets` are cleaned up seamlessly\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].onclose(reason);\n    }\n  }\n  this.sockets = {};\n\n  this.decoder.destroy(); // clean up decoder\n};\n\n/**\n * Cleans up event listeners.\n *\n * @api private\n */\n\nClient.prototype.destroy = function(){\n  this.conn.removeListener('data', this.ondata);\n  this.conn.removeListener('error', this.onerror);\n  this.conn.removeListener('close', this.onclose);\n  this.decoder.removeListener('decoded', this.ondecoded);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}