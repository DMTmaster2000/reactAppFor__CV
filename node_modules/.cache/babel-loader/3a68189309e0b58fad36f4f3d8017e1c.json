{"ast":null,"code":"// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback;\n\nconst fs = require('graceful-fs');\n\nconst api = ['access', 'appendFile', 'chmod', 'chown', 'close', 'fchmod', 'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchown', 'link', 'lstat', 'mkdir', 'open', 'read', 'readFile', 'readdir', 'readlink', 'realpath', 'rename', 'rmdir', 'stat', 'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile']; // fs.mkdtemp() was added in Node.js v5.10.0, so check if it exists\n\ntypeof fs.mkdtemp === 'function' && api.push('mkdtemp'); // Export all keys:\n\nObject.keys(fs).forEach(key => {\n  exports[key] = fs[key];\n}); // Universalify async methods:\n\napi.forEach(method => {\n  exports[method] = u(fs[method]);\n}); // We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\n\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback);\n  }\n\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve);\n  });\n};","map":{"version":3,"names":["u","require","fromCallback","fs","api","mkdtemp","push","Object","keys","forEach","key","exports","method","exists","filename","callback","Promise","resolve"],"sources":["/Users/johnberetty/node_modules/fs-extra/lib/fs/index.js"],"sourcesContent":["// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchown',\n  'link',\n  'lstat',\n  'mkdir',\n  'open',\n  'read',\n  'readFile',\n  'readdir',\n  'readlink',\n  'realpath',\n  'rename',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'write',\n  'writeFile'\n]\n// fs.mkdtemp() was added in Node.js v5.10.0, so check if it exists\ntypeof fs.mkdtemp === 'function' && api.push('mkdtemp')\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n"],"mappings":"AAAA;AACA;AACA,MAAMA,CAAC,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,YAAlC;;AACA,MAAMC,EAAE,GAAGF,OAAO,CAAC,aAAD,CAAlB;;AAEA,MAAMG,GAAG,GAAG,CACV,QADU,EAEV,YAFU,EAGV,OAHU,EAIV,OAJU,EAKV,OALU,EAMV,QANU,EAOV,QAPU,EAQV,WARU,EASV,OATU,EAUV,OAVU,EAWV,WAXU,EAYV,SAZU,EAaV,QAbU,EAcV,MAdU,EAeV,OAfU,EAgBV,OAhBU,EAiBV,MAjBU,EAkBV,MAlBU,EAmBV,UAnBU,EAoBV,SApBU,EAqBV,UArBU,EAsBV,UAtBU,EAuBV,QAvBU,EAwBV,OAxBU,EAyBV,MAzBU,EA0BV,SA1BU,EA2BV,UA3BU,EA4BV,QA5BU,EA6BV,QA7BU,EA8BV,OA9BU,EA+BV,WA/BU,CAAZ,C,CAiCA;;AACA,OAAOD,EAAE,CAACE,OAAV,KAAsB,UAAtB,IAAoCD,GAAG,CAACE,IAAJ,CAAS,SAAT,CAApC,C,CAEA;;AACAC,MAAM,CAACC,IAAP,CAAYL,EAAZ,EAAgBM,OAAhB,CAAwBC,GAAG,IAAI;EAC7BC,OAAO,CAACD,GAAD,CAAP,GAAeP,EAAE,CAACO,GAAD,CAAjB;AACD,CAFD,E,CAIA;;AACAN,GAAG,CAACK,OAAJ,CAAYG,MAAM,IAAI;EACpBD,OAAO,CAACC,MAAD,CAAP,GAAkBZ,CAAC,CAACG,EAAE,CAACS,MAAD,CAAH,CAAnB;AACD,CAFD,E,CAIA;AACA;;AACAD,OAAO,CAACE,MAAR,GAAiB,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;EAC7C,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;IAClC,OAAOZ,EAAE,CAACU,MAAH,CAAUC,QAAV,EAAoBC,QAApB,CAAP;EACD;;EACD,OAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;IAC5B,OAAOd,EAAE,CAACU,MAAH,CAAUC,QAAV,EAAoBG,OAApB,CAAP;EACD,CAFM,CAAP;AAGD,CAPD"},"metadata":{},"sourceType":"script"}