{"ast":null,"code":"const Tunnel = require('./lib/Tunnel');\n\nmodule.exports = function localtunnel(arg1, arg2, arg3) {\n  const options = typeof arg1 === 'object' ? arg1 : { ...arg2,\n    port: arg1\n  };\n  const callback = typeof arg1 === 'object' ? arg2 : arg3;\n  const client = new Tunnel(options);\n\n  if (callback) {\n    client.open(err => err ? callback(err) : callback(null, client));\n    return client;\n  }\n\n  return new Promise((resolve, reject) => client.open(err => err ? reject(err) : resolve(client)));\n};","map":{"version":3,"names":["Tunnel","require","module","exports","localtunnel","arg1","arg2","arg3","options","port","callback","client","open","err","Promise","resolve","reject"],"sources":["/Users/johnberetty/node_modules/localtunnel/localtunnel.js"],"sourcesContent":["const Tunnel = require('./lib/Tunnel');\n\nmodule.exports = function localtunnel(arg1, arg2, arg3) {\n  const options = typeof arg1 === 'object' ? arg1 : { ...arg2, port: arg1 };\n  const callback = typeof arg1 === 'object' ? arg2 : arg3;\n  const client = new Tunnel(options);\n  if (callback) {\n    client.open(err => (err ? callback(err) : callback(null, client)));\n    return client;\n  }\n  return new Promise((resolve, reject) =>\n    client.open(err => (err ? reject(err) : resolve(client)))\n  );\n};\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;EACtD,MAAMC,OAAO,GAAG,OAAOH,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkC,EAAE,GAAGC,IAAL;IAAWG,IAAI,EAAEJ;EAAjB,CAAlD;EACA,MAAMK,QAAQ,GAAG,OAAOL,IAAP,KAAgB,QAAhB,GAA2BC,IAA3B,GAAkCC,IAAnD;EACA,MAAMI,MAAM,GAAG,IAAIX,MAAJ,CAAWQ,OAAX,CAAf;;EACA,IAAIE,QAAJ,EAAc;IACZC,MAAM,CAACC,IAAP,CAAYC,GAAG,IAAKA,GAAG,GAAGH,QAAQ,CAACG,GAAD,CAAX,GAAmBH,QAAQ,CAAC,IAAD,EAAOC,MAAP,CAAlD;IACA,OAAOA,MAAP;EACD;;EACD,OAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KACjBL,MAAM,CAACC,IAAP,CAAYC,GAAG,IAAKA,GAAG,GAAGG,MAAM,CAACH,GAAD,CAAT,GAAiBE,OAAO,CAACJ,MAAD,CAA/C,CADK,CAAP;AAGD,CAXD"},"metadata":{},"sourceType":"script"}