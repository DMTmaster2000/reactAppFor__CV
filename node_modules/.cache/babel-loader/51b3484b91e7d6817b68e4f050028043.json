{"ast":null,"code":"//var compression     = require(\"./compression\");\n//var noCachePlugin   = require(\"./no-cache\");\nvar overlayPlugin = require(\"./overlay-grid/overlay-grid\");\n\nvar clientFiles = require(\"./client-files\");\n\nconst PLUGIN_NAME = \"Remote Debug\";\n/**\n * @type {{plugin: Function, plugin:name: string, markup: string}}\n */\n\nmodule.exports = {\n  /**\n   * @param ui\n   * @param bs\n   */\n  \"plugin\": function (ui, bs) {\n    ui.overlayGrid = overlayPlugin.init(ui, bs); //ui.noCache     = noCachePlugin.init(ui, bs);\n    //ui.compression = compression.init(ui, bs);\n\n    /**\n     * Listen for file events\n     */\n\n    ui.listen(\"remote-debug:files\", {\n      \"enableFile\": function (file) {\n        ui.enableElement(file);\n      },\n      \"disableFile\": function (file) {\n        ui.disableElement(file);\n      }\n    });\n    /**\n     * Listen for overlay-grid events\n     */\n\n    ui.listen(\"remote-debug:overlay-grid\", ui.overlayGrid);\n  },\n\n  /**\n   * Hooks\n   */\n  \"hooks\": {\n    \"markup\": fileContent(\"remote-debug.html\"),\n    \"client:js\": [fileContent(\"/remote-debug.client.js\"), fileContent(\"/overlay-grid/overlay-grid.client.js\")],\n    \"templates\": [getPath(\"/overlay-grid/overlay-grid.html\")],\n    \"page\": {\n      path: \"/remote-debug\",\n      title: PLUGIN_NAME,\n      template: \"remote-debug.html\",\n      controller: PLUGIN_NAME.replace(\" \", \"\") + \"Controller\",\n      order: 4,\n      icon: \"bug\"\n    },\n    elements: clientFiles.files\n  },\n\n  /**\n   * Plugin name\n   */\n  \"plugin:name\": PLUGIN_NAME\n};\n/**\n * @param filepath\n * @returns {*}\n */\n\nfunction getPath(filepath) {\n  return require(\"path\").join(__dirname, filepath);\n}\n/**\n * @param filepath\n * @returns {*}\n */\n\n\nfunction fileContent(filepath) {\n  return require(\"fs\").readFileSync(getPath(filepath), \"utf-8\");\n}","map":{"version":3,"names":["overlayPlugin","require","clientFiles","PLUGIN_NAME","module","exports","ui","bs","overlayGrid","init","listen","file","enableElement","disableElement","fileContent","getPath","path","title","template","controller","replace","order","icon","elements","files","filepath","join","__dirname","readFileSync"],"sources":["/Users/johnberetty/node_modules/browser-sync-ui/lib/plugins/remote-debug/remote-debug.plugin.js"],"sourcesContent":["//var compression     = require(\"./compression\");\n//var noCachePlugin   = require(\"./no-cache\");\nvar overlayPlugin  = require(\"./overlay-grid/overlay-grid\");\nvar clientFiles    = require(\"./client-files\");\n\nconst PLUGIN_NAME  = \"Remote Debug\";\n\n/**\n * @type {{plugin: Function, plugin:name: string, markup: string}}\n */\nmodule.exports = {\n    /**\n     * @param ui\n     * @param bs\n     */\n    \"plugin\": function (ui, bs) {\n\n        ui.overlayGrid = overlayPlugin.init(ui, bs);\n\n        //ui.noCache     = noCachePlugin.init(ui, bs);\n        //ui.compression = compression.init(ui, bs);\n\n        /**\n         * Listen for file events\n         */\n        ui.listen(\"remote-debug:files\", {\n            \"enableFile\": function (file) {\n                ui.enableElement(file);\n            },\n            \"disableFile\": function (file) {\n                ui.disableElement(file);\n            }\n        });\n\n        /**\n         * Listen for overlay-grid events\n         */\n        ui.listen(\"remote-debug:overlay-grid\", ui.overlayGrid);\n    },\n    /**\n     * Hooks\n     */\n    \"hooks\": {\n        \"markup\": fileContent(\"remote-debug.html\"),\n        \"client:js\": [\n            fileContent(\"/remote-debug.client.js\"),\n            fileContent(\"/overlay-grid/overlay-grid.client.js\")\n        ],\n        \"templates\": [\n            getPath(\"/overlay-grid/overlay-grid.html\")\n        ],\n        \"page\": {\n            path: \"/remote-debug\",\n            title: PLUGIN_NAME,\n            template: \"remote-debug.html\",\n            controller: PLUGIN_NAME.replace(\" \", \"\") + \"Controller\",\n            order: 4,\n            icon: \"bug\"\n        },\n        elements: clientFiles.files\n    },\n    /**\n     * Plugin name\n     */\n    \"plugin:name\": PLUGIN_NAME\n};\n\n/**\n * @param filepath\n * @returns {*}\n */\nfunction getPath (filepath) {\n    return require(\"path\").join(__dirname, filepath);\n}\n\n/**\n * @param filepath\n * @returns {*}\n */\nfunction fileContent (filepath) {\n    return require(\"fs\").readFileSync(getPath(filepath), \"utf-8\");\n}"],"mappings":"AAAA;AACA;AACA,IAAIA,aAAa,GAAIC,OAAO,CAAC,6BAAD,CAA5B;;AACA,IAAIC,WAAW,GAAMD,OAAO,CAAC,gBAAD,CAA5B;;AAEA,MAAME,WAAW,GAAI,cAArB;AAEA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB;EACb;AACJ;AACA;AACA;EACI,UAAU,UAAUC,EAAV,EAAcC,EAAd,EAAkB;IAExBD,EAAE,CAACE,WAAH,GAAiBR,aAAa,CAACS,IAAd,CAAmBH,EAAnB,EAAuBC,EAAvB,CAAjB,CAFwB,CAIxB;IACA;;IAEA;AACR;AACA;;IACQD,EAAE,CAACI,MAAH,CAAU,oBAAV,EAAgC;MAC5B,cAAc,UAAUC,IAAV,EAAgB;QAC1BL,EAAE,CAACM,aAAH,CAAiBD,IAAjB;MACH,CAH2B;MAI5B,eAAe,UAAUA,IAAV,EAAgB;QAC3BL,EAAE,CAACO,cAAH,CAAkBF,IAAlB;MACH;IAN2B,CAAhC;IASA;AACR;AACA;;IACQL,EAAE,CAACI,MAAH,CAAU,2BAAV,EAAuCJ,EAAE,CAACE,WAA1C;EACH,CA5BY;;EA6Bb;AACJ;AACA;EACI,SAAS;IACL,UAAUM,WAAW,CAAC,mBAAD,CADhB;IAEL,aAAa,CACTA,WAAW,CAAC,yBAAD,CADF,EAETA,WAAW,CAAC,sCAAD,CAFF,CAFR;IAML,aAAa,CACTC,OAAO,CAAC,iCAAD,CADE,CANR;IASL,QAAQ;MACJC,IAAI,EAAE,eADF;MAEJC,KAAK,EAAEd,WAFH;MAGJe,QAAQ,EAAE,mBAHN;MAIJC,UAAU,EAAEhB,WAAW,CAACiB,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,IAA+B,YAJvC;MAKJC,KAAK,EAAE,CALH;MAMJC,IAAI,EAAE;IANF,CATH;IAiBLC,QAAQ,EAAErB,WAAW,CAACsB;EAjBjB,CAhCI;;EAmDb;AACJ;AACA;EACI,eAAerB;AAtDF,CAAjB;AAyDA;AACA;AACA;AACA;;AACA,SAASY,OAAT,CAAkBU,QAAlB,EAA4B;EACxB,OAAOxB,OAAO,CAAC,MAAD,CAAP,CAAgByB,IAAhB,CAAqBC,SAArB,EAAgCF,QAAhC,CAAP;AACH;AAED;AACA;AACA;AACA;;;AACA,SAASX,WAAT,CAAsBW,QAAtB,EAAgC;EAC5B,OAAOxB,OAAO,CAAC,IAAD,CAAP,CAAc2B,YAAd,CAA2Bb,OAAO,CAACU,QAAD,CAAlC,EAA8C,OAA9C,CAAP;AACH"},"metadata":{},"sourceType":"script"}