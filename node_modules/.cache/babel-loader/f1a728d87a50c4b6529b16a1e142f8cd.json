{"ast":null,"code":"var fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar Immutable = require(\"immutable\");\n/**\n * Take Browsersync plugins and determine if\n * any UI is provided by looking at data in the the\n * modules package.json file\n * @param plugins\n * @returns {*}\n */\n\n\nmodule.exports = function (plugins) {\n  return require(\"immutable\").fromJS(plugins)\n  /**\n   * Exclude the UI\n   */\n  .filter(function (plugin) {\n    return plugin.get(\"name\") !== \"UI\";\n  })\n  /**\n   * Attempt to retrieve a plugins package.json file\n   */\n  .map(function (plugin) {\n    var moduleName = plugin.getIn([\"opts\", \"moduleName\"]);\n    var pkg = {};\n\n    if (!moduleName) {\n      return plugin;\n    }\n\n    try {\n      pkg = require(\"immutable\").fromJS(require(path.join(moduleName, \"package.json\")));\n    } catch (e) {\n      console.error(e);\n      return plugin;\n    }\n\n    plugin = plugin.set(\"pkg\", pkg);\n    return plugin.set(\"relpath\", path.dirname(require.resolve(moduleName)));\n  })\n  /**\n   * Try to load markup for each plugin\n   */\n  .map(function (plugin) {\n    if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n      return plugin;\n    }\n\n    var markup = plugin.getIn([\"pkg\", \"browser-sync:ui\", \"hooks\", \"markup\"]);\n\n    if (markup) {\n      plugin = plugin.set(\"markup\", fs.readFileSync(path.resolve(plugin.get(\"relpath\"), markup), \"utf8\"));\n    }\n\n    return plugin;\n  })\n  /**\n   * Load any template files for the plugin\n   */\n  .map(function (plugin) {\n    if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n      return plugin;\n    }\n\n    return resolveIfPluginHas([\"pkg\", \"browser-sync:ui\", \"hooks\", \"templates\"], \"templates\", plugin);\n  })\n  /**\n   * Try to load Client JS for each plugin\n   */\n  .map(function (plugin) {\n    if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n      return plugin;\n    }\n\n    return resolveIfPluginHas([\"pkg\", \"browser-sync:ui\", \"hooks\", \"client:js\"], \"client:js\", plugin);\n  });\n};\n/**\n * If a plugin contains this option path, resolve/read the files\n * @param {Array} optPath - How to access the collection\n * @param {String} propName - Key for property access\n * @param {Immutable.Map} plugin\n * @returns {*}\n */\n\n\nfunction resolveIfPluginHas(optPath, propName, plugin) {\n  var opt = plugin.getIn(optPath);\n\n  if (opt.size) {\n    return plugin.set(propName, resolvePluginFiles(opt, plugin.get(\"relpath\")));\n  }\n\n  return plugin;\n}\n/**\n * Read & store a file from a plugin\n * @param {Array|Immutable.List} collection\n * @param {String} relPath\n * @returns {any}\n */\n\n\nfunction resolvePluginFiles(collection, relPath) {\n  return Immutable.fromJS(collection.reduce(function (all, item) {\n    var full = path.join(relPath, item);\n\n    if (fs.existsSync(full)) {\n      all[full] = fs.readFileSync(full, \"utf8\");\n    }\n\n    return all;\n  }, {}));\n}","map":{"version":3,"names":["fs","require","path","Immutable","module","exports","plugins","fromJS","filter","plugin","get","map","moduleName","getIn","pkg","join","e","console","error","set","dirname","resolve","hasIn","markup","readFileSync","resolveIfPluginHas","optPath","propName","opt","size","resolvePluginFiles","collection","relPath","reduce","all","item","full","existsSync"],"sources":["/Users/johnberetty/node_modules/browser-sync-ui/lib/resolve-plugins.js"],"sourcesContent":["var fs          = require(\"fs\");\nvar path        = require(\"path\");\nvar Immutable   = require(\"immutable\");\n\n/**\n * Take Browsersync plugins and determine if\n * any UI is provided by looking at data in the the\n * modules package.json file\n * @param plugins\n * @returns {*}\n */\nmodule.exports = function (plugins) {\n    return require(\"immutable\")\n        .fromJS(plugins)\n        /**\n         * Exclude the UI\n         */\n        .filter(function (plugin) {\n            return plugin.get(\"name\") !== \"UI\";\n        })\n        /**\n         * Attempt to retrieve a plugins package.json file\n         */\n        .map(function (plugin) {\n\n            var moduleName = plugin.getIn([\"opts\", \"moduleName\"]);\n            var pkg = {};\n\n            if (!moduleName) {\n                return plugin;\n            }\n\n            try {\n                pkg = require(\"immutable\").fromJS(require(path.join(moduleName, \"package.json\")));\n            } catch (e) {\n                console.error(e);\n                return plugin;\n            }\n\n            plugin = plugin.set(\"pkg\", pkg);\n\n            return plugin.set(\"relpath\", path.dirname(require.resolve(moduleName)));\n        })\n        /**\n         * Try to load markup for each plugin\n         */\n        .map(function (plugin) {\n\n            if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n                return plugin;\n            }\n\n            var markup    = plugin.getIn([\"pkg\", \"browser-sync:ui\", \"hooks\", \"markup\"]);\n\n            if (markup) {\n                plugin = plugin.set(\"markup\", fs.readFileSync(path.resolve(plugin.get(\"relpath\"), markup), \"utf8\"));\n            }\n\n            return plugin;\n        })\n        /**\n         * Load any template files for the plugin\n         */\n        .map(function (plugin) {\n\n            if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n                return plugin;\n            }\n\n            return resolveIfPluginHas([\"pkg\", \"browser-sync:ui\", \"hooks\", \"templates\"], \"templates\", plugin);\n        })\n        /**\n         * Try to load Client JS for each plugin\n         */\n        .map(function (plugin) {\n\n            if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n                return plugin;\n            }\n\n            return resolveIfPluginHas([\"pkg\", \"browser-sync:ui\", \"hooks\", \"client:js\"], \"client:js\", plugin);\n        });\n};\n\n/**\n * If a plugin contains this option path, resolve/read the files\n * @param {Array} optPath - How to access the collection\n * @param {String} propName - Key for property access\n * @param {Immutable.Map} plugin\n * @returns {*}\n */\nfunction resolveIfPluginHas(optPath, propName, plugin) {\n    var opt = plugin.getIn(optPath);\n    if (opt.size) {\n        return plugin.set(\n            propName,\n            resolvePluginFiles(opt, plugin.get(\"relpath\"))\n        );\n    }\n    return plugin;\n}\n\n/**\n * Read & store a file from a plugin\n * @param {Array|Immutable.List} collection\n * @param {String} relPath\n * @returns {any}\n */\nfunction resolvePluginFiles (collection, relPath) {\n    return Immutable.fromJS(collection.reduce(function (all, item) {\n        var full = path.join(relPath, item);\n        if (fs.existsSync(full)) {\n            all[full] = fs.readFileSync(full, \"utf8\");\n        }\n        return all;\n    }, {}));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}