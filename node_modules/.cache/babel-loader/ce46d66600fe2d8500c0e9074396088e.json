{"ast":null,"code":"\"use strict\";\n\nvar config = require(\"../config\");\n\nvar logger = require(\"../logger\").logger;\n\nvar fs = require(\"fs\");\n\nvar _ = require(\"../lodash.custom\");\n\nvar path = require(\"path\");\n\nvar info = {\n  /**\n   * Version info\n   * @param {Object} pjson\n   * @returns {String}\n   */\n  getVersion: function (pjson) {\n    console.log(pjson.version);\n    return pjson.version;\n  },\n\n  /**\n   * Retrieve the config file\n   * @returns {*}\n   * @private\n   * @param filePath\n   */\n  getConfigFile: function (filePath) {\n    return require(path.resolve(filePath));\n  },\n\n  /**\n   * Generate an example Config file.\n   */\n  makeConfig: function (cwd, cb) {\n    var opts = require(path.join(__dirname, \"..\", config.configFile));\n\n    var userOpts = {};\n    var ignore = [\"excludedFileTypes\", \"injectFileTypes\", \"snippetOptions\"];\n    Object.keys(opts).forEach(function (key) {\n      if (!_.includes(ignore, key)) {\n        userOpts[key] = opts[key];\n      }\n    });\n    var file = fs.readFileSync(config.template, \"utf8\");\n    file = file.replace(\"//OPTS\", JSON.stringify(userOpts, null, 4));\n    fs.writeFile(path.resolve(cwd, config.userFile), file, function () {\n      logger.info(\"Config file created {magenta:%s}\", config.userFile);\n      logger.info(\"To use it, in the same directory run: \" + \"{cyan:browser-sync start --config bs-config.js}\");\n      cb();\n    });\n  }\n};\nmodule.exports = info;","map":{"version":3,"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAAlC;;AAEA,IAAIC,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIG,CAAC,GAAGH,OAAO,CAAC,kBAAD,CAAf;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIK,IAAI,GAAG;EACP;;;;;EAKAC,UAAU,EAAE,UAASC,KAAT,EAAc;IACtBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;IACA,OAAOH,KAAK,CAACG,OAAb;EACH,CATM;;EAUP;;;;;;EAMAC,aAAa,EAAE,UAASC,QAAT,EAAiB;IAC5B,OAAOZ,OAAO,CAACI,IAAI,CAACS,OAAL,CAAaD,QAAb,CAAD,CAAd;EACH,CAlBM;;EAmBP;;;EAGAE,UAAU,EAAE,UAASC,GAAT,EAAcC,EAAd,EAAgB;IACxB,IAAIC,IAAI,GAAGjB,OAAO,CAACI,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2BpB,MAAM,CAACqB,UAAlC,CAAD,CAAlB;;IACA,IAAIC,QAAQ,GAAG,EAAf;IAEA,IAAIC,MAAM,GAAG,CAAC,mBAAD,EAAsB,iBAAtB,EAAyC,gBAAzC,CAAb;IAEAC,MAAM,CAACC,IAAP,CAAYP,IAAZ,EAAkBQ,OAAlB,CAA0B,UAASC,GAAT,EAAY;MAClC,IAAI,CAACvB,CAAC,CAACwB,QAAF,CAAWL,MAAX,EAAmBI,GAAnB,CAAL,EAA8B;QAC1BL,QAAQ,CAACK,GAAD,CAAR,GAAgBT,IAAI,CAACS,GAAD,CAApB;MACH;IACJ,CAJD;IAMA,IAAIE,IAAI,GAAG1B,EAAE,CAAC2B,YAAH,CAAgB9B,MAAM,CAAC+B,QAAvB,EAAiC,MAAjC,CAAX;IACAF,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,QAAb,EAAuBC,IAAI,CAACC,SAAL,CAAeZ,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAvB,CAAP;IAEAnB,EAAE,CAACgC,SAAH,CAAa9B,IAAI,CAACS,OAAL,CAAaE,GAAb,EAAkBhB,MAAM,CAACoC,QAAzB,CAAb,EAAiDP,IAAjD,EAAuD;MACnD3B,MAAM,CAACI,IAAP,CAAY,kCAAZ,EAAgDN,MAAM,CAACoC,QAAvD;MACAlC,MAAM,CAACI,IAAP,CACI,2CACI,iDAFR;MAIAW,EAAE;IACL,CAPD;EAQH;AA7CM,CAAX;AAgDAoB,MAAM,CAACC,OAAP,GAAiBhC,IAAjB","names":["config","require","logger","fs","_","path","info","getVersion","pjson","console","log","version","getConfigFile","filePath","resolve","makeConfig","cwd","cb","opts","join","__dirname","configFile","userOpts","ignore","Object","keys","forEach","key","includes","file","readFileSync","template","replace","JSON","stringify","writeFile","userFile","module","exports"],"sources":["../../lib/cli/cli-info.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}