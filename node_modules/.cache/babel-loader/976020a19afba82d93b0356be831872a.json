{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst path = require('path');\n\nconst ncp = require('./ncp');\n\nconst mkdir = require('../mkdirs');\n\nconst pathExists = require('../path-exists').pathExists;\n\nfunction copy(src, dest, options, callback) {\n  if (typeof options === 'function' && !callback) {\n    callback = options;\n    options = {};\n  } else if (typeof options === 'function' || options instanceof RegExp) {\n    options = {\n      filter: options\n    };\n  }\n\n  callback = callback || function () {};\n\n  options = options || {}; // Warn about using preserveTimestamps on 32-bit node:\n\n  if (options.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`);\n  } // don't allow src and dest to be the same\n\n\n  const basePath = process.cwd();\n  const currentPath = path.resolve(basePath, src);\n  const targetPath = path.resolve(basePath, dest);\n  if (currentPath === targetPath) return callback(new Error('Source and destination must not be the same.'));\n  fs.lstat(src, (err, stats) => {\n    if (err) return callback(err);\n    let dir = null;\n\n    if (stats.isDirectory()) {\n      const parts = dest.split(path.sep);\n      parts.pop();\n      dir = parts.join(path.sep);\n    } else {\n      dir = path.dirname(dest);\n    }\n\n    pathExists(dir, (err, dirExists) => {\n      if (err) return callback(err);\n      if (dirExists) return ncp(src, dest, options, callback);\n      mkdir.mkdirs(dir, err => {\n        if (err) return callback(err);\n        ncp(src, dest, options, callback);\n      });\n    });\n  });\n}\n\nmodule.exports = copy;","map":{"version":3,"names":["fs","require","path","ncp","mkdir","pathExists","copy","src","dest","options","callback","RegExp","filter","preserveTimestamps","process","arch","console","warn","basePath","cwd","currentPath","resolve","targetPath","Error","lstat","err","stats","dir","isDirectory","parts","split","sep","pop","join","dirname","dirExists","mkdirs","module","exports"],"sources":["/Users/johnberetty/node_modules/fs-extra/lib/copy/copy.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst ncp = require('./ncp')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction copy (src, dest, options, callback) {\n  if (typeof options === 'function' && !callback) {\n    callback = options\n    options = {}\n  } else if (typeof options === 'function' || options instanceof RegExp) {\n    options = {filter: options}\n  }\n  callback = callback || function () {}\n  options = options || {}\n\n  // Warn about using preserveTimestamps on 32-bit node:\n  if (options.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  // don't allow src and dest to be the same\n  const basePath = process.cwd()\n  const currentPath = path.resolve(basePath, src)\n  const targetPath = path.resolve(basePath, dest)\n  if (currentPath === targetPath) return callback(new Error('Source and destination must not be the same.'))\n\n  fs.lstat(src, (err, stats) => {\n    if (err) return callback(err)\n\n    let dir = null\n    if (stats.isDirectory()) {\n      const parts = dest.split(path.sep)\n      parts.pop()\n      dir = parts.join(path.sep)\n    } else {\n      dir = path.dirname(dest)\n    }\n\n    pathExists(dir, (err, dirExists) => {\n      if (err) return callback(err)\n      if (dirExists) return ncp(src, dest, options, callback)\n      mkdir.mkdirs(dir, err => {\n        if (err) return callback(err)\n        ncp(src, dest, options, callback)\n      })\n    })\n  })\n}\n\nmodule.exports = copy\n"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,WAAD,CAArB;;AACA,MAAMI,UAAU,GAAGJ,OAAO,CAAC,gBAAD,CAAP,CAA0BI,UAA7C;;AAEA,SAASC,IAAT,CAAeC,GAAf,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,QAAnC,EAA6C;EAC3C,IAAI,OAAOD,OAAP,KAAmB,UAAnB,IAAiC,CAACC,QAAtC,EAAgD;IAC9CA,QAAQ,GAAGD,OAAX;IACAA,OAAO,GAAG,EAAV;EACD,CAHD,MAGO,IAAI,OAAOA,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,YAAYE,MAAxD,EAAgE;IACrEF,OAAO,GAAG;MAACG,MAAM,EAAEH;IAAT,CAAV;EACD;;EACDC,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;EACAD,OAAO,GAAGA,OAAO,IAAI,EAArB,CAR2C,CAU3C;;EACA,IAAIA,OAAO,CAACI,kBAAR,IAA8BC,OAAO,CAACC,IAAR,KAAiB,MAAnD,EAA2D;IACzDC,OAAO,CAACC,IAAR,CAAc;AAClB,iEADI;EAED,CAd0C,CAgB3C;;;EACA,MAAMC,QAAQ,GAAGJ,OAAO,CAACK,GAAR,EAAjB;EACA,MAAMC,WAAW,GAAGlB,IAAI,CAACmB,OAAL,CAAaH,QAAb,EAAuBX,GAAvB,CAApB;EACA,MAAMe,UAAU,GAAGpB,IAAI,CAACmB,OAAL,CAAaH,QAAb,EAAuBV,IAAvB,CAAnB;EACA,IAAIY,WAAW,KAAKE,UAApB,EAAgC,OAAOZ,QAAQ,CAAC,IAAIa,KAAJ,CAAU,8CAAV,CAAD,CAAf;EAEhCvB,EAAE,CAACwB,KAAH,CAASjB,GAAT,EAAc,CAACkB,GAAD,EAAMC,KAAN,KAAgB;IAC5B,IAAID,GAAJ,EAAS,OAAOf,QAAQ,CAACe,GAAD,CAAf;IAET,IAAIE,GAAG,GAAG,IAAV;;IACA,IAAID,KAAK,CAACE,WAAN,EAAJ,EAAyB;MACvB,MAAMC,KAAK,GAAGrB,IAAI,CAACsB,KAAL,CAAW5B,IAAI,CAAC6B,GAAhB,CAAd;MACAF,KAAK,CAACG,GAAN;MACAL,GAAG,GAAGE,KAAK,CAACI,IAAN,CAAW/B,IAAI,CAAC6B,GAAhB,CAAN;IACD,CAJD,MAIO;MACLJ,GAAG,GAAGzB,IAAI,CAACgC,OAAL,CAAa1B,IAAb,CAAN;IACD;;IAEDH,UAAU,CAACsB,GAAD,EAAM,CAACF,GAAD,EAAMU,SAAN,KAAoB;MAClC,IAAIV,GAAJ,EAAS,OAAOf,QAAQ,CAACe,GAAD,CAAf;MACT,IAAIU,SAAJ,EAAe,OAAOhC,GAAG,CAACI,GAAD,EAAMC,IAAN,EAAYC,OAAZ,EAAqBC,QAArB,CAAV;MACfN,KAAK,CAACgC,MAAN,CAAaT,GAAb,EAAkBF,GAAG,IAAI;QACvB,IAAIA,GAAJ,EAAS,OAAOf,QAAQ,CAACe,GAAD,CAAf;QACTtB,GAAG,CAACI,GAAD,EAAMC,IAAN,EAAYC,OAAZ,EAAqBC,QAArB,CAAH;MACD,CAHD;IAID,CAPS,CAAV;EAQD,CApBD;AAqBD;;AAED2B,MAAM,CAACC,OAAP,GAAiBhC,IAAjB"},"metadata":{},"sourceType":"script"}