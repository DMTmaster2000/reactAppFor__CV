{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./lodash.custom\");\n\nvar utils = require(\"./utils\");\n\nvar Rx = require(\"rx\");\n/**\n * Plugin interface\n * @returns {*|function(this:exports)}\n */\n\n\nmodule.exports.plugin = function (bs) {\n  var options = bs.options;\n  var emitter = bs.emitter;\n  var defaultWatchOptions = options.get(\"watchOptions\").toJS();\n  return options.get(\"files\").reduce(function (map, glob, namespace) {\n    /**\n     * Default CB when not given\n     * @param event\n     * @param path\n     */\n    var fn = function (event, path) {\n      emitter.emit(\"file:changed\", {\n        event: event,\n        path: path,\n        namespace: namespace\n      });\n    };\n\n    var jsItem = glob.toJS();\n\n    if (jsItem.globs.length) {\n      var watcher = watch(jsItem.globs, defaultWatchOptions, fn);\n      map[namespace] = {\n        watchers: [watcher]\n      };\n    }\n\n    if (jsItem.objs.length) {\n      jsItem.objs.forEach(function (item) {\n        if (!_.isFunction(item.fn)) {\n          item.fn = fn;\n        }\n\n        var watcher = watch(item.match, item.options || defaultWatchOptions, item.fn.bind(bs.publicInstance));\n\n        if (!map[namespace]) {\n          map[namespace] = {\n            watchers: [watcher]\n          };\n        } else {\n          map[namespace].watchers.push(watcher);\n        }\n      });\n    }\n\n    return map;\n  }, {});\n};\n/**\n * @param patterns\n * @param opts\n * @param cb\n * @returns {*}\n */\n\n\nfunction watch(patterns, opts, cb) {\n  if (typeof opts === \"function\") {\n    cb = opts;\n    opts = {};\n  }\n\n  var watcher = require(\"chokidar\").watch(patterns, opts);\n\n  if (_.isFunction(cb)) {\n    watcher.on(\"all\", cb);\n  } // watcher.on('ready', () => {\n  //     console.log(watcher.getWatched());\n  // });\n\n\n  return watcher;\n}\n\nmodule.exports.watch = watch;","map":{"version":3,"mappings":"AAAA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,iBAAD,CAAf;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;AAEA;;;;;;AAIAG,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB,UAASC,EAAT,EAAW;EAC/B,IAAIC,OAAO,GAAGD,EAAE,CAACC,OAAjB;EACA,IAAIC,OAAO,GAAGF,EAAE,CAACE,OAAjB;EAEA,IAAIC,mBAAmB,GAAGF,OAAO,CAACG,GAAR,CAAY,cAAZ,EAA4BC,IAA5B,EAA1B;EAEA,OAAOJ,OAAO,CAACG,GAAR,CAAY,OAAZ,EAAqBE,MAArB,CAA4B,UAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA6B;IAC5D;;;;;IAKA,IAAIC,EAAE,GAAG,UAASC,KAAT,EAAgBC,IAAhB,EAAoB;MACzBV,OAAO,CAACW,IAAR,CAAa,cAAb,EAA6B;QACzBF,KAAK,EAAEA,KADkB;QAEzBC,IAAI,EAAEA,IAFmB;QAGzBH,SAAS,EAAEA;MAHc,CAA7B;IAKH,CAND;;IAQA,IAAIK,MAAM,GAAGN,IAAI,CAACH,IAAL,EAAb;;IAEA,IAAIS,MAAM,CAACC,KAAP,CAAaC,MAAjB,EAAyB;MACrB,IAAIC,OAAO,GAAGC,KAAK,CAACJ,MAAM,CAACC,KAAR,EAAeZ,mBAAf,EAAoCO,EAApC,CAAnB;MACAH,GAAG,CAACE,SAAD,CAAH,GAAiB;QACbU,QAAQ,EAAE,CAACF,OAAD;MADG,CAAjB;IAGH;;IAED,IAAIH,MAAM,CAACM,IAAP,CAAYJ,MAAhB,EAAwB;MACpBF,MAAM,CAACM,IAAP,CAAYC,OAAZ,CAAoB,UAASC,IAAT,EAAa;QAC7B,IAAI,CAAC7B,CAAC,CAAC8B,UAAF,CAAaD,IAAI,CAACZ,EAAlB,CAAL,EAA4B;UACxBY,IAAI,CAACZ,EAAL,GAAUA,EAAV;QACH;;QACD,IAAIO,OAAO,GAAGC,KAAK,CACfI,IAAI,CAACE,KADU,EAEfF,IAAI,CAACrB,OAAL,IAAgBE,mBAFD,EAGfmB,IAAI,CAACZ,EAAL,CAAQe,IAAR,CAAazB,EAAE,CAAC0B,cAAhB,CAHe,CAAnB;;QAKA,IAAI,CAACnB,GAAG,CAACE,SAAD,CAAR,EAAqB;UACjBF,GAAG,CAACE,SAAD,CAAH,GAAiB;YACbU,QAAQ,EAAE,CAACF,OAAD;UADG,CAAjB;QAGH,CAJD,MAIO;UACHV,GAAG,CAACE,SAAD,CAAH,CAAeU,QAAf,CAAwBQ,IAAxB,CAA6BV,OAA7B;QACH;MACJ,CAhBD;IAiBH;;IAED,OAAOV,GAAP;EACH,CA5CM,EA4CJ,EA5CI,CAAP;AA6CH,CAnDD;AAqDA;;;;;;;;AAMA,SAASW,KAAT,CAAeU,QAAf,EAAyBC,IAAzB,EAA+BC,EAA/B,EAAiC;EAC7B,IAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;IAC5BC,EAAE,GAAGD,IAAL;IACAA,IAAI,GAAG,EAAP;EACH;;EAED,IAAIZ,OAAO,GAAGvB,OAAO,CAAC,UAAD,CAAP,CAAoBwB,KAApB,CAA0BU,QAA1B,EAAoCC,IAApC,CAAd;;EAEA,IAAIpC,CAAC,CAAC8B,UAAF,CAAaO,EAAb,CAAJ,EAAsB;IAClBb,OAAO,CAACc,EAAR,CAAW,KAAX,EAAkBD,EAAlB;EACH,CAV4B,CAY7B;EACA;EACA;;;EAEA,OAAOb,OAAP;AACH;;AAEDpB,MAAM,CAACC,OAAP,CAAeoB,KAAf,GAAuBA,KAAvB","names":["_","require","utils","Rx","module","exports","plugin","bs","options","emitter","defaultWatchOptions","get","toJS","reduce","map","glob","namespace","fn","event","path","emit","jsItem","globs","length","watcher","watch","watchers","objs","forEach","item","isFunction","match","bind","publicInstance","push","patterns","opts","cb","on"],"sources":["../lib/file-watcher.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}