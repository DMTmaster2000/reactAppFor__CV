[{"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/index.js":"1","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/App.js":"2","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/pages/About.jsx":"3","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/pages/Post.jsx":"4","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/AppRouter.jsx":"5","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/Navbar/Navbar.jsx":"6","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/context/index.js":"7","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/PostFilter.jsx":"8","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/PostList.jsx":"9","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/PostForm.jsx":"10","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/hooks/usePosts.js":"11","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/hooks/useFetching.js":"12","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/API/PostService.js":"13","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/utils/pages.js":"14","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/pages/PostIdPage.jsx":"15","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/router/router.js":"16","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/button/MyButton.jsx":"17","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/MyModal/MyModal.jsx":"18","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/loader/Loader.jsx":"19","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/pagination/Pagination.jsx":"20","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/PostItem.jsx":"21","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/pages/Login.jsx":"22","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/select/MySelect.jsx":"23","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/input/MyInput.jsx":"24"},{"size":468,"mtime":1653417343818,"results":"25","hashOfConfig":"26"},{"size":717,"mtime":1660400706696,"results":"27","hashOfConfig":"26"},{"size":181,"mtime":1653474413574,"results":"28","hashOfConfig":"26"},{"size":2784,"mtime":1660400771674,"results":"29","hashOfConfig":"26"},{"size":694,"mtime":1660400907891,"results":"30","hashOfConfig":"26"},{"size":763,"mtime":1657111157043,"results":"31","hashOfConfig":"26"},{"size":88,"mtime":1653649737214,"results":"32","hashOfConfig":"26"},{"size":643,"mtime":1653304013998,"results":"33","hashOfConfig":"26"},{"size":727,"mtime":1653299175358,"results":"34","hashOfConfig":"26"},{"size":924,"mtime":1660400842838,"results":"35","hashOfConfig":"26"},{"size":582,"mtime":1653302355469,"results":"36","hashOfConfig":"26"},{"size":405,"mtime":1660400679495,"results":"37","hashOfConfig":"26"},{"size":575,"mtime":1653485817540,"results":"38","hashOfConfig":"26"},{"size":239,"mtime":1653320549475,"results":"39","hashOfConfig":"26"},{"size":1485,"mtime":1657114892871,"results":"40","hashOfConfig":"26"},{"size":593,"mtime":1657112326545,"results":"41","hashOfConfig":"26"},{"size":233,"mtime":1652178441264,"results":"42","hashOfConfig":"26"},{"size":448,"mtime":1653298199035,"results":"43","hashOfConfig":"26"},{"size":169,"mtime":1653313947345,"results":"44","hashOfConfig":"26"},{"size":457,"mtime":1653395672410,"results":"45","hashOfConfig":"26"},{"size":595,"mtime":1653480513909,"results":"46","hashOfConfig":"26"},{"size":762,"mtime":1653657490863,"results":"47","hashOfConfig":"26"},{"size":401,"mtime":1653304008149,"results":"48","hashOfConfig":"26"},{"size":222,"mtime":1652191393952,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"45pohm",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/index.js",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/App.js",[],[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/pages/About.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/pages/Post.jsx",["127","128","129"],[],"import React, { useState, useEffect } from 'react';\nimport PostFilter from '../components/PostFilter';\nimport PostForm from '../components/PostForm';\nimport PostList from '../components/PostList';\nimport MyButton from '../components/UI/button/MyButton';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport { usePosts } from '../hooks/usePosts';\nimport '../styles/App.css';\nimport PostService from '../API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport { useFetching } from '../hooks/useFetching';\nimport { getPageCount} from '../components/utils/pages';\nimport { useRef } from 'react';\n\nfunction Post() {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({ sort: '', query: '' });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit] = useState(10);\n  const [page, setPage] = useState(1);\n  const lastElement = useRef();\n  const observer = useRef();\n\n  const [fetchPosts, isPostLoading] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n\n  useEffect(() => {\n    if (isPostLoading) return;\n    if (observer.current) observer.current.disconnect();\n    var callback = function (entries, observer) {\n      if (entries[0].isIntersecting && page < totalPages) {\n        console.log(page);\n        setPage(page + 1);\n      }\n    };\n    observer.current = new IntersectionObserver(callback);\n    //console.log(observer.current);\n    observer.current.observe(lastElement.current);\n  }, [isPostLoading]);\n\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [page]);\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const removePost = (post) => {\n    setPosts(posts.filter((p) => p.id !== post.id));\n  };\n\n  const changePage = (page) => {\n    setPage(page);\n  };\n\n  return (\n    <div className=\"App\">\n      <MyButton style={{ marginTop: 30 }} onClick={() => setModal(true)}>\n        Create User\n      </MyButton>\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost} />\n      </MyModal>\n      <PostFilter filter={filter} setFilter={setFilter} />\n\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"title\" />\n      <div ref={lastElement} style={{ height: 30 }}></div>\n      {isPostLoading && (\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n          {' '}\n          <Loader />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Post;\n","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/AppRouter.jsx",["130"],[],"import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { privateRoutes, publicRoutes } from './router/router';\nimport { AuthContext } from '../context';\nimport { useContext } from 'react';\n\nconst AppRouter = () => {\n  const { isAuth } = useContext(AuthContext);\n  return isAuth ? (\n    <Routes>\n      {privateRoutes.map((route, index) => (\n        <Route element={route.element} path={route.path} key={index + 1} />\n      ))}\n    </Routes>\n  ) : (\n    <Routes>\n      {publicRoutes.map((route, index) => (\n        <Route element={route.element} path={route.path} key={index + 1} />\n      ))}\n    </Routes>\n  );\n};\n\nexport default AppRouter;\n","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/Navbar/Navbar.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/context/index.js",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/PostFilter.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/PostList.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/PostForm.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/hooks/usePosts.js",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/hooks/useFetching.js",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/API/PostService.js",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/utils/pages.js",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/pages/PostIdPage.jsx",["131"],[],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PostService from '../API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport { useFetching } from '../hooks/useFetching';\n\nconst PostIdPage = () => {\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [fetchPostById, isLoading] = useFetching(async (id) => {\n    const response = await PostService.getByid(id);\n    setPost(response.data);\n  });\n  const [fetchComments, isComLoading] = useFetching(async (id) => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        textAlign: 'center',\n      }}>\n      <h1 style={{ marginTop: 15, marginBottom: 15 }}>You are on page with ID = {params.id}</h1>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div>\n          {post.id}. {post.title}\n        </div>\n      )}\n      {isComLoading ? (\n        <Loader />\n      ) : (\n        comments.map((comm) => (\n          <div key={comm.id} style={{ marginTop: 15 }}>\n            <h4>{comm.email}</h4>\n            <h5>{comm.body}</h5>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostIdPage;\n","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/router/router.js",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/button/MyButton.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/MyModal/MyModal.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/loader/Loader.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/pagination/Pagination.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/PostItem.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/pages/Login.jsx",["132"],[],"import React from 'react';\nimport { useContext } from 'react';\nimport MyButton from '../components/UI/button/MyButton';\nimport MyInput from '../components/UI/input/MyInput';\nimport { AuthContext } from '../context';\n\nconst Login = () => {\n\tconst { isAuth, setIsAuth } = useContext(AuthContext)\n\n\tconst login = event => {\n\t\tevent.preventDefault()\n\t\tlocalStorage.setItem('auth', 'true')\n\t\tsetIsAuth(true)\n\t}\n\treturn (\n\t\t<div style={{ marginTop: 80, }}>\n\t\t\t<h1 style={{ color: 'teal', textAlign: 'center', marginBottom: 20 }}>Login Page</h1>\n\t\t\t<form >\n\t\t\t\t<MyInput type='text' placeholder=\"Enter login\" />\n\t\t\t\t<MyInput type='password' placeholder=\"Enter password\" />\n\t\t\t\t<MyButton onClick={login}>Login</MyButton>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default Login;\n","/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/select/MySelect.jsx",[],[],"/Users/johnberetty/Desktop/gitHub/my-app-gitHub/my-app/src/components/UI/input/MyInput.jsx",[],[],{"ruleId":"133","severity":1,"message":"134","line":45,"column":6,"nodeType":"135","endLine":45,"endColumn":21,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":49,"column":6,"nodeType":"135","endLine":49,"endColumn":12,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":59,"column":9,"nodeType":"141","messageId":"142","endLine":59,"endColumn":19},{"ruleId":"139","severity":1,"message":"143","line":2,"column":27,"nodeType":"141","messageId":"142","endLine":2,"endColumn":33},{"ruleId":"133","severity":1,"message":"144","line":23,"column":6,"nodeType":"135","endLine":23,"endColumn":8,"suggestions":"145"},{"ruleId":"139","severity":1,"message":"146","line":8,"column":10,"nodeType":"141","messageId":"142","endLine":8,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page' and 'totalPages'. Either include them or remove the dependency array. You can also do a functional update 'setPage(p => ...)' if you only need 'page' in the 'setPage' call.","ArrayExpression",["147"],"React Hook useEffect has missing dependencies: 'fetchPosts' and 'limit'. Either include them or remove the dependency array.",["148"],"no-unused-vars","'changePage' is assigned a value but never used.","Identifier","unusedVar","'Router' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchComments', 'fetchPostById', and 'params.id'. Either include them or remove the dependency array.",["149"],"'isAuth' is assigned a value but never used.",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [isPostLoading, page, totalPages]",{"range":"156","text":"157"},"Update the dependencies array to be: [fetchPosts, limit, page]",{"range":"158","text":"159"},"Update the dependencies array to be: [fetchComments, fetchPostById, params.id]",{"range":"160","text":"161"},[1780,1795],"[isPostLoading, page, totalPages]",[1853,1859],"[fetchPosts, limit, page]",[802,804],"[fetchComments, fetchPostById, params.id]"]